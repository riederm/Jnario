package org.jnario.spec.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.jnario.spec.services.SpecGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSpecParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Synchronized", "Instanceof", "Extension", "Protected", "Transient", "Abstract", "Describe", "Dispatch", "Override", "Strictfp", "Volatile", "Context", "Default", "Extends", "Finally", "Package", "Pending", "Private", "Assert", "Before", "Import", "Native", "Public", "Return", "Should", "Static", "Switch", "Throws", "Typeof", "After", "Catch", "Facts", "False", "Final", "Super", "Throw", "While", "Case", "Each", "Else", "Fact", "Null", "True", "ExclamationMarkEqualsSignEqualsSign", "FullStopFullStopFullStop", "FullStopFullStopLessThanSign", "EqualsSignEqualsSignEqualsSign", "All", "Def", "For", "New", "Not", "Try", "Val", "Var", "ExclamationMarkEqualsSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AsteriskAsterisk", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "HyphenMinusGreaterThanSign", "FullStopFullStop", "SolidusEqualsSign", "ColonColon", "LessThanSignGreaterThanSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "QuestionMarkFullStop", "QuestionMarkColon", "As", "Do", "If", "VerticalLineVerticalLine", "ExclamationMark", "NumberSign", "PercentSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "CommercialAt", "LeftSquareBracket", "RightSquareBracket", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "RULE_ML_COMMENT", "RULE_IDENTIFIER_START", "RULE_UNICODE_ESCAPE", "RULE_IDENTIFIER_PART", "RULE_ID", "RULE_HEX_DIGIT", "RULE_IDENTIFIER_PART_IMPL", "RULE_IN_RICH_STRING", "RULE_RICH_TEXT", "RULE_RICH_TEXT_START", "RULE_RICH_TEXT_END", "RULE_RICH_TEXT_INBETWEEN", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_STRING", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int Val=57;
    public static final int Each=42;
    public static final int LessThanSignGreaterThanSign=72;
    public static final int RULE_HEX=118;
    public static final int Import=24;
    public static final int EqualsSignGreaterThanSign=74;
    public static final int Var=58;
    public static final int False=36;
    public static final int LessThanSign=96;
    public static final int Assert=22;
    public static final int LeftParenthesis=86;
    public static final int Throw=39;
    public static final int Private=21;
    public static final int Extends=17;
    public static final int ExclamationMark=82;
    public static final int ExclamationMarkEqualsSignEqualsSign=47;
    public static final int GreaterThanSign=98;
    public static final int RULE_ID=110;
    public static final int Throws=31;
    public static final int RULE_RICH_TEXT_START=115;
    public static final int GreaterThanSignEqualsSign=75;
    public static final int ColonColon=71;
    public static final int EqualsSignEqualsSign=73;
    public static final int Switch=30;
    public static final int VerticalLine=104;
    public static final int PlusSign=89;
    public static final int RULE_INT=119;
    public static final int RULE_ML_COMMENT=106;
    public static final int LeftSquareBracket=101;
    public static final int Package=19;
    public static final int If=80;
    public static final int Finally=18;
    public static final int Should=28;
    public static final int Catch=34;
    public static final int VerticalLineVerticalLine=81;
    public static final int Dispatch=11;
    public static final int Case=41;
    public static final int RULE_UNICODE_ESCAPE=108;
    public static final int QuestionMarkFullStop=76;
    public static final int Comma=90;
    public static final int As=78;
    public static final int HyphenMinus=91;
    public static final int Synchronized=4;
    public static final int QuestionMarkColon=77;
    public static final int RULE_IDENTIFIER_PART=109;
    public static final int Transient=8;
    public static final int Solidus=93;
    public static final int RightCurlyBracket=105;
    public static final int Final=37;
    public static final int PercentSignEqualsSign=60;
    public static final int Describe=10;
    public static final int Context=15;
    public static final int FullStop=92;
    public static final int Abstract=9;
    public static final int Default=16;
    public static final int Facts=35;
    public static final int CommercialAt=100;
    public static final int Semicolon=95;
    public static final int PlusSignPlusSign=64;
    public static final int QuestionMark=99;
    public static final int After=33;
    public static final int Else=43;
    public static final int RULE_HEX_DIGIT=111;
    public static final int ExclamationMarkEqualsSign=59;
    public static final int HyphenMinusGreaterThanSign=68;
    public static final int All=51;
    public static final int HyphenMinusHyphenMinus=66;
    public static final int New=54;
    public static final int Null=45;
    public static final int Typeof=32;
    public static final int SolidusEqualsSign=70;
    public static final int True=46;
    public static final int FullStopFullStopFullStop=48;
    public static final int Native=25;
    public static final int PercentSign=84;
    public static final int RULE_IDENTIFIER_START=107;
    public static final int Super=38;
    public static final int FullStopFullStop=69;
    public static final int Try=56;
    public static final int Ampersand=85;
    public static final int AsteriskEqualsSign=63;
    public static final int Override=12;
    public static final int RightSquareBracket=102;
    public static final int Strictfp=13;
    public static final int Protected=7;
    public static final int For=53;
    public static final int RightParenthesis=87;
    public static final int Public=26;
    public static final int Do=79;
    public static final int Fact=44;
    public static final int EqualsSignEqualsSignEqualsSign=50;
    public static final int RULE_DECIMAL=120;
    public static final int Not=55;
    public static final int NumberSign=83;
    public static final int AsteriskAsterisk=62;
    public static final int Static=29;
    public static final int Before=23;
    public static final int RULE_STRING=121;
    public static final int RULE_SL_COMMENT=122;
    public static final int RULE_IN_RICH_STRING=113;
    public static final int EqualsSign=97;
    public static final int AmpersandAmpersand=61;
    public static final int Instanceof=5;
    public static final int HyphenMinusEqualsSign=67;
    public static final int Colon=94;
    public static final int EOF=-1;
    public static final int Asterisk=88;
    public static final int PlusSignEqualsSign=65;
    public static final int RULE_RICH_TEXT=114;
    public static final int Return=27;
    public static final int Def=52;
    public static final int RULE_WS=123;
    public static final int RULE_RICH_TEXT_END=116;
    public static final int LeftCurlyBracket=103;
    public static final int While=40;
    public static final int RULE_ANY_OTHER=124;
    public static final int RULE_RICH_TEXT_INBETWEEN=117;
    public static final int Volatile=14;
    public static final int RULE_IDENTIFIER_PART_IMPL=112;
    public static final int Extension=6;
    public static final int FullStopFullStopLessThanSign=49;
    public static final int Pending=20;

    // delegates
    // delegators


        public InternalSpecParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSpecParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSpecParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSpecParser.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     

    	private SpecGrammarAccess grammarAccess;
    	 	
    	public InternalSpecParser(TokenStream input, SpecGrammarAccess grammarAccess) {
    		this(input);
    		this.grammarAccess = grammarAccess;
    		registerRules(grammarAccess.getGrammar());
    	}
    	
    	@Override
    	protected String getFirstRuleName() {
    		return "SpecFile";	
    	} 
    	   	   	
    	@Override
    	protected SpecGrammarAccess getGrammarAccess() {
    		return grammarAccess;
    	}



    // $ANTLR start "entryRuleSpecFile"
    // InternalSpecParser.g:67:1: entryRuleSpecFile returns [EObject current=null] : iv_ruleSpecFile= ruleSpecFile EOF ;
    public final EObject entryRuleSpecFile() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecFile = null;


        try {
            // InternalSpecParser.g:68:2: (iv_ruleSpecFile= ruleSpecFile EOF )
            // InternalSpecParser.g:69:2: iv_ruleSpecFile= ruleSpecFile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecFileRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSpecFile=ruleSpecFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecFile; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecFile"


    // $ANTLR start "ruleSpecFile"
    // InternalSpecParser.g:76:1: ruleSpecFile returns [EObject current=null] : ( () (otherlv_1= Package ( (lv_package_2_0= ruleQualifiedName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* ) ;
    public final EObject ruleSpecFile() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_package_2_0 = null;

        EObject lv_importSection_3_0 = null;

        EObject lv_xtendTypes_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:79:28: ( ( () (otherlv_1= Package ( (lv_package_2_0= ruleQualifiedName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* ) )
            // InternalSpecParser.g:80:1: ( () (otherlv_1= Package ( (lv_package_2_0= ruleQualifiedName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* )
            {
            // InternalSpecParser.g:80:1: ( () (otherlv_1= Package ( (lv_package_2_0= ruleQualifiedName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* )
            // InternalSpecParser.g:80:2: () (otherlv_1= Package ( (lv_package_2_0= ruleQualifiedName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )*
            {
            // InternalSpecParser.g:80:2: ()
            // InternalSpecParser.g:81:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSpecFileAccess().getSpecFileAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:89:2: (otherlv_1= Package ( (lv_package_2_0= ruleQualifiedName ) ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==Package) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalSpecParser.g:90:2: otherlv_1= Package ( (lv_package_2_0= ruleQualifiedName ) )
                    {
                    otherlv_1=(Token)match(input,Package,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getSpecFileAccess().getPackageKeyword_1_0());
                          
                    }
                    // InternalSpecParser.g:94:1: ( (lv_package_2_0= ruleQualifiedName ) )
                    // InternalSpecParser.g:95:1: (lv_package_2_0= ruleQualifiedName )
                    {
                    // InternalSpecParser.g:95:1: (lv_package_2_0= ruleQualifiedName )
                    // InternalSpecParser.g:96:3: lv_package_2_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSpecFileAccess().getPackageQualifiedNameParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_4);
                    lv_package_2_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecFileRule());
                      	        }
                             		set(
                             			current, 
                             			"package",
                              		lv_package_2_0, 
                              		"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSpecParser.g:112:4: ( (lv_importSection_3_0= ruleXImportSection ) )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==Import) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalSpecParser.g:113:1: (lv_importSection_3_0= ruleXImportSection )
                    {
                    // InternalSpecParser.g:113:1: (lv_importSection_3_0= ruleXImportSection )
                    // InternalSpecParser.g:114:3: lv_importSection_3_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSpecFileAccess().getImportSectionXImportSectionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_importSection_3_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecFileRule());
                      	        }
                             		set(
                             			current, 
                             			"importSection",
                              		lv_importSection_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSpecParser.g:130:3: ( (lv_xtendTypes_4_0= ruleType ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==Describe||LA3_0==CommercialAt) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSpecParser.g:131:1: (lv_xtendTypes_4_0= ruleType )
            	    {
            	    // InternalSpecParser.g:131:1: (lv_xtendTypes_4_0= ruleType )
            	    // InternalSpecParser.g:132:3: lv_xtendTypes_4_0= ruleType
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSpecFileAccess().getXtendTypesTypeParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_xtendTypes_4_0=ruleType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSpecFileRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"xtendTypes",
            	              		lv_xtendTypes_4_0, 
            	              		"org.jnario.spec.Spec.Type");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecFile"


    // $ANTLR start "entryRuleType"
    // InternalSpecParser.g:156:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalSpecParser.g:157:2: (iv_ruleType= ruleType EOF )
            // InternalSpecParser.g:158:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalSpecParser.g:165:1: ruleType returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( () ( (lv_preamble_3_0= Describe ) ) ( (lv_targetType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_STRING ) )? otherlv_6= LeftCurlyBracket ( (lv_members_7_0= ruleMember ) )* otherlv_8= RightCurlyBracket ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token lv_preamble_3_0=null;
        Token lv_name_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_targetType_4_0 = null;

        EObject lv_members_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:168:28: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( () ( (lv_preamble_3_0= Describe ) ) ( (lv_targetType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_STRING ) )? otherlv_6= LeftCurlyBracket ( (lv_members_7_0= ruleMember ) )* otherlv_8= RightCurlyBracket ) ) )
            // InternalSpecParser.g:169:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( () ( (lv_preamble_3_0= Describe ) ) ( (lv_targetType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_STRING ) )? otherlv_6= LeftCurlyBracket ( (lv_members_7_0= ruleMember ) )* otherlv_8= RightCurlyBracket ) )
            {
            // InternalSpecParser.g:169:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( () ( (lv_preamble_3_0= Describe ) ) ( (lv_targetType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_STRING ) )? otherlv_6= LeftCurlyBracket ( (lv_members_7_0= ruleMember ) )* otherlv_8= RightCurlyBracket ) )
            // InternalSpecParser.g:169:2: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( () ( (lv_preamble_3_0= Describe ) ) ( (lv_targetType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_STRING ) )? otherlv_6= LeftCurlyBracket ( (lv_members_7_0= ruleMember ) )* otherlv_8= RightCurlyBracket )
            {
            // InternalSpecParser.g:169:2: ()
            // InternalSpecParser.g:170:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTypeAccess().getJnarioTypeDeclarationAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:178:2: ( (lv_annotations_1_0= ruleXAnnotation ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==CommercialAt) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalSpecParser.g:179:1: (lv_annotations_1_0= ruleXAnnotation )
            	    {
            	    // InternalSpecParser.g:179:1: (lv_annotations_1_0= ruleXAnnotation )
            	    // InternalSpecParser.g:180:3: lv_annotations_1_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeAccess().getAnnotationsXAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_annotations_1_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            // InternalSpecParser.g:196:3: ( () ( (lv_preamble_3_0= Describe ) ) ( (lv_targetType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_STRING ) )? otherlv_6= LeftCurlyBracket ( (lv_members_7_0= ruleMember ) )* otherlv_8= RightCurlyBracket )
            // InternalSpecParser.g:196:4: () ( (lv_preamble_3_0= Describe ) ) ( (lv_targetType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_STRING ) )? otherlv_6= LeftCurlyBracket ( (lv_members_7_0= ruleMember ) )* otherlv_8= RightCurlyBracket
            {
            // InternalSpecParser.g:196:4: ()
            // InternalSpecParser.g:197:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElementAndSet(
                          grammarAccess.getTypeAccess().getExampleGroupAnnotationInfoAction_2_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:205:2: ( (lv_preamble_3_0= Describe ) )
            // InternalSpecParser.g:206:1: (lv_preamble_3_0= Describe )
            {
            // InternalSpecParser.g:206:1: (lv_preamble_3_0= Describe )
            // InternalSpecParser.g:207:3: lv_preamble_3_0= Describe
            {
            lv_preamble_3_0=(Token)match(input,Describe,FollowSets000.FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_preamble_3_0, grammarAccess.getTypeAccess().getPreambleDescribeKeyword_2_1_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTypeRule());
              	        }
                     		setWithLastConsumed(current, "preamble", lv_preamble_3_0, "describe");
              	    
            }

            }


            }

            // InternalSpecParser.g:221:2: ( (lv_targetType_4_0= ruleJvmTypeReference ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==EqualsSignGreaterThanSign||LA5_0==LeftParenthesis||LA5_0==RULE_ID) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalSpecParser.g:222:1: (lv_targetType_4_0= ruleJvmTypeReference )
                    {
                    // InternalSpecParser.g:222:1: (lv_targetType_4_0= ruleJvmTypeReference )
                    // InternalSpecParser.g:223:3: lv_targetType_4_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeAccess().getTargetTypeJvmTypeReferenceParserRuleCall_2_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_8);
                    lv_targetType_4_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"targetType",
                              		lv_targetType_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSpecParser.g:239:3: ( (lv_name_5_0= RULE_STRING ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_STRING) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalSpecParser.g:240:1: (lv_name_5_0= RULE_STRING )
                    {
                    // InternalSpecParser.g:240:1: (lv_name_5_0= RULE_STRING )
                    // InternalSpecParser.g:241:3: lv_name_5_0= RULE_STRING
                    {
                    lv_name_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_5_0, grammarAccess.getTypeAccess().getNameSTRINGTerminalRuleCall_2_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_5_0, 
                              		"org.eclipse.xtext.xbase.Xtype.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,LeftCurlyBracket,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_4());
                  
            }
            // InternalSpecParser.g:262:1: ( (lv_members_7_0= ruleMember ) )*
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==Synchronized||(LA7_0>=Extension && LA7_0<=Context)||(LA7_0>=Package && LA7_0<=Private)||LA7_0==Before||(LA7_0>=Native && LA7_0<=Public)||LA7_0==Static||LA7_0==After||LA7_0==Facts||LA7_0==Final||LA7_0==Fact||LA7_0==Def||(LA7_0>=Val && LA7_0<=Var)||LA7_0==EqualsSignGreaterThanSign||LA7_0==LeftParenthesis||LA7_0==CommercialAt||LA7_0==RULE_ID) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    // InternalSpecParser.g:263:1: (lv_members_7_0= ruleMember )
            	    {
            	    // InternalSpecParser.g:263:1: (lv_members_7_0= ruleMember )
            	    // InternalSpecParser.g:264:3: lv_members_7_0= ruleMember
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_members_7_0=ruleMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"members",
            	              		lv_members_7_0, 
            	              		"org.jnario.spec.Spec.Member");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            otherlv_8=(Token)match(input,RightCurlyBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_6());
                  
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleMethod"
    // InternalSpecParser.g:293:1: entryRuleMethod returns [String current=null] : iv_ruleMethod= ruleMethod EOF ;
    public final String entryRuleMethod() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMethod = null;


        try {
            // InternalSpecParser.g:294:1: (iv_ruleMethod= ruleMethod EOF )
            // InternalSpecParser.g:295:2: iv_ruleMethod= ruleMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethod=ruleMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethod.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethod"


    // $ANTLR start "ruleMethod"
    // InternalSpecParser.g:302:1: ruleMethod returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID (kw= LeftParenthesis (this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )* )? kw= RightParenthesis )? ) ;
    public final AntlrDatatypeRuleToken ruleMethod() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_TypeName_2 = null;

        AntlrDatatypeRuleToken this_TypeName_4 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:306:6: ( (this_ValidID_0= ruleValidID (kw= LeftParenthesis (this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )* )? kw= RightParenthesis )? ) )
            // InternalSpecParser.g:307:1: (this_ValidID_0= ruleValidID (kw= LeftParenthesis (this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )* )? kw= RightParenthesis )? )
            {
            // InternalSpecParser.g:307:1: (this_ValidID_0= ruleValidID (kw= LeftParenthesis (this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )* )? kw= RightParenthesis )? )
            // InternalSpecParser.g:308:5: this_ValidID_0= ruleValidID (kw= LeftParenthesis (this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )* )? kw= RightParenthesis )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMethodAccess().getValidIDParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_11);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ValidID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:318:1: (kw= LeftParenthesis (this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )* )? kw= RightParenthesis )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==LeftParenthesis) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalSpecParser.g:319:2: kw= LeftParenthesis (this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )* )? kw= RightParenthesis
                    {
                    kw=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_1_0()); 
                          
                    }
                    // InternalSpecParser.g:324:1: (this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )* )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==RULE_ID) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // InternalSpecParser.g:325:5: this_TypeName_2= ruleTypeName (kw= Comma this_TypeName_4= ruleTypeName )*
                            {
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getMethodAccess().getTypeNameParserRuleCall_1_1_0()); 
                                  
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            this_TypeName_2=ruleTypeName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_TypeName_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                      afterParserOrEnumRuleCall();
                                  
                            }
                            // InternalSpecParser.g:335:1: (kw= Comma this_TypeName_4= ruleTypeName )*
                            loop8:
                            do {
                                int alt8=2;
                                int LA8_0 = input.LA(1);

                                if ( (LA8_0==Comma) ) {
                                    alt8=1;
                                }


                                switch (alt8) {
                            	case 1 :
                            	    // InternalSpecParser.g:336:2: kw= Comma this_TypeName_4= ruleTypeName
                            	    {
                            	    kw=(Token)match(input,Comma,FollowSets000.FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current.merge(kw);
                            	              newLeafNode(kw, grammarAccess.getMethodAccess().getCommaKeyword_1_1_1_0()); 
                            	          
                            	    }
                            	    if ( state.backtracking==0 ) {
                            	       
                            	              newCompositeNode(grammarAccess.getMethodAccess().getTypeNameParserRuleCall_1_1_1_1()); 
                            	          
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_13);
                            	    this_TypeName_4=ruleTypeName();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      		current.merge(this_TypeName_4);
                            	          
                            	    }
                            	    if ( state.backtracking==0 ) {
                            	       
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop8;
                                }
                            } while (true);


                            }
                            break;

                    }

                    kw=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMethodAccess().getRightParenthesisKeyword_1_2()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethod"


    // $ANTLR start "entryRuleTypeName"
    // InternalSpecParser.g:366:1: entryRuleTypeName returns [String current=null] : iv_ruleTypeName= ruleTypeName EOF ;
    public final String entryRuleTypeName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeName = null;


        try {
            // InternalSpecParser.g:367:1: (iv_ruleTypeName= ruleTypeName EOF )
            // InternalSpecParser.g:368:2: iv_ruleTypeName= ruleTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeName=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeName.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeName"


    // $ANTLR start "ruleTypeName"
    // InternalSpecParser.g:375:1: ruleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= LessThanSign this_TypeRef_2= ruleTypeRef (kw= Comma this_TypeRef_4= ruleTypeRef )* kw= GreaterThanSign )? (kw= LeftSquareBracket kw= RightSquareBracket )? ) ;
    public final AntlrDatatypeRuleToken ruleTypeName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_TypeRef_2 = null;

        AntlrDatatypeRuleToken this_TypeRef_4 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:379:6: ( (this_ID_0= RULE_ID (kw= LessThanSign this_TypeRef_2= ruleTypeRef (kw= Comma this_TypeRef_4= ruleTypeRef )* kw= GreaterThanSign )? (kw= LeftSquareBracket kw= RightSquareBracket )? ) )
            // InternalSpecParser.g:380:1: (this_ID_0= RULE_ID (kw= LessThanSign this_TypeRef_2= ruleTypeRef (kw= Comma this_TypeRef_4= ruleTypeRef )* kw= GreaterThanSign )? (kw= LeftSquareBracket kw= RightSquareBracket )? )
            {
            // InternalSpecParser.g:380:1: (this_ID_0= RULE_ID (kw= LessThanSign this_TypeRef_2= ruleTypeRef (kw= Comma this_TypeRef_4= ruleTypeRef )* kw= GreaterThanSign )? (kw= LeftSquareBracket kw= RightSquareBracket )? )
            // InternalSpecParser.g:380:6: this_ID_0= RULE_ID (kw= LessThanSign this_TypeRef_2= ruleTypeRef (kw= Comma this_TypeRef_4= ruleTypeRef )* kw= GreaterThanSign )? (kw= LeftSquareBracket kw= RightSquareBracket )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getTypeNameAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSpecParser.g:387:1: (kw= LessThanSign this_TypeRef_2= ruleTypeRef (kw= Comma this_TypeRef_4= ruleTypeRef )* kw= GreaterThanSign )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==LessThanSign) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSpecParser.g:388:2: kw= LessThanSign this_TypeRef_2= ruleTypeRef (kw= Comma this_TypeRef_4= ruleTypeRef )* kw= GreaterThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeNameAccess().getLessThanSignKeyword_1_0()); 
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeNameAccess().getTypeRefParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    this_TypeRef_2=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_TypeRef_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalSpecParser.g:404:1: (kw= Comma this_TypeRef_4= ruleTypeRef )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==Comma) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalSpecParser.g:405:2: kw= Comma this_TypeRef_4= ruleTypeRef
                    	    {
                    	    kw=(Token)match(input,Comma,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current.merge(kw);
                    	              newLeafNode(kw, grammarAccess.getTypeNameAccess().getCommaKeyword_1_2_0()); 
                    	          
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTypeNameAccess().getTypeRefParserRuleCall_1_2_1()); 
                    	          
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_16);
                    	    this_TypeRef_4=ruleTypeRef();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		current.merge(this_TypeRef_4);
                    	          
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);

                    kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeNameAccess().getGreaterThanSignKeyword_1_3()); 
                          
                    }

                    }
                    break;

            }

            // InternalSpecParser.g:427:3: (kw= LeftSquareBracket kw= RightSquareBracket )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==LeftSquareBracket) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalSpecParser.g:428:2: kw= LeftSquareBracket kw= RightSquareBracket
                    {
                    kw=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeNameAccess().getLeftSquareBracketKeyword_2_0()); 
                          
                    }
                    kw=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeNameAccess().getRightSquareBracketKeyword_2_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeName"


    // $ANTLR start "entryRuleTypeRef"
    // InternalSpecParser.g:447:1: entryRuleTypeRef returns [String current=null] : iv_ruleTypeRef= ruleTypeRef EOF ;
    public final String entryRuleTypeRef() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeRef = null;


        try {
            // InternalSpecParser.g:448:1: (iv_ruleTypeRef= ruleTypeRef EOF )
            // InternalSpecParser.g:449:2: iv_ruleTypeRef= ruleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeRef=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRef.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRef"


    // $ANTLR start "ruleTypeRef"
    // InternalSpecParser.g:456:1: ruleTypeRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= QuestionMark )? (kw= Extends | kw= Super )? this_TypeName_3= ruleTypeName ) ;
    public final AntlrDatatypeRuleToken ruleTypeRef() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_TypeName_3 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:460:6: ( ( (kw= QuestionMark )? (kw= Extends | kw= Super )? this_TypeName_3= ruleTypeName ) )
            // InternalSpecParser.g:461:1: ( (kw= QuestionMark )? (kw= Extends | kw= Super )? this_TypeName_3= ruleTypeName )
            {
            // InternalSpecParser.g:461:1: ( (kw= QuestionMark )? (kw= Extends | kw= Super )? this_TypeName_3= ruleTypeName )
            // InternalSpecParser.g:461:2: (kw= QuestionMark )? (kw= Extends | kw= Super )? this_TypeName_3= ruleTypeName
            {
            // InternalSpecParser.g:461:2: (kw= QuestionMark )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==QuestionMark) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalSpecParser.g:462:2: kw= QuestionMark
                    {
                    kw=(Token)match(input,QuestionMark,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeRefAccess().getQuestionMarkKeyword_0()); 
                          
                    }

                    }
                    break;

            }

            // InternalSpecParser.g:467:3: (kw= Extends | kw= Super )?
            int alt15=3;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==Extends) ) {
                alt15=1;
            }
            else if ( (LA15_0==Super) ) {
                alt15=2;
            }
            switch (alt15) {
                case 1 :
                    // InternalSpecParser.g:468:2: kw= Extends
                    {
                    kw=(Token)match(input,Extends,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeRefAccess().getExtendsKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:475:2: kw= Super
                    {
                    kw=(Token)match(input,Super,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeRefAccess().getSuperKeyword_1_1()); 
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getTypeRefAccess().getTypeNameParserRuleCall_2()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_TypeName_3=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_TypeName_3);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRef"


    // $ANTLR start "entryRuleMember"
    // InternalSpecParser.g:499:1: entryRuleMember returns [EObject current=null] : iv_ruleMember= ruleMember EOF ;
    public final EObject entryRuleMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMember = null;


        try {
            // InternalSpecParser.g:500:2: (iv_ruleMember= ruleMember EOF )
            // InternalSpecParser.g:501:2: iv_ruleMember= ruleMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMember=ruleMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMember"


    // $ANTLR start "ruleMember"
    // InternalSpecParser.g:508:1: ruleMember returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) ) | ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) ) | ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) ) | ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) ) | ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) ) | ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) ) | ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? ) | ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? ) ) ) ;
    public final EObject ruleMember() throws RecognitionException {
        EObject current = null;

        Token lv_pending_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_preamble_9_0=null;
        Token lv_name_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token lv_modifiers_17_0=null;
        Token otherlv_18=null;
        Token lv_name_19_0=null;
        Token otherlv_22=null;
        Token lv_modifiers_23_0=null;
        Token otherlv_24=null;
        Token lv_name_25_0=null;
        Token lv_preamble_28_0=null;
        Token lv_name_30_0=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token lv_name_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_41=null;
        Token lv_modifiers_48_0=null;
        Token lv_modifiers_55_0=null;
        Token otherlv_61=null;
        Token otherlv_63=null;
        Token otherlv_69=null;
        Token otherlv_71=null;
        Token otherlv_73=null;
        Token otherlv_76=null;
        Token otherlv_78=null;
        Token otherlv_80=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token otherlv_85=null;
        Token otherlv_89=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_expr_6_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_targetType_10_0 = null;

        EObject lv_members_13_0 = null;

        EObject lv_expression_20_0 = null;

        EObject lv_expression_26_0 = null;

        EObject lv_members_32_0 = null;

        EObject lv_columns_39_0 = null;

        EObject lv_rows_40_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_43_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_44_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_45_0 = null;

        EObject lv_type_46_0 = null;

        AntlrDatatypeRuleToken lv_name_47_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_49_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_50_0 = null;

        EObject lv_type_51_0 = null;

        AntlrDatatypeRuleToken lv_name_52_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_53_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_54_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_56_0 = null;

        EObject lv_type_57_0 = null;

        AntlrDatatypeRuleToken lv_name_58_0 = null;

        EObject lv_type_59_0 = null;

        AntlrDatatypeRuleToken lv_name_60_0 = null;

        EObject lv_initialValue_62_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_65_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_66_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_67_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_68_0 = null;

        EObject lv_typeParameters_70_0 = null;

        EObject lv_typeParameters_72_0 = null;

        EObject lv_returnType_74_0 = null;

        AntlrDatatypeRuleToken lv_name_75_0 = null;

        AntlrDatatypeRuleToken lv_name_77_0 = null;

        EObject lv_parameters_79_0 = null;

        EObject lv_parameters_81_0 = null;

        EObject lv_exceptions_84_0 = null;

        EObject lv_exceptions_86_0 = null;

        EObject lv_expression_87_0 = null;

        EObject lv_expression_88_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:511:28: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) ) | ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) ) | ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) ) | ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) ) | ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) ) | ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) ) | ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? ) | ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? ) ) ) )
            // InternalSpecParser.g:512:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) ) | ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) ) | ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) ) | ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) ) | ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) ) | ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) ) | ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? ) | ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? ) ) )
            {
            // InternalSpecParser.g:512:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) ) | ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) ) | ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) ) | ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) ) | ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) ) | ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) ) | ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? ) | ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? ) ) )
            // InternalSpecParser.g:512:2: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) ) | ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) ) | ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) ) | ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) ) | ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) ) | ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) ) | ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? ) | ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? ) )
            {
            // InternalSpecParser.g:512:2: ()
            // InternalSpecParser.g:513:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getMemberAccess().getJnarioMemberAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:521:2: ( (lv_annotations_1_0= ruleXAnnotation ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==CommercialAt) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalSpecParser.g:522:1: (lv_annotations_1_0= ruleXAnnotation )
            	    {
            	    // InternalSpecParser.g:522:1: (lv_annotations_1_0= ruleXAnnotation )
            	    // InternalSpecParser.g:523:3: lv_annotations_1_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMemberAccess().getAnnotationsXAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_20);
            	    lv_annotations_1_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            // InternalSpecParser.g:539:3: ( ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) ) | ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) ) | ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) ) | ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) ) | ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) ) | ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) ) | ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? ) | ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? ) )
            int alt55=8;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalSpecParser.g:539:4: ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) )
                    {
                    // InternalSpecParser.g:539:4: ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) )
                    // InternalSpecParser.g:539:5: () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? )
                    {
                    // InternalSpecParser.g:539:5: ()
                    // InternalSpecParser.g:540:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getExampleAnnotationInfoAction_2_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:548:2: ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? )
                    // InternalSpecParser.g:548:3: ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )?
                    {
                    // InternalSpecParser.g:548:3: ( (lv_pending_3_0= Pending ) )?
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==Pending) ) {
                        alt17=1;
                    }
                    switch (alt17) {
                        case 1 :
                            // InternalSpecParser.g:549:1: (lv_pending_3_0= Pending )
                            {
                            // InternalSpecParser.g:549:1: (lv_pending_3_0= Pending )
                            // InternalSpecParser.g:550:3: lv_pending_3_0= Pending
                            {
                            lv_pending_3_0=(Token)match(input,Pending,FollowSets000.FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_pending_3_0, grammarAccess.getMemberAccess().getPendingPendingKeyword_2_0_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		setWithLastConsumed(current, "pending", true, "pending");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:564:3: (otherlv_4= Fact | otherlv_5= Facts )
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==Fact) ) {
                        alt18=1;
                    }
                    else if ( (LA18_0==Facts) ) {
                        alt18=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 0, input);

                        throw nvae;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalSpecParser.g:565:2: otherlv_4= Fact
                            {
                            otherlv_4=(Token)match(input,Fact,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getMemberAccess().getFactKeyword_2_0_1_1_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:571:2: otherlv_5= Facts
                            {
                            otherlv_5=(Token)match(input,Facts,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getMemberAccess().getFactsKeyword_2_0_1_1_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalSpecParser.g:575:2: ( (lv_expr_6_0= ruleXExpression ) )
                    // InternalSpecParser.g:576:1: (lv_expr_6_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:576:1: (lv_expr_6_0= ruleXExpression )
                    // InternalSpecParser.g:577:3: lv_expr_6_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getExprXExpressionParserRuleCall_2_0_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_expr_6_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		set(
                             			current, 
                             			"expr",
                              		lv_expr_6_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:593:2: ( (lv_expression_7_0= ruleXBlockExpression ) )?
                    int alt19=2;
                    int LA19_0 = input.LA(1);

                    if ( (LA19_0==LeftCurlyBracket) ) {
                        alt19=1;
                    }
                    switch (alt19) {
                        case 1 :
                            // InternalSpecParser.g:594:1: (lv_expression_7_0= ruleXBlockExpression )
                            {
                            // InternalSpecParser.g:594:1: (lv_expression_7_0= ruleXBlockExpression )
                            // InternalSpecParser.g:595:3: lv_expression_7_0= ruleXBlockExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExpressionXBlockExpressionParserRuleCall_2_0_1_3_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_7_0=ruleXBlockExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_7_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:612:6: ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) )
                    {
                    // InternalSpecParser.g:612:6: ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) )
                    // InternalSpecParser.g:612:7: () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket )
                    {
                    // InternalSpecParser.g:612:7: ()
                    // InternalSpecParser.g:613:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getExampleGroupAnnotationInfoAction_2_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:621:2: ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket )
                    // InternalSpecParser.g:621:3: ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket
                    {
                    // InternalSpecParser.g:621:3: ( (lv_preamble_9_0= Describe ) )
                    // InternalSpecParser.g:622:1: (lv_preamble_9_0= Describe )
                    {
                    // InternalSpecParser.g:622:1: (lv_preamble_9_0= Describe )
                    // InternalSpecParser.g:623:3: lv_preamble_9_0= Describe
                    {
                    lv_preamble_9_0=(Token)match(input,Describe,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_preamble_9_0, grammarAccess.getMemberAccess().getPreambleDescribeKeyword_2_1_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMemberRule());
                      	        }
                             		setWithLastConsumed(current, "preamble", lv_preamble_9_0, "describe");
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:637:2: ( (lv_targetType_10_0= ruleJvmTypeReference ) )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==EqualsSignGreaterThanSign||LA20_0==LeftParenthesis||LA20_0==RULE_ID) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalSpecParser.g:638:1: (lv_targetType_10_0= ruleJvmTypeReference )
                            {
                            // InternalSpecParser.g:638:1: (lv_targetType_10_0= ruleJvmTypeReference )
                            // InternalSpecParser.g:639:3: lv_targetType_10_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTargetTypeJvmTypeReferenceParserRuleCall_2_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_8);
                            lv_targetType_10_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"targetType",
                                      		lv_targetType_10_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:655:3: ( (lv_name_11_0= RULE_STRING ) )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==RULE_STRING) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalSpecParser.g:656:1: (lv_name_11_0= RULE_STRING )
                            {
                            // InternalSpecParser.g:656:1: (lv_name_11_0= RULE_STRING )
                            // InternalSpecParser.g:657:3: lv_name_11_0= RULE_STRING
                            {
                            lv_name_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_name_11_0, grammarAccess.getMemberAccess().getNameSTRINGTerminalRuleCall_2_1_1_2_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"name",
                                      		lv_name_11_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.STRING");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,LeftCurlyBracket,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_1_1_3());
                          
                    }
                    // InternalSpecParser.g:678:1: ( (lv_members_13_0= ruleMember ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==Synchronized||(LA22_0>=Extension && LA22_0<=Context)||(LA22_0>=Package && LA22_0<=Private)||LA22_0==Before||(LA22_0>=Native && LA22_0<=Public)||LA22_0==Static||LA22_0==After||LA22_0==Facts||LA22_0==Final||LA22_0==Fact||LA22_0==Def||(LA22_0>=Val && LA22_0<=Var)||LA22_0==EqualsSignGreaterThanSign||LA22_0==LeftParenthesis||LA22_0==CommercialAt||LA22_0==RULE_ID) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalSpecParser.g:679:1: (lv_members_13_0= ruleMember )
                    	    {
                    	    // InternalSpecParser.g:679:1: (lv_members_13_0= ruleMember )
                    	    // InternalSpecParser.g:680:3: lv_members_13_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getMembersMemberParserRuleCall_2_1_1_4_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_10);
                    	    lv_members_13_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_13_0, 
                    	              		"org.jnario.spec.Spec.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,RightCurlyBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_1_1_5());
                          
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:702:6: ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) )
                    {
                    // InternalSpecParser.g:702:6: ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) )
                    // InternalSpecParser.g:702:7: () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) )
                    {
                    // InternalSpecParser.g:702:7: ()
                    // InternalSpecParser.g:703:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getBeforeAnnotationInfoAction_2_2_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:711:2: (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) )
                    // InternalSpecParser.g:712:2: otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) )
                    {
                    otherlv_16=(Token)match(input,Before,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getMemberAccess().getBeforeKeyword_2_2_1_0());
                          
                    }
                    // InternalSpecParser.g:716:1: ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )?
                    int alt23=3;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==All) ) {
                        alt23=1;
                    }
                    else if ( (LA23_0==Each) ) {
                        alt23=2;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalSpecParser.g:716:2: ( (lv_modifiers_17_0= All ) )
                            {
                            // InternalSpecParser.g:716:2: ( (lv_modifiers_17_0= All ) )
                            // InternalSpecParser.g:717:1: (lv_modifiers_17_0= All )
                            {
                            // InternalSpecParser.g:717:1: (lv_modifiers_17_0= All )
                            // InternalSpecParser.g:718:3: lv_modifiers_17_0= All
                            {
                            lv_modifiers_17_0=(Token)match(input,All,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_modifiers_17_0, grammarAccess.getMemberAccess().getModifiersAllKeyword_2_2_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		addWithLastConsumed(current, "modifiers", lv_modifiers_17_0, "all");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:734:2: otherlv_18= Each
                            {
                            otherlv_18=(Token)match(input,Each,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_18, grammarAccess.getMemberAccess().getEachKeyword_2_2_1_1_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalSpecParser.g:738:3: ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )?
                    int alt24=2;
                    alt24 = dfa24.predict(input);
                    switch (alt24) {
                        case 1 :
                            // InternalSpecParser.g:738:4: ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING )
                            {
                            // InternalSpecParser.g:744:1: (lv_name_19_0= RULE_STRING )
                            // InternalSpecParser.g:745:3: lv_name_19_0= RULE_STRING
                            {
                            lv_name_19_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_name_19_0, grammarAccess.getMemberAccess().getNameSTRINGTerminalRuleCall_2_2_1_2_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"name",
                                      		lv_name_19_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.STRING");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:761:3: ( (lv_expression_20_0= ruleXExpression ) )
                    // InternalSpecParser.g:762:1: (lv_expression_20_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:762:1: (lv_expression_20_0= ruleXExpression )
                    // InternalSpecParser.g:763:3: lv_expression_20_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getExpressionXExpressionParserRuleCall_2_2_1_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_20_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_20_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:780:6: ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) )
                    {
                    // InternalSpecParser.g:780:6: ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) )
                    // InternalSpecParser.g:780:7: () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) )
                    {
                    // InternalSpecParser.g:780:7: ()
                    // InternalSpecParser.g:781:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getAfterAnnotationInfoAction_2_3_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:789:2: (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) )
                    // InternalSpecParser.g:790:2: otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) )
                    {
                    otherlv_22=(Token)match(input,After,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getMemberAccess().getAfterKeyword_2_3_1_0());
                          
                    }
                    // InternalSpecParser.g:794:1: ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )?
                    int alt25=3;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==All) ) {
                        alt25=1;
                    }
                    else if ( (LA25_0==Each) ) {
                        alt25=2;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalSpecParser.g:794:2: ( (lv_modifiers_23_0= All ) )
                            {
                            // InternalSpecParser.g:794:2: ( (lv_modifiers_23_0= All ) )
                            // InternalSpecParser.g:795:1: (lv_modifiers_23_0= All )
                            {
                            // InternalSpecParser.g:795:1: (lv_modifiers_23_0= All )
                            // InternalSpecParser.g:796:3: lv_modifiers_23_0= All
                            {
                            lv_modifiers_23_0=(Token)match(input,All,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_modifiers_23_0, grammarAccess.getMemberAccess().getModifiersAllKeyword_2_3_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		addWithLastConsumed(current, "modifiers", lv_modifiers_23_0, "all");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:812:2: otherlv_24= Each
                            {
                            otherlv_24=(Token)match(input,Each,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getMemberAccess().getEachKeyword_2_3_1_1_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalSpecParser.g:816:3: ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )?
                    int alt26=2;
                    alt26 = dfa26.predict(input);
                    switch (alt26) {
                        case 1 :
                            // InternalSpecParser.g:816:4: ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING )
                            {
                            // InternalSpecParser.g:822:1: (lv_name_25_0= RULE_STRING )
                            // InternalSpecParser.g:823:3: lv_name_25_0= RULE_STRING
                            {
                            lv_name_25_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_name_25_0, grammarAccess.getMemberAccess().getNameSTRINGTerminalRuleCall_2_3_1_2_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"name",
                                      		lv_name_25_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.STRING");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:839:3: ( (lv_expression_26_0= ruleXExpression ) )
                    // InternalSpecParser.g:840:1: (lv_expression_26_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:840:1: (lv_expression_26_0= ruleXExpression )
                    // InternalSpecParser.g:841:3: lv_expression_26_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getExpressionXExpressionParserRuleCall_2_3_1_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_26_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_26_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSpecParser.g:858:6: ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) )
                    {
                    // InternalSpecParser.g:858:6: ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) )
                    // InternalSpecParser.g:858:7: () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket )
                    {
                    // InternalSpecParser.g:858:7: ()
                    // InternalSpecParser.g:859:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getExampleGroupAnnotationInfoAction_2_4_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:867:2: ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket )
                    // InternalSpecParser.g:867:3: ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket
                    {
                    // InternalSpecParser.g:867:3: ( (lv_preamble_28_0= Context ) )
                    // InternalSpecParser.g:868:1: (lv_preamble_28_0= Context )
                    {
                    // InternalSpecParser.g:868:1: (lv_preamble_28_0= Context )
                    // InternalSpecParser.g:869:3: lv_preamble_28_0= Context
                    {
                    lv_preamble_28_0=(Token)match(input,Context,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_preamble_28_0, grammarAccess.getMemberAccess().getPreambleContextKeyword_2_4_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMemberRule());
                      	        }
                             		setWithLastConsumed(current, "preamble", lv_preamble_28_0, "context");
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:883:2: ( ( ruleMethod ) )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==RULE_ID) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalSpecParser.g:884:1: ( ruleMethod )
                            {
                            // InternalSpecParser.g:884:1: ( ruleMethod )
                            // InternalSpecParser.g:885:3: ruleMethod
                            {
                            if ( state.backtracking==0 ) {
                               
                              		  /* */ 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTargetOperationJvmOperationCrossReference_2_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_8);
                            ruleMethod();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:902:3: ( (lv_name_30_0= RULE_STRING ) )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==RULE_STRING) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalSpecParser.g:903:1: (lv_name_30_0= RULE_STRING )
                            {
                            // InternalSpecParser.g:903:1: (lv_name_30_0= RULE_STRING )
                            // InternalSpecParser.g:904:3: lv_name_30_0= RULE_STRING
                            {
                            lv_name_30_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_name_30_0, grammarAccess.getMemberAccess().getNameSTRINGTerminalRuleCall_2_4_1_2_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"name",
                                      		lv_name_30_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.STRING");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    otherlv_31=(Token)match(input,LeftCurlyBracket,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_31, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_4_1_3());
                          
                    }
                    // InternalSpecParser.g:925:1: ( (lv_members_32_0= ruleMember ) )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==Synchronized||(LA29_0>=Extension && LA29_0<=Context)||(LA29_0>=Package && LA29_0<=Private)||LA29_0==Before||(LA29_0>=Native && LA29_0<=Public)||LA29_0==Static||LA29_0==After||LA29_0==Facts||LA29_0==Final||LA29_0==Fact||LA29_0==Def||(LA29_0>=Val && LA29_0<=Var)||LA29_0==EqualsSignGreaterThanSign||LA29_0==LeftParenthesis||LA29_0==CommercialAt||LA29_0==RULE_ID) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalSpecParser.g:926:1: (lv_members_32_0= ruleMember )
                    	    {
                    	    // InternalSpecParser.g:926:1: (lv_members_32_0= ruleMember )
                    	    // InternalSpecParser.g:927:3: lv_members_32_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getMembersMemberParserRuleCall_2_4_1_4_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_10);
                    	    lv_members_32_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_32_0, 
                    	              		"org.jnario.spec.Spec.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);

                    otherlv_33=(Token)match(input,RightCurlyBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_33, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_4_1_5());
                          
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSpecParser.g:949:6: ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) )
                    {
                    // InternalSpecParser.g:949:6: ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) )
                    // InternalSpecParser.g:949:7: () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket )
                    {
                    // InternalSpecParser.g:949:7: ()
                    // InternalSpecParser.g:950:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getExampleTableAnnotationInfoAction_2_5_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:958:2: (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket )
                    // InternalSpecParser.g:959:2: otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket
                    {
                    otherlv_35=(Token)match(input,Def,FollowSets000.FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_35, grammarAccess.getMemberAccess().getDefKeyword_2_5_1_0());
                          
                    }
                    // InternalSpecParser.g:963:1: ( (lv_name_36_0= RULE_ID ) )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==RULE_ID) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalSpecParser.g:964:1: (lv_name_36_0= RULE_ID )
                            {
                            // InternalSpecParser.g:964:1: (lv_name_36_0= RULE_ID )
                            // InternalSpecParser.g:965:3: lv_name_36_0= RULE_ID
                            {
                            lv_name_36_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_name_36_0, grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_2_5_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"name",
                                      		lv_name_36_0, 
                                      		"org.jnario.spec.Spec.ID");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    otherlv_37=(Token)match(input,LeftCurlyBracket,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_37, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_5_1_2());
                          
                    }
                    // InternalSpecParser.g:986:1: (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==VerticalLine) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalSpecParser.g:987:2: otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )*
                            {
                            otherlv_38=(Token)match(input,VerticalLine,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_38, grammarAccess.getMemberAccess().getVerticalLineKeyword_2_5_1_3_0());
                                  
                            }
                            // InternalSpecParser.g:991:1: ( (lv_columns_39_0= ruleExampleColumn ) )*
                            loop31:
                            do {
                                int alt31=2;
                                int LA31_0 = input.LA(1);

                                if ( (LA31_0==EqualsSignGreaterThanSign||LA31_0==LeftParenthesis||LA31_0==RULE_ID) ) {
                                    alt31=1;
                                }


                                switch (alt31) {
                            	case 1 :
                            	    // InternalSpecParser.g:992:1: (lv_columns_39_0= ruleExampleColumn )
                            	    {
                            	    // InternalSpecParser.g:992:1: (lv_columns_39_0= ruleExampleColumn )
                            	    // InternalSpecParser.g:993:3: lv_columns_39_0= ruleExampleColumn
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getColumnsExampleColumnParserRuleCall_2_5_1_3_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_28);
                            	    lv_columns_39_0=ruleExampleColumn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"columns",
                            	              		lv_columns_39_0, 
                            	              		"org.jnario.spec.Spec.ExampleColumn");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop31;
                                }
                            } while (true);

                            // InternalSpecParser.g:1009:3: ( (lv_rows_40_0= ruleExampleRow ) )*
                            loop32:
                            do {
                                int alt32=2;
                                int LA32_0 = input.LA(1);

                                if ( (LA32_0==VerticalLine) ) {
                                    alt32=1;
                                }


                                switch (alt32) {
                            	case 1 :
                            	    // InternalSpecParser.g:1010:1: (lv_rows_40_0= ruleExampleRow )
                            	    {
                            	    // InternalSpecParser.g:1010:1: (lv_rows_40_0= ruleExampleRow )
                            	    // InternalSpecParser.g:1011:3: lv_rows_40_0= ruleExampleRow
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getRowsExampleRowParserRuleCall_2_5_1_3_2_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_27);
                            	    lv_rows_40_0=ruleExampleRow();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"rows",
                            	              		lv_rows_40_0, 
                            	              		"org.jnario.spec.Spec.ExampleRow");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop32;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_41=(Token)match(input,RightCurlyBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_41, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_5_1_4());
                          
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSpecParser.g:1033:6: ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? )
                    {
                    // InternalSpecParser.g:1033:6: ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? )
                    // InternalSpecParser.g:1033:7: () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )?
                    {
                    // InternalSpecParser.g:1033:7: ()
                    // InternalSpecParser.g:1034:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getJnarioFieldAnnotationInfoAction_2_6_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:1042:2: ( (lv_modifiers_43_0= ruleCommonModifier ) )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==Synchronized||(LA34_0>=Protected && LA34_0<=Abstract)||LA34_0==Dispatch||(LA34_0>=Strictfp && LA34_0<=Volatile)||LA34_0==Package||LA34_0==Private||(LA34_0>=Native && LA34_0<=Public)||LA34_0==Static||LA34_0==Final) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // InternalSpecParser.g:1043:1: (lv_modifiers_43_0= ruleCommonModifier )
                    	    {
                    	    // InternalSpecParser.g:1043:1: (lv_modifiers_43_0= ruleCommonModifier )
                    	    // InternalSpecParser.g:1044:3: lv_modifiers_43_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_29);
                    	    lv_modifiers_43_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_43_0, 
                    	              		"org.jnario.spec.Spec.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);

                    // InternalSpecParser.g:1060:3: ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) )
                    int alt42=4;
                    alt42 = dfa42.predict(input);
                    switch (alt42) {
                        case 1 :
                            // InternalSpecParser.g:1060:4: ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) )
                            {
                            // InternalSpecParser.g:1060:4: ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) )
                            // InternalSpecParser.g:1060:5: ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) )
                            {
                            // InternalSpecParser.g:1060:5: ( (lv_modifiers_44_0= ruleFieldModifier ) )
                            // InternalSpecParser.g:1061:1: (lv_modifiers_44_0= ruleFieldModifier )
                            {
                            // InternalSpecParser.g:1061:1: (lv_modifiers_44_0= ruleFieldModifier )
                            // InternalSpecParser.g:1062:3: lv_modifiers_44_0= ruleFieldModifier
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersFieldModifierParserRuleCall_2_6_2_0_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_30);
                            lv_modifiers_44_0=ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"modifiers",
                                      		lv_modifiers_44_0, 
                                      		"org.jnario.spec.Spec.FieldModifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1078:2: ( (lv_modifiers_45_0= ruleCommonModifier ) )*
                            loop35:
                            do {
                                int alt35=2;
                                int LA35_0 = input.LA(1);

                                if ( (LA35_0==Synchronized||(LA35_0>=Protected && LA35_0<=Abstract)||LA35_0==Dispatch||(LA35_0>=Strictfp && LA35_0<=Volatile)||LA35_0==Package||LA35_0==Private||(LA35_0>=Native && LA35_0<=Public)||LA35_0==Static||LA35_0==Final) ) {
                                    alt35=1;
                                }


                                switch (alt35) {
                            	case 1 :
                            	    // InternalSpecParser.g:1079:1: (lv_modifiers_45_0= ruleCommonModifier )
                            	    {
                            	    // InternalSpecParser.g:1079:1: (lv_modifiers_45_0= ruleCommonModifier )
                            	    // InternalSpecParser.g:1080:3: lv_modifiers_45_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_6_2_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_30);
                            	    lv_modifiers_45_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_45_0, 
                            	              		"org.jnario.spec.Spec.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop35;
                                }
                            } while (true);

                            // InternalSpecParser.g:1096:3: ( (lv_type_46_0= ruleJvmTypeReference ) )?
                            int alt36=2;
                            alt36 = dfa36.predict(input);
                            switch (alt36) {
                                case 1 :
                                    // InternalSpecParser.g:1097:1: (lv_type_46_0= ruleJvmTypeReference )
                                    {
                                    // InternalSpecParser.g:1097:1: (lv_type_46_0= ruleJvmTypeReference )
                                    // InternalSpecParser.g:1098:3: lv_type_46_0= ruleJvmTypeReference
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_6_2_0_2_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_3);
                                    lv_type_46_0=ruleJvmTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"type",
                                              		lv_type_46_0, 
                                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalSpecParser.g:1114:3: ( (lv_name_47_0= ruleValidID ) )
                            // InternalSpecParser.g:1115:1: (lv_name_47_0= ruleValidID )
                            {
                            // InternalSpecParser.g:1115:1: (lv_name_47_0= ruleValidID )
                            // InternalSpecParser.g:1116:3: lv_name_47_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_6_2_0_3_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_31);
                            lv_name_47_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_47_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:1133:6: ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? )
                            {
                            // InternalSpecParser.g:1133:6: ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? )
                            // InternalSpecParser.g:1133:7: ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )?
                            {
                            // InternalSpecParser.g:1133:7: ( (lv_modifiers_48_0= Extension ) )
                            // InternalSpecParser.g:1134:1: (lv_modifiers_48_0= Extension )
                            {
                            // InternalSpecParser.g:1134:1: (lv_modifiers_48_0= Extension )
                            // InternalSpecParser.g:1135:3: lv_modifiers_48_0= Extension
                            {
                            lv_modifiers_48_0=(Token)match(input,Extension,FollowSets000.FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_modifiers_48_0, grammarAccess.getMemberAccess().getModifiersExtensionKeyword_2_6_2_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		addWithLastConsumed(current, "modifiers", lv_modifiers_48_0, "extension");
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1149:2: ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )*
                            loop37:
                            do {
                                int alt37=3;
                                int LA37_0 = input.LA(1);

                                if ( ((LA37_0>=Val && LA37_0<=Var)) ) {
                                    alt37=1;
                                }
                                else if ( (LA37_0==Synchronized||(LA37_0>=Protected && LA37_0<=Abstract)||LA37_0==Dispatch||(LA37_0>=Strictfp && LA37_0<=Volatile)||LA37_0==Package||LA37_0==Private||(LA37_0>=Native && LA37_0<=Public)||LA37_0==Static||LA37_0==Final) ) {
                                    alt37=2;
                                }


                                switch (alt37) {
                            	case 1 :
                            	    // InternalSpecParser.g:1149:3: ( (lv_modifiers_49_0= ruleFieldModifier ) )
                            	    {
                            	    // InternalSpecParser.g:1149:3: ( (lv_modifiers_49_0= ruleFieldModifier ) )
                            	    // InternalSpecParser.g:1150:1: (lv_modifiers_49_0= ruleFieldModifier )
                            	    {
                            	    // InternalSpecParser.g:1150:1: (lv_modifiers_49_0= ruleFieldModifier )
                            	    // InternalSpecParser.g:1151:3: lv_modifiers_49_0= ruleFieldModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersFieldModifierParserRuleCall_2_6_2_1_1_0_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_32);
                            	    lv_modifiers_49_0=ruleFieldModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_49_0, 
                            	              		"org.jnario.spec.Spec.FieldModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // InternalSpecParser.g:1168:6: ( (lv_modifiers_50_0= ruleCommonModifier ) )
                            	    {
                            	    // InternalSpecParser.g:1168:6: ( (lv_modifiers_50_0= ruleCommonModifier ) )
                            	    // InternalSpecParser.g:1169:1: (lv_modifiers_50_0= ruleCommonModifier )
                            	    {
                            	    // InternalSpecParser.g:1169:1: (lv_modifiers_50_0= ruleCommonModifier )
                            	    // InternalSpecParser.g:1170:3: lv_modifiers_50_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_6_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_32);
                            	    lv_modifiers_50_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_50_0, 
                            	              		"org.jnario.spec.Spec.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop37;
                                }
                            } while (true);

                            // InternalSpecParser.g:1186:4: ( (lv_type_51_0= ruleJvmTypeReference ) )
                            // InternalSpecParser.g:1187:1: (lv_type_51_0= ruleJvmTypeReference )
                            {
                            // InternalSpecParser.g:1187:1: (lv_type_51_0= ruleJvmTypeReference )
                            // InternalSpecParser.g:1188:3: lv_type_51_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_6_2_1_2_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_type_51_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_51_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1204:2: ( (lv_name_52_0= ruleValidID ) )?
                            int alt38=2;
                            alt38 = dfa38.predict(input);
                            switch (alt38) {
                                case 1 :
                                    // InternalSpecParser.g:1205:1: (lv_name_52_0= ruleValidID )
                                    {
                                    // InternalSpecParser.g:1205:1: (lv_name_52_0= ruleValidID )
                                    // InternalSpecParser.g:1206:3: lv_name_52_0= ruleValidID
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_6_2_1_3_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_31);
                                    lv_name_52_0=ruleValidID();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"name",
                                              		lv_name_52_0, 
                                              		"org.eclipse.xtext.xbase.Xtype.ValidID");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSpecParser.g:1223:6: ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? )
                            {
                            // InternalSpecParser.g:1223:6: ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? )
                            // InternalSpecParser.g:1223:7: ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )?
                            {
                            // InternalSpecParser.g:1223:7: ( (lv_modifiers_53_0= ruleFieldModifier ) )
                            // InternalSpecParser.g:1224:1: (lv_modifiers_53_0= ruleFieldModifier )
                            {
                            // InternalSpecParser.g:1224:1: (lv_modifiers_53_0= ruleFieldModifier )
                            // InternalSpecParser.g:1225:3: lv_modifiers_53_0= ruleFieldModifier
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersFieldModifierParserRuleCall_2_6_2_2_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_34);
                            lv_modifiers_53_0=ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"modifiers",
                                      		lv_modifiers_53_0, 
                                      		"org.jnario.spec.Spec.FieldModifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1241:2: ( (lv_modifiers_54_0= ruleCommonModifier ) )*
                            loop39:
                            do {
                                int alt39=2;
                                int LA39_0 = input.LA(1);

                                if ( (LA39_0==Synchronized||(LA39_0>=Protected && LA39_0<=Abstract)||LA39_0==Dispatch||(LA39_0>=Strictfp && LA39_0<=Volatile)||LA39_0==Package||LA39_0==Private||(LA39_0>=Native && LA39_0<=Public)||LA39_0==Static||LA39_0==Final) ) {
                                    alt39=1;
                                }


                                switch (alt39) {
                            	case 1 :
                            	    // InternalSpecParser.g:1242:1: (lv_modifiers_54_0= ruleCommonModifier )
                            	    {
                            	    // InternalSpecParser.g:1242:1: (lv_modifiers_54_0= ruleCommonModifier )
                            	    // InternalSpecParser.g:1243:3: lv_modifiers_54_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_6_2_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_34);
                            	    lv_modifiers_54_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_54_0, 
                            	              		"org.jnario.spec.Spec.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop39;
                                }
                            } while (true);

                            // InternalSpecParser.g:1259:3: ( (lv_modifiers_55_0= Extension ) )
                            // InternalSpecParser.g:1260:1: (lv_modifiers_55_0= Extension )
                            {
                            // InternalSpecParser.g:1260:1: (lv_modifiers_55_0= Extension )
                            // InternalSpecParser.g:1261:3: lv_modifiers_55_0= Extension
                            {
                            lv_modifiers_55_0=(Token)match(input,Extension,FollowSets000.FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_modifiers_55_0, grammarAccess.getMemberAccess().getModifiersExtensionKeyword_2_6_2_2_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		addWithLastConsumed(current, "modifiers", lv_modifiers_55_0, "extension");
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1275:2: ( (lv_modifiers_56_0= ruleCommonModifier ) )*
                            loop40:
                            do {
                                int alt40=2;
                                int LA40_0 = input.LA(1);

                                if ( (LA40_0==Synchronized||(LA40_0>=Protected && LA40_0<=Abstract)||LA40_0==Dispatch||(LA40_0>=Strictfp && LA40_0<=Volatile)||LA40_0==Package||LA40_0==Private||(LA40_0>=Native && LA40_0<=Public)||LA40_0==Static||LA40_0==Final) ) {
                                    alt40=1;
                                }


                                switch (alt40) {
                            	case 1 :
                            	    // InternalSpecParser.g:1276:1: (lv_modifiers_56_0= ruleCommonModifier )
                            	    {
                            	    // InternalSpecParser.g:1276:1: (lv_modifiers_56_0= ruleCommonModifier )
                            	    // InternalSpecParser.g:1277:3: lv_modifiers_56_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_6_2_2_3_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_30);
                            	    lv_modifiers_56_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_56_0, 
                            	              		"org.jnario.spec.Spec.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop40;
                                }
                            } while (true);

                            // InternalSpecParser.g:1293:3: ( (lv_type_57_0= ruleJvmTypeReference ) )
                            // InternalSpecParser.g:1294:1: (lv_type_57_0= ruleJvmTypeReference )
                            {
                            // InternalSpecParser.g:1294:1: (lv_type_57_0= ruleJvmTypeReference )
                            // InternalSpecParser.g:1295:3: lv_type_57_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_6_2_2_4_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_type_57_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_57_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1311:2: ( (lv_name_58_0= ruleValidID ) )?
                            int alt41=2;
                            alt41 = dfa41.predict(input);
                            switch (alt41) {
                                case 1 :
                                    // InternalSpecParser.g:1312:1: (lv_name_58_0= ruleValidID )
                                    {
                                    // InternalSpecParser.g:1312:1: (lv_name_58_0= ruleValidID )
                                    // InternalSpecParser.g:1313:3: lv_name_58_0= ruleValidID
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_6_2_2_5_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_31);
                                    lv_name_58_0=ruleValidID();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"name",
                                              		lv_name_58_0, 
                                              		"org.eclipse.xtext.xbase.Xtype.ValidID");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalSpecParser.g:1330:6: ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) )
                            {
                            // InternalSpecParser.g:1330:6: ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) )
                            // InternalSpecParser.g:1330:7: ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) )
                            {
                            // InternalSpecParser.g:1330:7: ( (lv_type_59_0= ruleJvmTypeReference ) )
                            // InternalSpecParser.g:1331:1: (lv_type_59_0= ruleJvmTypeReference )
                            {
                            // InternalSpecParser.g:1331:1: (lv_type_59_0= ruleJvmTypeReference )
                            // InternalSpecParser.g:1332:3: lv_type_59_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_6_2_3_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_3);
                            lv_type_59_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_59_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1348:2: ( (lv_name_60_0= ruleValidID ) )
                            // InternalSpecParser.g:1349:1: (lv_name_60_0= ruleValidID )
                            {
                            // InternalSpecParser.g:1349:1: (lv_name_60_0= ruleValidID )
                            // InternalSpecParser.g:1350:3: lv_name_60_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_6_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_31);
                            lv_name_60_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_60_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:1366:4: (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==EqualsSign) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalSpecParser.g:1367:2: otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) )
                            {
                            otherlv_61=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_61, grammarAccess.getMemberAccess().getEqualsSignKeyword_2_6_3_0());
                                  
                            }
                            // InternalSpecParser.g:1371:1: ( (lv_initialValue_62_0= ruleXExpression ) )
                            // InternalSpecParser.g:1372:1: (lv_initialValue_62_0= ruleXExpression )
                            {
                            // InternalSpecParser.g:1372:1: (lv_initialValue_62_0= ruleXExpression )
                            // InternalSpecParser.g:1373:3: lv_initialValue_62_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getInitialValueXExpressionParserRuleCall_2_6_3_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_35);
                            lv_initialValue_62_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initialValue",
                                      		lv_initialValue_62_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:1389:4: (otherlv_63= Semicolon )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==Semicolon) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalSpecParser.g:1390:2: otherlv_63= Semicolon
                            {
                            otherlv_63=(Token)match(input,Semicolon,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_63, grammarAccess.getMemberAccess().getSemicolonKeyword_2_6_4());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalSpecParser.g:1395:6: ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? )
                    {
                    // InternalSpecParser.g:1395:6: ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? )
                    // InternalSpecParser.g:1395:7: () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )?
                    {
                    // InternalSpecParser.g:1395:7: ()
                    // InternalSpecParser.g:1396:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getJnarioFunctionAnnotationInfoAction_2_7_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:1404:2: ( (lv_modifiers_65_0= ruleCommonModifier ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==Synchronized||(LA45_0>=Protected && LA45_0<=Abstract)||LA45_0==Dispatch||(LA45_0>=Strictfp && LA45_0<=Volatile)||LA45_0==Package||LA45_0==Private||(LA45_0>=Native && LA45_0<=Public)||LA45_0==Static||LA45_0==Final) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalSpecParser.g:1405:1: (lv_modifiers_65_0= ruleCommonModifier )
                    	    {
                    	    // InternalSpecParser.g:1405:1: (lv_modifiers_65_0= ruleCommonModifier )
                    	    // InternalSpecParser.g:1406:3: lv_modifiers_65_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_7_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_20);
                    	    lv_modifiers_65_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_65_0, 
                    	              		"org.jnario.spec.Spec.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    // InternalSpecParser.g:1422:3: ( (lv_modifiers_66_0= ruleMethodModifier ) )
                    // InternalSpecParser.g:1423:1: (lv_modifiers_66_0= ruleMethodModifier )
                    {
                    // InternalSpecParser.g:1423:1: (lv_modifiers_66_0= ruleMethodModifier )
                    // InternalSpecParser.g:1424:3: lv_modifiers_66_0= ruleMethodModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersMethodModifierParserRuleCall_2_7_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_modifiers_66_0=ruleMethodModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_66_0, 
                              		"org.jnario.spec.Spec.MethodModifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:1440:2: ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )*
                    loop46:
                    do {
                        int alt46=3;
                        int LA46_0 = input.LA(1);

                        if ( (LA46_0==Synchronized||(LA46_0>=Protected && LA46_0<=Abstract)||LA46_0==Dispatch||(LA46_0>=Strictfp && LA46_0<=Volatile)||LA46_0==Package||LA46_0==Private||(LA46_0>=Native && LA46_0<=Public)||LA46_0==Static||LA46_0==Final) ) {
                            alt46=1;
                        }
                        else if ( (LA46_0==Override||LA46_0==Def) ) {
                            alt46=2;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // InternalSpecParser.g:1440:3: ( (lv_modifiers_67_0= ruleCommonModifier ) )
                    	    {
                    	    // InternalSpecParser.g:1440:3: ( (lv_modifiers_67_0= ruleCommonModifier ) )
                    	    // InternalSpecParser.g:1441:1: (lv_modifiers_67_0= ruleCommonModifier )
                    	    {
                    	    // InternalSpecParser.g:1441:1: (lv_modifiers_67_0= ruleCommonModifier )
                    	    // InternalSpecParser.g:1442:3: lv_modifiers_67_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_7_3_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_36);
                    	    lv_modifiers_67_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_67_0, 
                    	              		"org.jnario.spec.Spec.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalSpecParser.g:1459:6: ( (lv_modifiers_68_0= ruleMethodModifier ) )
                    	    {
                    	    // InternalSpecParser.g:1459:6: ( (lv_modifiers_68_0= ruleMethodModifier ) )
                    	    // InternalSpecParser.g:1460:1: (lv_modifiers_68_0= ruleMethodModifier )
                    	    {
                    	    // InternalSpecParser.g:1460:1: (lv_modifiers_68_0= ruleMethodModifier )
                    	    // InternalSpecParser.g:1461:3: lv_modifiers_68_0= ruleMethodModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersMethodModifierParserRuleCall_2_7_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_36);
                    	    lv_modifiers_68_0=ruleMethodModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_68_0, 
                    	              		"org.jnario.spec.Spec.MethodModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop46;
                        }
                    } while (true);

                    // InternalSpecParser.g:1477:4: (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==LessThanSign) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalSpecParser.g:1478:2: otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign
                            {
                            otherlv_69=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_69, grammarAccess.getMemberAccess().getLessThanSignKeyword_2_7_4_0());
                                  
                            }
                            // InternalSpecParser.g:1482:1: ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) )
                            // InternalSpecParser.g:1483:1: (lv_typeParameters_70_0= ruleJvmTypeParameter )
                            {
                            // InternalSpecParser.g:1483:1: (lv_typeParameters_70_0= ruleJvmTypeParameter )
                            // InternalSpecParser.g:1484:3: lv_typeParameters_70_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_7_4_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_typeParameters_70_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_70_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1500:2: (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )*
                            loop47:
                            do {
                                int alt47=2;
                                int LA47_0 = input.LA(1);

                                if ( (LA47_0==Comma) ) {
                                    alt47=1;
                                }


                                switch (alt47) {
                            	case 1 :
                            	    // InternalSpecParser.g:1501:2: otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_71=(Token)match(input,Comma,FollowSets000.FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_71, grammarAccess.getMemberAccess().getCommaKeyword_2_7_4_2_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:1505:1: ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) )
                            	    // InternalSpecParser.g:1506:1: (lv_typeParameters_72_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalSpecParser.g:1506:1: (lv_typeParameters_72_0= ruleJvmTypeParameter )
                            	    // InternalSpecParser.g:1507:3: lv_typeParameters_72_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_7_4_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_16);
                            	    lv_typeParameters_72_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_72_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop47;
                                }
                            } while (true);

                            otherlv_73=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_73, grammarAccess.getMemberAccess().getGreaterThanSignKeyword_2_7_4_3());
                                  
                            }

                            }
                            break;

                    }

                    // InternalSpecParser.g:1528:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) )
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==RULE_ID) ) {
                        int LA49_1 = input.LA(2);

                        if ( (LA49_1==FullStop||LA49_1==LessThanSign||LA49_1==LeftSquareBracket||LA49_1==RULE_ID) ) {
                            alt49=1;
                        }
                        else if ( (LA49_1==LeftParenthesis) ) {
                            alt49=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 49, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA49_0==EqualsSignGreaterThanSign||LA49_0==LeftParenthesis) ) {
                        alt49=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 49, 0, input);

                        throw nvae;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalSpecParser.g:1528:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) )
                            {
                            // InternalSpecParser.g:1528:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) )
                            // InternalSpecParser.g:1528:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis )
                            {
                            // InternalSpecParser.g:1538:5: ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis )
                            // InternalSpecParser.g:1538:6: ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis
                            {
                            // InternalSpecParser.g:1538:6: ( (lv_returnType_74_0= ruleJvmTypeReference ) )
                            // InternalSpecParser.g:1539:1: (lv_returnType_74_0= ruleJvmTypeReference )
                            {
                            // InternalSpecParser.g:1539:1: (lv_returnType_74_0= ruleJvmTypeReference )
                            // InternalSpecParser.g:1540:3: lv_returnType_74_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_7_5_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_3);
                            lv_returnType_74_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnType",
                                      		lv_returnType_74_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1556:2: ( (lv_name_75_0= ruleValidID ) )
                            // InternalSpecParser.g:1557:1: (lv_name_75_0= ruleValidID )
                            {
                            // InternalSpecParser.g:1557:1: (lv_name_75_0= ruleValidID )
                            // InternalSpecParser.g:1558:3: lv_name_75_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_7_5_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_38);
                            lv_name_75_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_75_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_76=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_76, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_7_5_0_0_2());
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:1580:6: ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis )
                            {
                            // InternalSpecParser.g:1580:6: ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis )
                            // InternalSpecParser.g:1580:7: ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis
                            {
                            // InternalSpecParser.g:1580:7: ( (lv_name_77_0= ruleValidID ) )
                            // InternalSpecParser.g:1581:1: (lv_name_77_0= ruleValidID )
                            {
                            // InternalSpecParser.g:1581:1: (lv_name_77_0= ruleValidID )
                            // InternalSpecParser.g:1582:3: lv_name_77_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_7_5_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_38);
                            lv_name_77_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_77_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_78=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_78, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_7_5_1_1());
                                  
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:1603:3: ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )?
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==Extension||LA51_0==EqualsSignGreaterThanSign||LA51_0==LeftParenthesis||LA51_0==CommercialAt||LA51_0==RULE_ID) ) {
                        alt51=1;
                    }
                    switch (alt51) {
                        case 1 :
                            // InternalSpecParser.g:1603:4: ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )*
                            {
                            // InternalSpecParser.g:1603:4: ( (lv_parameters_79_0= ruleParameter ) )
                            // InternalSpecParser.g:1604:1: (lv_parameters_79_0= ruleParameter )
                            {
                            // InternalSpecParser.g:1604:1: (lv_parameters_79_0= ruleParameter )
                            // InternalSpecParser.g:1605:3: lv_parameters_79_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getParametersParameterParserRuleCall_2_7_6_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_parameters_79_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_79_0, 
                                      		"org.jnario.spec.Spec.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1621:2: (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )*
                            loop50:
                            do {
                                int alt50=2;
                                int LA50_0 = input.LA(1);

                                if ( (LA50_0==Comma) ) {
                                    alt50=1;
                                }


                                switch (alt50) {
                            	case 1 :
                            	    // InternalSpecParser.g:1622:2: otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) )
                            	    {
                            	    otherlv_80=(Token)match(input,Comma,FollowSets000.FOLLOW_40); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_80, grammarAccess.getMemberAccess().getCommaKeyword_2_7_6_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:1626:1: ( (lv_parameters_81_0= ruleParameter ) )
                            	    // InternalSpecParser.g:1627:1: (lv_parameters_81_0= ruleParameter )
                            	    {
                            	    // InternalSpecParser.g:1627:1: (lv_parameters_81_0= ruleParameter )
                            	    // InternalSpecParser.g:1628:3: lv_parameters_81_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getParametersParameterParserRuleCall_2_7_6_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_13);
                            	    lv_parameters_81_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_81_0, 
                            	              		"org.jnario.spec.Spec.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop50;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_82=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_82, grammarAccess.getMemberAccess().getRightParenthesisKeyword_2_7_7());
                          
                    }
                    // InternalSpecParser.g:1649:1: (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==Throws) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalSpecParser.g:1650:2: otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )*
                            {
                            otherlv_83=(Token)match(input,Throws,FollowSets000.FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_83, grammarAccess.getMemberAccess().getThrowsKeyword_2_7_8_0());
                                  
                            }
                            // InternalSpecParser.g:1654:1: ( (lv_exceptions_84_0= ruleJvmTypeReference ) )
                            // InternalSpecParser.g:1655:1: (lv_exceptions_84_0= ruleJvmTypeReference )
                            {
                            // InternalSpecParser.g:1655:1: (lv_exceptions_84_0= ruleJvmTypeReference )
                            // InternalSpecParser.g:1656:3: lv_exceptions_84_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExceptionsJvmTypeReferenceParserRuleCall_2_7_8_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_42);
                            lv_exceptions_84_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"exceptions",
                                      		lv_exceptions_84_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:1672:2: (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )*
                            loop52:
                            do {
                                int alt52=2;
                                int LA52_0 = input.LA(1);

                                if ( (LA52_0==Comma) ) {
                                    alt52=1;
                                }


                                switch (alt52) {
                            	case 1 :
                            	    // InternalSpecParser.g:1673:2: otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_85=(Token)match(input,Comma,FollowSets000.FOLLOW_37); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_85, grammarAccess.getMemberAccess().getCommaKeyword_2_7_8_2_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:1677:1: ( (lv_exceptions_86_0= ruleJvmTypeReference ) )
                            	    // InternalSpecParser.g:1678:1: (lv_exceptions_86_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalSpecParser.g:1678:1: (lv_exceptions_86_0= ruleJvmTypeReference )
                            	    // InternalSpecParser.g:1679:3: lv_exceptions_86_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getExceptionsJvmTypeReferenceParserRuleCall_2_7_8_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_42);
                            	    lv_exceptions_86_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"exceptions",
                            	              		lv_exceptions_86_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop52;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSpecParser.g:1695:6: ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )?
                    int alt54=4;
                    switch ( input.LA(1) ) {
                        case LeftCurlyBracket:
                            {
                            alt54=1;
                            }
                            break;
                        case RULE_RICH_TEXT:
                        case RULE_RICH_TEXT_START:
                            {
                            alt54=2;
                            }
                            break;
                        case Semicolon:
                            {
                            alt54=3;
                            }
                            break;
                    }

                    switch (alt54) {
                        case 1 :
                            // InternalSpecParser.g:1695:7: ( (lv_expression_87_0= ruleXBlockExpression ) )
                            {
                            // InternalSpecParser.g:1695:7: ( (lv_expression_87_0= ruleXBlockExpression ) )
                            // InternalSpecParser.g:1696:1: (lv_expression_87_0= ruleXBlockExpression )
                            {
                            // InternalSpecParser.g:1696:1: (lv_expression_87_0= ruleXBlockExpression )
                            // InternalSpecParser.g:1697:3: lv_expression_87_0= ruleXBlockExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExpressionXBlockExpressionParserRuleCall_2_7_9_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_87_0=ruleXBlockExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_87_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:1714:6: ( (lv_expression_88_0= ruleRichString ) )
                            {
                            // InternalSpecParser.g:1714:6: ( (lv_expression_88_0= ruleRichString ) )
                            // InternalSpecParser.g:1715:1: (lv_expression_88_0= ruleRichString )
                            {
                            // InternalSpecParser.g:1715:1: (lv_expression_88_0= ruleRichString )
                            // InternalSpecParser.g:1716:3: lv_expression_88_0= ruleRichString
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExpressionRichStringParserRuleCall_2_7_9_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_88_0=ruleRichString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_88_0, 
                                      		"org.jnario.xbase.richstring.XbaseWithRichstring.RichString");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSpecParser.g:1734:2: otherlv_89= Semicolon
                            {
                            otherlv_89=(Token)match(input,Semicolon,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_89, grammarAccess.getMemberAccess().getSemicolonKeyword_2_7_9_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMember"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalSpecParser.g:1746:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalSpecParser.g:1747:2: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalSpecParser.g:1748:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalSpecParser.g:1755:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression | this_Assertion_15= ruleAssertion ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;

        EObject this_Assertion_15 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:1758:28: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression | this_Assertion_15= ruleAssertion ) )
            // InternalSpecParser.g:1759:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression | this_Assertion_15= ruleAssertion )
            {
            // InternalSpecParser.g:1759:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression | this_Assertion_15= ruleAssertion )
            int alt56=16;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalSpecParser.g:1760:2: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XConstructorCall_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:1773:2: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XBlockExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:1786:2: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XSwitchExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:1798:6: ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalSpecParser.g:1798:6: ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalSpecParser.g:1798:7: ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XSynchronizedExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSpecParser.g:1817:2: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XFeatureCall_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpecParser.g:1830:2: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSpecParser.g:1843:2: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XIfExpression_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalSpecParser.g:1855:6: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalSpecParser.g:1855:6: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalSpecParser.g:1855:7: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XForLoopExpression_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSpecParser.g:1880:2: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XBasicForLoopExpression_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalSpecParser.g:1893:2: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XWhileExpression_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalSpecParser.g:1906:2: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XDoWhileExpression_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalSpecParser.g:1919:2: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XThrowExpression_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    // InternalSpecParser.g:1932:2: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XReturnExpression_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    // InternalSpecParser.g:1945:2: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XTryCatchFinallyExpression_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    // InternalSpecParser.g:1958:2: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XParenthesizedExpression_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 16 :
                    // InternalSpecParser.g:1971:2: this_Assertion_15= ruleAssertion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getAssertionParserRuleCall_15()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assertion_15=ruleAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Assertion_15;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalSpecParser.g:1990:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalSpecParser.g:1991:2: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalSpecParser.g:1992:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalSpecParser.g:1999:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? ) | ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;

        EObject lv_type_8_0 = null;

        EObject lv_type_11_0 = null;

        EObject lv_rightOperand_14_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:2002:28: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? ) | ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalSpecParser.g:2003:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? ) | ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalSpecParser.g:2003:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? ) | ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalSpecParser.g:2004:2: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? ) | ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_43);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XOtherOperatorExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:2015:1: ( ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? ) | ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) ) )*
            loop59:
            do {
                int alt59=5;
                alt59 = dfa59.predict(input);
                switch (alt59) {
            	case 1 :
            	    // InternalSpecParser.g:2015:2: ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? )
            	    {
            	    // InternalSpecParser.g:2015:2: ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? )
            	    // InternalSpecParser.g:2015:3: ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )?
            	    {
            	    // InternalSpecParser.g:2015:3: ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) )
            	    // InternalSpecParser.g:2015:4: ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) )
            	    {
            	    // InternalSpecParser.g:2021:6: ( () ( ( ruleShould ) ) )
            	    // InternalSpecParser.g:2021:7: () ( ( ruleShould ) )
            	    {
            	    // InternalSpecParser.g:2021:7: ()
            	    // InternalSpecParser.g:2022:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getShouldLeftOperandAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:2030:2: ( ( ruleShould ) )
            	    // InternalSpecParser.g:2031:1: ( ruleShould )
            	    {
            	    // InternalSpecParser.g:2031:1: ( ruleShould )
            	    // InternalSpecParser.g:2032:3: ruleShould
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    ruleShould();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:2049:4: ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )?
            	    int alt57=2;
            	    alt57 = dfa57.predict(input);
            	    switch (alt57) {
            	        case 1 :
            	            // InternalSpecParser.g:2049:5: ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression )
            	            {
            	            // InternalSpecParser.g:2054:1: (lv_rightOperand_3_0= ruleXOtherOperatorExpression )
            	            // InternalSpecParser.g:2055:3: lv_rightOperand_3_0= ruleXOtherOperatorExpression
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_0_1_0()); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_43);
            	            lv_rightOperand_3_0=ruleXOtherOperatorExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	              	        }
            	                     		set(
            	                     			current, 
            	                     			"rightOperand",
            	                      		lv_rightOperand_3_0, 
            	                      		"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSpecParser.g:2072:6: ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalSpecParser.g:2072:6: ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) )
            	    // InternalSpecParser.g:2072:7: ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalSpecParser.g:2072:7: ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) )
            	    // InternalSpecParser.g:2072:8: ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) )
            	    {
            	    // InternalSpecParser.g:2080:6: ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) )
            	    // InternalSpecParser.g:2080:7: () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws )
            	    {
            	    // InternalSpecParser.g:2080:7: ()
            	    // InternalSpecParser.g:2081:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getShouldThrowExpressionAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:2089:2: ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws )
            	    int alt58=2;
            	    int LA58_0 = input.LA(1);

            	    if ( (LA58_0==Should) ) {
            	        alt58=1;
            	    }
            	    else if ( (LA58_0==Throws) ) {
            	        alt58=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 58, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt58) {
            	        case 1 :
            	            // InternalSpecParser.g:2089:3: (otherlv_5= Should otherlv_6= Throw )
            	            {
            	            // InternalSpecParser.g:2089:3: (otherlv_5= Should otherlv_6= Throw )
            	            // InternalSpecParser.g:2090:2: otherlv_5= Should otherlv_6= Throw
            	            {
            	            otherlv_5=(Token)match(input,Should,FollowSets000.FOLLOW_45); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_5, grammarAccess.getXRelationalExpressionAccess().getShouldKeyword_1_1_0_0_1_0_0());
            	                  
            	            }
            	            otherlv_6=(Token)match(input,Throw,FollowSets000.FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_6, grammarAccess.getXRelationalExpressionAccess().getThrowKeyword_1_1_0_0_1_0_1());
            	                  
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSpecParser.g:2101:2: otherlv_7= Throws
            	            {
            	            otherlv_7=(Token)match(input,Throws,FollowSets000.FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_7, grammarAccess.getXRelationalExpressionAccess().getThrowsKeyword_1_1_0_0_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:2105:4: ( (lv_type_8_0= ruleJvmTypeReference ) )
            	    // InternalSpecParser.g:2106:1: (lv_type_8_0= ruleJvmTypeReference )
            	    {
            	    // InternalSpecParser.g:2106:1: (lv_type_8_0= ruleJvmTypeReference )
            	    // InternalSpecParser.g:2107:3: lv_type_8_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_type_8_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_8_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalSpecParser.g:2124:6: ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalSpecParser.g:2124:6: ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) )
            	    // InternalSpecParser.g:2124:7: ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalSpecParser.g:2124:7: ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) )
            	    // InternalSpecParser.g:2124:8: ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof )
            	    {
            	    // InternalSpecParser.g:2127:5: ( () otherlv_10= Instanceof )
            	    // InternalSpecParser.g:2127:6: () otherlv_10= Instanceof
            	    {
            	    // InternalSpecParser.g:2127:6: ()
            	    // InternalSpecParser.g:2128:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_2_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_10=(Token)match(input,Instanceof,FollowSets000.FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_10, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_2_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // InternalSpecParser.g:2141:3: ( (lv_type_11_0= ruleJvmTypeReference ) )
            	    // InternalSpecParser.g:2142:1: (lv_type_11_0= ruleJvmTypeReference )
            	    {
            	    // InternalSpecParser.g:2142:1: (lv_type_11_0= ruleJvmTypeReference )
            	    // InternalSpecParser.g:2143:3: lv_type_11_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_type_11_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_11_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalSpecParser.g:2160:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalSpecParser.g:2160:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalSpecParser.g:2160:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalSpecParser.g:2160:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalSpecParser.g:2160:8: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalSpecParser.g:2166:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalSpecParser.g:2166:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalSpecParser.g:2166:7: ()
            	    // InternalSpecParser.g:2167:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_3_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:2175:2: ( ( ruleOpCompare ) )
            	    // InternalSpecParser.g:2176:1: ( ruleOpCompare )
            	    {
            	    // InternalSpecParser.g:2176:1: ( ruleOpCompare )
            	    // InternalSpecParser.g:2177:3: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_3_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:2194:4: ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) )
            	    // InternalSpecParser.g:2195:1: (lv_rightOperand_14_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalSpecParser.g:2195:1: (lv_rightOperand_14_0= ruleXOtherOperatorExpression )
            	    // InternalSpecParser.g:2196:3: lv_rightOperand_14_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_rightOperand_14_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_14_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleShould"
    // InternalSpecParser.g:2220:1: entryRuleShould returns [String current=null] : iv_ruleShould= ruleShould EOF ;
    public final String entryRuleShould() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleShould = null;


        try {
            // InternalSpecParser.g:2221:1: (iv_ruleShould= ruleShould EOF )
            // InternalSpecParser.g:2222:2: iv_ruleShould= ruleShould EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShouldRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShould=ruleShould();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShould.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShould"


    // $ANTLR start "ruleShould"
    // InternalSpecParser.g:2229:1: ruleShould returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Should (kw= Not )? this_ID_2= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleShould() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_ID_2=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:2233:6: ( (kw= Should (kw= Not )? this_ID_2= RULE_ID ) )
            // InternalSpecParser.g:2234:1: (kw= Should (kw= Not )? this_ID_2= RULE_ID )
            {
            // InternalSpecParser.g:2234:1: (kw= Should (kw= Not )? this_ID_2= RULE_ID )
            // InternalSpecParser.g:2235:2: kw= Should (kw= Not )? this_ID_2= RULE_ID
            {
            kw=(Token)match(input,Should,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getShouldAccess().getShouldKeyword_0()); 
                  
            }
            // InternalSpecParser.g:2240:1: (kw= Not )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==Not) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSpecParser.g:2241:2: kw= Not
                    {
                    kw=(Token)match(input,Not,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShouldAccess().getNotKeyword_1()); 
                          
                    }

                    }
                    break;

            }

            this_ID_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_2);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_2, grammarAccess.getShouldAccess().getIDTerminalRuleCall_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShould"


    // $ANTLR start "entryRuleAssertion"
    // InternalSpecParser.g:2261:1: entryRuleAssertion returns [EObject current=null] : iv_ruleAssertion= ruleAssertion EOF ;
    public final EObject entryRuleAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssertion = null;


        try {
            // InternalSpecParser.g:2262:2: (iv_ruleAssertion= ruleAssertion EOF )
            // InternalSpecParser.g:2263:2: iv_ruleAssertion= ruleAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssertionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssertion=ruleAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssertion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssertion"


    // $ANTLR start "ruleAssertion"
    // InternalSpecParser.g:2270:1: ruleAssertion returns [EObject current=null] : ( () otherlv_1= Assert ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:2273:28: ( ( () otherlv_1= Assert ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalSpecParser.g:2274:1: ( () otherlv_1= Assert ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalSpecParser.g:2274:1: ( () otherlv_1= Assert ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalSpecParser.g:2274:2: () otherlv_1= Assert ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:2274:2: ()
            // InternalSpecParser.g:2275:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAssertionAccess().getAssertionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Assert,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAssertionAccess().getAssertKeyword_1());
                  
            }
            // InternalSpecParser.g:2288:1: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalSpecParser.g:2289:1: (lv_expression_2_0= ruleXExpression )
            {
            // InternalSpecParser.g:2289:1: (lv_expression_2_0= ruleXExpression )
            // InternalSpecParser.g:2290:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssertionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssertionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssertion"


    // $ANTLR start "entryRuleExampleColumn"
    // InternalSpecParser.g:2314:1: entryRuleExampleColumn returns [EObject current=null] : iv_ruleExampleColumn= ruleExampleColumn EOF ;
    public final EObject entryRuleExampleColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExampleColumn = null;


        try {
            // InternalSpecParser.g:2315:2: (iv_ruleExampleColumn= ruleExampleColumn EOF )
            // InternalSpecParser.g:2316:2: iv_ruleExampleColumn= ruleExampleColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExampleColumnRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExampleColumn=ruleExampleColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExampleColumn; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExampleColumn"


    // $ANTLR start "ruleExampleColumn"
    // InternalSpecParser.g:2323:1: ruleExampleColumn returns [EObject current=null] : ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) otherlv_2= VerticalLine ) ;
    public final EObject ruleExampleColumn() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_type_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:2326:28: ( ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) otherlv_2= VerticalLine ) )
            // InternalSpecParser.g:2327:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) otherlv_2= VerticalLine )
            {
            // InternalSpecParser.g:2327:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) otherlv_2= VerticalLine )
            // InternalSpecParser.g:2327:2: ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) otherlv_2= VerticalLine
            {
            // InternalSpecParser.g:2327:2: ( (lv_type_0_0= ruleJvmTypeReference ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_ID) ) {
                int LA61_1 = input.LA(2);

                if ( (LA61_1==FullStop||LA61_1==LessThanSign||LA61_1==LeftSquareBracket||LA61_1==RULE_ID) ) {
                    alt61=1;
                }
            }
            else if ( (LA61_0==EqualsSignGreaterThanSign||LA61_0==LeftParenthesis) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSpecParser.g:2328:1: (lv_type_0_0= ruleJvmTypeReference )
                    {
                    // InternalSpecParser.g:2328:1: (lv_type_0_0= ruleJvmTypeReference )
                    // InternalSpecParser.g:2329:3: lv_type_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExampleColumnAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_3);
                    lv_type_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExampleColumnRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_0_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSpecParser.g:2345:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalSpecParser.g:2346:1: (lv_name_1_0= ruleValidID )
            {
            // InternalSpecParser.g:2346:1: (lv_name_1_0= ruleValidID )
            // InternalSpecParser.g:2347:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExampleColumnAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_47);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExampleColumnRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,VerticalLine,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getExampleColumnAccess().getVerticalLineKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExampleColumn"


    // $ANTLR start "entryRuleExampleRow"
    // InternalSpecParser.g:2376:1: entryRuleExampleRow returns [EObject current=null] : iv_ruleExampleRow= ruleExampleRow EOF ;
    public final EObject entryRuleExampleRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExampleRow = null;


        try {
            // InternalSpecParser.g:2377:2: (iv_ruleExampleRow= ruleExampleRow EOF )
            // InternalSpecParser.g:2378:2: iv_ruleExampleRow= ruleExampleRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExampleRowRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExampleRow=ruleExampleRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExampleRow; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExampleRow"


    // $ANTLR start "ruleExampleRow"
    // InternalSpecParser.g:2385:1: ruleExampleRow returns [EObject current=null] : (otherlv_0= VerticalLine () ( ( (lv_cells_2_0= ruleExampleCell ) ) otherlv_3= VerticalLine )* ) ;
    public final EObject ruleExampleRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_cells_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:2388:28: ( (otherlv_0= VerticalLine () ( ( (lv_cells_2_0= ruleExampleCell ) ) otherlv_3= VerticalLine )* ) )
            // InternalSpecParser.g:2389:1: (otherlv_0= VerticalLine () ( ( (lv_cells_2_0= ruleExampleCell ) ) otherlv_3= VerticalLine )* )
            {
            // InternalSpecParser.g:2389:1: (otherlv_0= VerticalLine () ( ( (lv_cells_2_0= ruleExampleCell ) ) otherlv_3= VerticalLine )* )
            // InternalSpecParser.g:2390:2: otherlv_0= VerticalLine () ( ( (lv_cells_2_0= ruleExampleCell ) ) otherlv_3= VerticalLine )*
            {
            otherlv_0=(Token)match(input,VerticalLine,FollowSets000.FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExampleRowAccess().getVerticalLineKeyword_0());
                  
            }
            // InternalSpecParser.g:2394:1: ()
            // InternalSpecParser.g:2395:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExampleRowAccess().getExampleRowAction_1(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:2403:2: ( ( (lv_cells_2_0= ruleExampleCell ) ) otherlv_3= VerticalLine )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==Synchronized||LA62_0==Extension||LA62_0==Extends||LA62_0==Assert||LA62_0==Import||LA62_0==Return||(LA62_0>=Static && LA62_0<=Switch)||LA62_0==Typeof||LA62_0==False||(LA62_0>=Super && LA62_0<=While)||(LA62_0>=Null && LA62_0<=True)||(LA62_0>=For && LA62_0<=New)||LA62_0==Try||(LA62_0>=Do && LA62_0<=If)||(LA62_0>=ExclamationMark && LA62_0<=NumberSign)||LA62_0==LeftParenthesis||LA62_0==PlusSign||LA62_0==HyphenMinus||LA62_0==LessThanSign||LA62_0==LeftSquareBracket||LA62_0==LeftCurlyBracket||LA62_0==RULE_ID||(LA62_0>=RULE_RICH_TEXT && LA62_0<=RULE_RICH_TEXT_START)||(LA62_0>=RULE_HEX && LA62_0<=RULE_STRING)) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSpecParser.g:2403:3: ( (lv_cells_2_0= ruleExampleCell ) ) otherlv_3= VerticalLine
            	    {
            	    // InternalSpecParser.g:2403:3: ( (lv_cells_2_0= ruleExampleCell ) )
            	    // InternalSpecParser.g:2404:1: (lv_cells_2_0= ruleExampleCell )
            	    {
            	    // InternalSpecParser.g:2404:1: (lv_cells_2_0= ruleExampleCell )
            	    // InternalSpecParser.g:2405:3: lv_cells_2_0= ruleExampleCell
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExampleRowAccess().getCellsExampleCellParserRuleCall_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    lv_cells_2_0=ruleExampleCell();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExampleRowRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cells",
            	              		lv_cells_2_0, 
            	              		"org.jnario.spec.Spec.ExampleCell");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,VerticalLine,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getExampleRowAccess().getVerticalLineKeyword_2_1());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExampleRow"


    // $ANTLR start "entryRuleExampleCell"
    // InternalSpecParser.g:2434:1: entryRuleExampleCell returns [EObject current=null] : iv_ruleExampleCell= ruleExampleCell EOF ;
    public final EObject entryRuleExampleCell() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExampleCell = null;


        try {
            // InternalSpecParser.g:2435:2: (iv_ruleExampleCell= ruleExampleCell EOF )
            // InternalSpecParser.g:2436:2: iv_ruleExampleCell= ruleExampleCell EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExampleCellRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExampleCell=ruleExampleCell();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExampleCell; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExampleCell"


    // $ANTLR start "ruleExampleCell"
    // InternalSpecParser.g:2443:1: ruleExampleCell returns [EObject current=null] : ( (lv_expression_0_0= ruleXExpression ) ) ;
    public final EObject ruleExampleCell() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:2446:28: ( ( (lv_expression_0_0= ruleXExpression ) ) )
            // InternalSpecParser.g:2447:1: ( (lv_expression_0_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:2447:1: ( (lv_expression_0_0= ruleXExpression ) )
            // InternalSpecParser.g:2448:1: (lv_expression_0_0= ruleXExpression )
            {
            // InternalSpecParser.g:2448:1: (lv_expression_0_0= ruleXExpression )
            // InternalSpecParser.g:2449:3: lv_expression_0_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExampleCellAccess().getExpressionXExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_0_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExampleCellRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExampleCell"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalSpecParser.g:2473:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalSpecParser.g:2474:2: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalSpecParser.g:2475:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalSpecParser.g:2482:1: ruleXStringLiteral returns [EObject current=null] : (this_SimpleStringLiteral_0= ruleSimpleStringLiteral | this_RichString_1= ruleRichString ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleStringLiteral_0 = null;

        EObject this_RichString_1 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:2485:28: ( (this_SimpleStringLiteral_0= ruleSimpleStringLiteral | this_RichString_1= ruleRichString ) )
            // InternalSpecParser.g:2486:1: (this_SimpleStringLiteral_0= ruleSimpleStringLiteral | this_RichString_1= ruleRichString )
            {
            // InternalSpecParser.g:2486:1: (this_SimpleStringLiteral_0= ruleSimpleStringLiteral | this_RichString_1= ruleRichString )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_STRING) ) {
                alt63=1;
            }
            else if ( ((LA63_0>=RULE_RICH_TEXT && LA63_0<=RULE_RICH_TEXT_START)) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalSpecParser.g:2487:2: this_SimpleStringLiteral_0= ruleSimpleStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXStringLiteralAccess().getSimpleStringLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SimpleStringLiteral_0=ruleSimpleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SimpleStringLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:2500:2: this_RichString_1= ruleRichString
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXStringLiteralAccess().getRichStringParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RichString_1=ruleRichString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RichString_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleSimpleStringLiteral"
    // InternalSpecParser.g:2519:1: entryRuleSimpleStringLiteral returns [EObject current=null] : iv_ruleSimpleStringLiteral= ruleSimpleStringLiteral EOF ;
    public final EObject entryRuleSimpleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStringLiteral = null;


        try {
            // InternalSpecParser.g:2520:2: (iv_ruleSimpleStringLiteral= ruleSimpleStringLiteral EOF )
            // InternalSpecParser.g:2521:2: iv_ruleSimpleStringLiteral= ruleSimpleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStringLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleStringLiteral=ruleSimpleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStringLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStringLiteral"


    // $ANTLR start "ruleSimpleStringLiteral"
    // InternalSpecParser.g:2528:1: ruleSimpleStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleSimpleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:2531:28: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalSpecParser.g:2532:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalSpecParser.g:2532:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalSpecParser.g:2532:2: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalSpecParser.g:2532:2: ()
            // InternalSpecParser.g:2533:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSimpleStringLiteralAccess().getXStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:2541:2: ( (lv_value_1_0= RULE_STRING ) )
            // InternalSpecParser.g:2542:1: (lv_value_1_0= RULE_STRING )
            {
            // InternalSpecParser.g:2542:1: (lv_value_1_0= RULE_STRING )
            // InternalSpecParser.g:2543:3: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getSimpleStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSimpleStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStringLiteral"


    // $ANTLR start "entryRuleCommonModifier"
    // InternalSpecParser.g:2567:1: entryRuleCommonModifier returns [String current=null] : iv_ruleCommonModifier= ruleCommonModifier EOF ;
    public final String entryRuleCommonModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCommonModifier = null;


        try {
            // InternalSpecParser.g:2568:1: (iv_ruleCommonModifier= ruleCommonModifier EOF )
            // InternalSpecParser.g:2569:2: iv_ruleCommonModifier= ruleCommonModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommonModifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommonModifier=ruleCommonModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommonModifier.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommonModifier"


    // $ANTLR start "ruleCommonModifier"
    // InternalSpecParser.g:2576:1: ruleCommonModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Public | kw= Private | kw= Protected | kw= Package | kw= Abstract | kw= Static | kw= Dispatch | kw= Final | kw= Strictfp | kw= Native | kw= Volatile | kw= Synchronized | kw= Transient ) ;
    public final AntlrDatatypeRuleToken ruleCommonModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:2580:6: ( (kw= Public | kw= Private | kw= Protected | kw= Package | kw= Abstract | kw= Static | kw= Dispatch | kw= Final | kw= Strictfp | kw= Native | kw= Volatile | kw= Synchronized | kw= Transient ) )
            // InternalSpecParser.g:2581:1: (kw= Public | kw= Private | kw= Protected | kw= Package | kw= Abstract | kw= Static | kw= Dispatch | kw= Final | kw= Strictfp | kw= Native | kw= Volatile | kw= Synchronized | kw= Transient )
            {
            // InternalSpecParser.g:2581:1: (kw= Public | kw= Private | kw= Protected | kw= Package | kw= Abstract | kw= Static | kw= Dispatch | kw= Final | kw= Strictfp | kw= Native | kw= Volatile | kw= Synchronized | kw= Transient )
            int alt64=13;
            switch ( input.LA(1) ) {
            case Public:
                {
                alt64=1;
                }
                break;
            case Private:
                {
                alt64=2;
                }
                break;
            case Protected:
                {
                alt64=3;
                }
                break;
            case Package:
                {
                alt64=4;
                }
                break;
            case Abstract:
                {
                alt64=5;
                }
                break;
            case Static:
                {
                alt64=6;
                }
                break;
            case Dispatch:
                {
                alt64=7;
                }
                break;
            case Final:
                {
                alt64=8;
                }
                break;
            case Strictfp:
                {
                alt64=9;
                }
                break;
            case Native:
                {
                alt64=10;
                }
                break;
            case Volatile:
                {
                alt64=11;
                }
                break;
            case Synchronized:
                {
                alt64=12;
                }
                break;
            case Transient:
                {
                alt64=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // InternalSpecParser.g:2582:2: kw= Public
                    {
                    kw=(Token)match(input,Public,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getPublicKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:2589:2: kw= Private
                    {
                    kw=(Token)match(input,Private,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getPrivateKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:2596:2: kw= Protected
                    {
                    kw=(Token)match(input,Protected,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getProtectedKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:2603:2: kw= Package
                    {
                    kw=(Token)match(input,Package,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getPackageKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpecParser.g:2610:2: kw= Abstract
                    {
                    kw=(Token)match(input,Abstract,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getAbstractKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpecParser.g:2617:2: kw= Static
                    {
                    kw=(Token)match(input,Static,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getStaticKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSpecParser.g:2624:2: kw= Dispatch
                    {
                    kw=(Token)match(input,Dispatch,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getDispatchKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalSpecParser.g:2631:2: kw= Final
                    {
                    kw=(Token)match(input,Final,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getFinalKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalSpecParser.g:2638:2: kw= Strictfp
                    {
                    kw=(Token)match(input,Strictfp,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getStrictfpKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalSpecParser.g:2645:2: kw= Native
                    {
                    kw=(Token)match(input,Native,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getNativeKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalSpecParser.g:2652:2: kw= Volatile
                    {
                    kw=(Token)match(input,Volatile,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getVolatileKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalSpecParser.g:2659:2: kw= Synchronized
                    {
                    kw=(Token)match(input,Synchronized,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getSynchronizedKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // InternalSpecParser.g:2666:2: kw= Transient
                    {
                    kw=(Token)match(input,Transient,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getTransientKeyword_12()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommonModifier"


    // $ANTLR start "entryRuleFieldModifier"
    // InternalSpecParser.g:2679:1: entryRuleFieldModifier returns [String current=null] : iv_ruleFieldModifier= ruleFieldModifier EOF ;
    public final String entryRuleFieldModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFieldModifier = null;


        try {
            // InternalSpecParser.g:2680:1: (iv_ruleFieldModifier= ruleFieldModifier EOF )
            // InternalSpecParser.g:2681:2: iv_ruleFieldModifier= ruleFieldModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldModifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFieldModifier=ruleFieldModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldModifier.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldModifier"


    // $ANTLR start "ruleFieldModifier"
    // InternalSpecParser.g:2688:1: ruleFieldModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Val | kw= Var ) ;
    public final AntlrDatatypeRuleToken ruleFieldModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:2692:6: ( (kw= Val | kw= Var ) )
            // InternalSpecParser.g:2693:1: (kw= Val | kw= Var )
            {
            // InternalSpecParser.g:2693:1: (kw= Val | kw= Var )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Val) ) {
                alt65=1;
            }
            else if ( (LA65_0==Var) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalSpecParser.g:2694:2: kw= Val
                    {
                    kw=(Token)match(input,Val,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFieldModifierAccess().getValKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:2701:2: kw= Var
                    {
                    kw=(Token)match(input,Var,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFieldModifierAccess().getVarKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldModifier"


    // $ANTLR start "entryRuleMethodModifier"
    // InternalSpecParser.g:2714:1: entryRuleMethodModifier returns [String current=null] : iv_ruleMethodModifier= ruleMethodModifier EOF ;
    public final String entryRuleMethodModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMethodModifier = null;


        try {
            // InternalSpecParser.g:2715:1: (iv_ruleMethodModifier= ruleMethodModifier EOF )
            // InternalSpecParser.g:2716:2: iv_ruleMethodModifier= ruleMethodModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodModifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodModifier=ruleMethodModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodModifier.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodModifier"


    // $ANTLR start "ruleMethodModifier"
    // InternalSpecParser.g:2723:1: ruleMethodModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Def | kw= Override ) ;
    public final AntlrDatatypeRuleToken ruleMethodModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:2727:6: ( (kw= Def | kw= Override ) )
            // InternalSpecParser.g:2728:1: (kw= Def | kw= Override )
            {
            // InternalSpecParser.g:2728:1: (kw= Def | kw= Override )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==Def) ) {
                alt66=1;
            }
            else if ( (LA66_0==Override) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalSpecParser.g:2729:2: kw= Def
                    {
                    kw=(Token)match(input,Def,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMethodModifierAccess().getDefKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:2736:2: kw= Override
                    {
                    kw=(Token)match(input,Override,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMethodModifierAccess().getOverrideKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodModifier"


    // $ANTLR start "entryRuleParameter"
    // InternalSpecParser.g:2749:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalSpecParser.g:2750:2: (iv_ruleParameter= ruleParameter EOF )
            // InternalSpecParser.g:2751:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSpecParser.g:2758:1: ruleParameter returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= Extension ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= FullStopFullStopFullStop ) )? ( (lv_name_5_0= ruleValidID ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_extension_1_0=null;
        Token lv_varArg_4_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_2_0 = null;

        EObject lv_parameterType_3_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:2761:28: ( ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= Extension ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= FullStopFullStopFullStop ) )? ( (lv_name_5_0= ruleValidID ) ) ) )
            // InternalSpecParser.g:2762:1: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= Extension ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= FullStopFullStopFullStop ) )? ( (lv_name_5_0= ruleValidID ) ) )
            {
            // InternalSpecParser.g:2762:1: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= Extension ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= FullStopFullStopFullStop ) )? ( (lv_name_5_0= ruleValidID ) ) )
            // InternalSpecParser.g:2762:2: ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= Extension ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= FullStopFullStopFullStop ) )? ( (lv_name_5_0= ruleValidID ) )
            {
            // InternalSpecParser.g:2762:2: ( (lv_annotations_0_0= ruleXAnnotation ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==CommercialAt) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalSpecParser.g:2763:1: (lv_annotations_0_0= ruleXAnnotation )
            	    {
            	    // InternalSpecParser.g:2763:1: (lv_annotations_0_0= ruleXAnnotation )
            	    // InternalSpecParser.g:2764:3: lv_annotations_0_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getParameterAccess().getAnnotationsXAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_40);
            	    lv_annotations_0_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getParameterRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            // InternalSpecParser.g:2780:3: ( ( (lv_extension_1_0= Extension ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==Extension) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSpecParser.g:2780:4: ( (lv_extension_1_0= Extension ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )*
                    {
                    // InternalSpecParser.g:2780:4: ( (lv_extension_1_0= Extension ) )
                    // InternalSpecParser.g:2781:1: (lv_extension_1_0= Extension )
                    {
                    // InternalSpecParser.g:2781:1: (lv_extension_1_0= Extension )
                    // InternalSpecParser.g:2782:3: lv_extension_1_0= Extension
                    {
                    lv_extension_1_0=(Token)match(input,Extension,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_extension_1_0, grammarAccess.getParameterAccess().getExtensionExtensionKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                             		setWithLastConsumed(current, "extension", true, "extension");
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:2796:2: ( (lv_annotations_2_0= ruleXAnnotation ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==CommercialAt) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalSpecParser.g:2797:1: (lv_annotations_2_0= ruleXAnnotation )
                    	    {
                    	    // InternalSpecParser.g:2797:1: (lv_annotations_2_0= ruleXAnnotation )
                    	    // InternalSpecParser.g:2798:3: lv_annotations_2_0= ruleXAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterAccess().getAnnotationsXAnnotationParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_49);
                    	    lv_annotations_2_0=ruleXAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_2_0, 
                    	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSpecParser.g:2814:5: ( (lv_parameterType_3_0= ruleJvmTypeReference ) )
            // InternalSpecParser.g:2815:1: (lv_parameterType_3_0= ruleJvmTypeReference )
            {
            // InternalSpecParser.g:2815:1: (lv_parameterType_3_0= ruleJvmTypeReference )
            // InternalSpecParser.g:2816:3: lv_parameterType_3_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_50);
            lv_parameterType_3_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRule());
              	        }
                     		set(
                     			current, 
                     			"parameterType",
                      		lv_parameterType_3_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:2832:2: ( (lv_varArg_4_0= FullStopFullStopFullStop ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==FullStopFullStopFullStop) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSpecParser.g:2833:1: (lv_varArg_4_0= FullStopFullStopFullStop )
                    {
                    // InternalSpecParser.g:2833:1: (lv_varArg_4_0= FullStopFullStopFullStop )
                    // InternalSpecParser.g:2834:3: lv_varArg_4_0= FullStopFullStopFullStop
                    {
                    lv_varArg_4_0=(Token)match(input,FullStopFullStopFullStop,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_varArg_4_0, grammarAccess.getParameterAccess().getVarArgFullStopFullStopFullStopKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                             		setWithLastConsumed(current, "varArg", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSpecParser.g:2848:3: ( (lv_name_5_0= ruleValidID ) )
            // InternalSpecParser.g:2849:1: (lv_name_5_0= ruleValidID )
            {
            // InternalSpecParser.g:2849:1: (lv_name_5_0= ruleValidID )
            // InternalSpecParser.g:2850:3: lv_name_5_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterAccess().getNameValidIDParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_5_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_5_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleRichString"
    // InternalSpecParser.g:2874:1: entryRuleRichString returns [EObject current=null] : iv_ruleRichString= ruleRichString EOF ;
    public final EObject entryRuleRichString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichString = null;


        try {
            // InternalSpecParser.g:2875:2: (iv_ruleRichString= ruleRichString EOF )
            // InternalSpecParser.g:2876:2: iv_ruleRichString= ruleRichString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRichString=ruleRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichString"


    // $ANTLR start "ruleRichString"
    // InternalSpecParser.g:2883:1: ruleRichString returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) ) ;
    public final EObject ruleRichString() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_1_0 = null;

        EObject lv_expressions_2_0 = null;

        EObject lv_expressions_3_0 = null;

        EObject lv_expressions_4_0 = null;

        EObject lv_expressions_5_0 = null;

        EObject lv_expressions_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:2886:28: ( ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) ) )
            // InternalSpecParser.g:2887:1: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) )
            {
            // InternalSpecParser.g:2887:1: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) )
            // InternalSpecParser.g:2887:2: () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) )
            {
            // InternalSpecParser.g:2887:2: ()
            // InternalSpecParser.g:2888:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringAccess().getRichStringAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:2896:2: ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==RULE_RICH_TEXT) ) {
                alt74=1;
            }
            else if ( (LA74_0==RULE_RICH_TEXT_START) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalSpecParser.g:2896:3: ( (lv_expressions_1_0= ruleRichStringLiteral ) )
                    {
                    // InternalSpecParser.g:2896:3: ( (lv_expressions_1_0= ruleRichStringLiteral ) )
                    // InternalSpecParser.g:2897:1: (lv_expressions_1_0= ruleRichStringLiteral )
                    {
                    // InternalSpecParser.g:2897:1: (lv_expressions_1_0= ruleRichStringLiteral )
                    // InternalSpecParser.g:2898:3: lv_expressions_1_0= ruleRichStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expressions_1_0=ruleRichStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                      	        }
                             		add(
                             			current, 
                             			"expressions",
                              		lv_expressions_1_0, 
                              		"org.jnario.xbase.richstring.XbaseWithRichstring.RichStringLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:2915:6: ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) )
                    {
                    // InternalSpecParser.g:2915:6: ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) )
                    // InternalSpecParser.g:2915:7: ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) )
                    {
                    // InternalSpecParser.g:2915:7: ( (lv_expressions_2_0= ruleRichStringLiteralStart ) )
                    // InternalSpecParser.g:2916:1: (lv_expressions_2_0= ruleRichStringLiteralStart )
                    {
                    // InternalSpecParser.g:2916:1: (lv_expressions_2_0= ruleRichStringLiteralStart )
                    // InternalSpecParser.g:2917:3: lv_expressions_2_0= ruleRichStringLiteralStart
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralStartParserRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    lv_expressions_2_0=ruleRichStringLiteralStart();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                      	        }
                             		add(
                             			current, 
                             			"expressions",
                              		lv_expressions_2_0, 
                              		"org.jnario.xbase.richstring.XbaseWithRichstring.RichStringLiteralStart");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:2933:2: ( (lv_expressions_3_0= ruleRichStringPart ) )?
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==Synchronized||LA71_0==Extension||LA71_0==Extends||LA71_0==Assert||LA71_0==Import||LA71_0==Return||(LA71_0>=Static && LA71_0<=Switch)||LA71_0==Typeof||LA71_0==False||(LA71_0>=Super && LA71_0<=While)||(LA71_0>=Null && LA71_0<=True)||(LA71_0>=For && LA71_0<=New)||(LA71_0>=Try && LA71_0<=Var)||(LA71_0>=Do && LA71_0<=If)||(LA71_0>=ExclamationMark && LA71_0<=NumberSign)||LA71_0==LeftParenthesis||LA71_0==PlusSign||LA71_0==HyphenMinus||LA71_0==LessThanSign||LA71_0==LeftSquareBracket||LA71_0==LeftCurlyBracket||LA71_0==RULE_ID||(LA71_0>=RULE_RICH_TEXT && LA71_0<=RULE_RICH_TEXT_START)||(LA71_0>=RULE_HEX && LA71_0<=RULE_STRING)) ) {
                        alt71=1;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalSpecParser.g:2934:1: (lv_expressions_3_0= ruleRichStringPart )
                            {
                            // InternalSpecParser.g:2934:1: (lv_expressions_3_0= ruleRichStringPart )
                            // InternalSpecParser.g:2935:3: lv_expressions_3_0= ruleRichStringPart
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringPartParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_51);
                            lv_expressions_3_0=ruleRichStringPart();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"expressions",
                                      		lv_expressions_3_0, 
                                      		"org.jnario.xbase.richstring.XbaseWithRichstring.RichStringPart");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:2951:3: ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==RULE_RICH_TEXT_INBETWEEN) ) {
                            alt73=1;
                        }


                        switch (alt73) {
                    	case 1 :
                    	    // InternalSpecParser.g:2951:4: ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )?
                    	    {
                    	    // InternalSpecParser.g:2951:4: ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) )
                    	    // InternalSpecParser.g:2952:1: (lv_expressions_4_0= ruleRichStringLiteralInbetween )
                    	    {
                    	    // InternalSpecParser.g:2952:1: (lv_expressions_4_0= ruleRichStringLiteralInbetween )
                    	    // InternalSpecParser.g:2953:3: lv_expressions_4_0= ruleRichStringLiteralInbetween
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_2_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_expressions_4_0=ruleRichStringLiteralInbetween();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"expressions",
                    	              		lv_expressions_4_0, 
                    	              		"org.jnario.xbase.richstring.XbaseWithRichstring.RichStringLiteralInbetween");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // InternalSpecParser.g:2969:2: ( (lv_expressions_5_0= ruleRichStringPart ) )?
                    	    int alt72=2;
                    	    int LA72_0 = input.LA(1);

                    	    if ( (LA72_0==Synchronized||LA72_0==Extension||LA72_0==Extends||LA72_0==Assert||LA72_0==Import||LA72_0==Return||(LA72_0>=Static && LA72_0<=Switch)||LA72_0==Typeof||LA72_0==False||(LA72_0>=Super && LA72_0<=While)||(LA72_0>=Null && LA72_0<=True)||(LA72_0>=For && LA72_0<=New)||(LA72_0>=Try && LA72_0<=Var)||(LA72_0>=Do && LA72_0<=If)||(LA72_0>=ExclamationMark && LA72_0<=NumberSign)||LA72_0==LeftParenthesis||LA72_0==PlusSign||LA72_0==HyphenMinus||LA72_0==LessThanSign||LA72_0==LeftSquareBracket||LA72_0==LeftCurlyBracket||LA72_0==RULE_ID||(LA72_0>=RULE_RICH_TEXT && LA72_0<=RULE_RICH_TEXT_START)||(LA72_0>=RULE_HEX && LA72_0<=RULE_STRING)) ) {
                    	        alt72=1;
                    	    }
                    	    switch (alt72) {
                    	        case 1 :
                    	            // InternalSpecParser.g:2970:1: (lv_expressions_5_0= ruleRichStringPart )
                    	            {
                    	            // InternalSpecParser.g:2970:1: (lv_expressions_5_0= ruleRichStringPart )
                    	            // InternalSpecParser.g:2971:3: lv_expressions_5_0= ruleRichStringPart
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringPartParserRuleCall_1_1_2_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_51);
                    	            lv_expressions_5_0=ruleRichStringPart();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"expressions",
                    	                      		lv_expressions_5_0, 
                    	                      		"org.jnario.xbase.richstring.XbaseWithRichstring.RichStringPart");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);

                    // InternalSpecParser.g:2987:5: ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) )
                    // InternalSpecParser.g:2988:1: (lv_expressions_6_0= ruleRichStringLiteralEnd )
                    {
                    // InternalSpecParser.g:2988:1: (lv_expressions_6_0= ruleRichStringLiteralEnd )
                    // InternalSpecParser.g:2989:3: lv_expressions_6_0= ruleRichStringLiteralEnd
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralEndParserRuleCall_1_1_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expressions_6_0=ruleRichStringLiteralEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                      	        }
                             		add(
                             			current, 
                             			"expressions",
                              		lv_expressions_6_0, 
                              		"org.jnario.xbase.richstring.XbaseWithRichstring.RichStringLiteralEnd");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichString"


    // $ANTLR start "entryRuleRichStringLiteral"
    // InternalSpecParser.g:3013:1: entryRuleRichStringLiteral returns [EObject current=null] : iv_ruleRichStringLiteral= ruleRichStringLiteral EOF ;
    public final EObject entryRuleRichStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringLiteral = null;


        try {
            // InternalSpecParser.g:3014:2: (iv_ruleRichStringLiteral= ruleRichStringLiteral EOF )
            // InternalSpecParser.g:3015:2: iv_ruleRichStringLiteral= ruleRichStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRichStringLiteral=ruleRichStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringLiteral"


    // $ANTLR start "ruleRichStringLiteral"
    // InternalSpecParser.g:3022:1: ruleRichStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) ) ;
    public final EObject ruleRichStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:3025:28: ( ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) ) )
            // InternalSpecParser.g:3026:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) )
            {
            // InternalSpecParser.g:3026:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) )
            // InternalSpecParser.g:3026:2: () ( (lv_value_1_0= RULE_RICH_TEXT ) )
            {
            // InternalSpecParser.g:3026:2: ()
            // InternalSpecParser.g:3027:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringLiteralAccess().getRichStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:3035:2: ( (lv_value_1_0= RULE_RICH_TEXT ) )
            // InternalSpecParser.g:3036:1: (lv_value_1_0= RULE_RICH_TEXT )
            {
            // InternalSpecParser.g:3036:1: (lv_value_1_0= RULE_RICH_TEXT )
            // InternalSpecParser.g:3037:3: lv_value_1_0= RULE_RICH_TEXT
            {
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralAccess().getValueRICH_TEXTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRichStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.jnario.xbase.richstring.XbaseWithRichstring.RICH_TEXT");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringLiteral"


    // $ANTLR start "entryRuleRichStringLiteralStart"
    // InternalSpecParser.g:3061:1: entryRuleRichStringLiteralStart returns [EObject current=null] : iv_ruleRichStringLiteralStart= ruleRichStringLiteralStart EOF ;
    public final EObject entryRuleRichStringLiteralStart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringLiteralStart = null;


        try {
            // InternalSpecParser.g:3062:2: (iv_ruleRichStringLiteralStart= ruleRichStringLiteralStart EOF )
            // InternalSpecParser.g:3063:2: iv_ruleRichStringLiteralStart= ruleRichStringLiteralStart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringLiteralStartRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRichStringLiteralStart=ruleRichStringLiteralStart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralStart; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringLiteralStart"


    // $ANTLR start "ruleRichStringLiteralStart"
    // InternalSpecParser.g:3070:1: ruleRichStringLiteralStart returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) ) ;
    public final EObject ruleRichStringLiteralStart() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:3073:28: ( ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) ) )
            // InternalSpecParser.g:3074:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) )
            {
            // InternalSpecParser.g:3074:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) )
            // InternalSpecParser.g:3074:2: () ( (lv_value_1_0= RULE_RICH_TEXT_START ) )
            {
            // InternalSpecParser.g:3074:2: ()
            // InternalSpecParser.g:3075:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringLiteralStartAccess().getRichStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:3083:2: ( (lv_value_1_0= RULE_RICH_TEXT_START ) )
            // InternalSpecParser.g:3084:1: (lv_value_1_0= RULE_RICH_TEXT_START )
            {
            // InternalSpecParser.g:3084:1: (lv_value_1_0= RULE_RICH_TEXT_START )
            // InternalSpecParser.g:3085:3: lv_value_1_0= RULE_RICH_TEXT_START
            {
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_START,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRichStringLiteralStartRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.jnario.xbase.richstring.XbaseWithRichstring.RICH_TEXT_START");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringLiteralStart"


    // $ANTLR start "entryRuleRichStringLiteralInbetween"
    // InternalSpecParser.g:3109:1: entryRuleRichStringLiteralInbetween returns [EObject current=null] : iv_ruleRichStringLiteralInbetween= ruleRichStringLiteralInbetween EOF ;
    public final EObject entryRuleRichStringLiteralInbetween() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringLiteralInbetween = null;


        try {
            // InternalSpecParser.g:3110:2: (iv_ruleRichStringLiteralInbetween= ruleRichStringLiteralInbetween EOF )
            // InternalSpecParser.g:3111:2: iv_ruleRichStringLiteralInbetween= ruleRichStringLiteralInbetween EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringLiteralInbetweenRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRichStringLiteralInbetween=ruleRichStringLiteralInbetween();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralInbetween; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringLiteralInbetween"


    // $ANTLR start "ruleRichStringLiteralInbetween"
    // InternalSpecParser.g:3118:1: ruleRichStringLiteralInbetween returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) ) ;
    public final EObject ruleRichStringLiteralInbetween() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:3121:28: ( ( () ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) ) )
            // InternalSpecParser.g:3122:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) )
            {
            // InternalSpecParser.g:3122:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) )
            // InternalSpecParser.g:3122:2: () ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) )
            {
            // InternalSpecParser.g:3122:2: ()
            // InternalSpecParser.g:3123:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringLiteralInbetweenAccess().getRichStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:3131:2: ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) )
            // InternalSpecParser.g:3132:1: (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN )
            {
            // InternalSpecParser.g:3132:1: (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN )
            // InternalSpecParser.g:3133:3: lv_value_1_0= RULE_RICH_TEXT_INBETWEEN
            {
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_INBETWEEN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralInbetweenAccess().getValueRICH_TEXT_INBETWEENTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRichStringLiteralInbetweenRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.jnario.xbase.richstring.XbaseWithRichstring.RICH_TEXT_INBETWEEN");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringLiteralInbetween"


    // $ANTLR start "entryRuleRichStringLiteralEnd"
    // InternalSpecParser.g:3157:1: entryRuleRichStringLiteralEnd returns [EObject current=null] : iv_ruleRichStringLiteralEnd= ruleRichStringLiteralEnd EOF ;
    public final EObject entryRuleRichStringLiteralEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringLiteralEnd = null;


        try {
            // InternalSpecParser.g:3158:2: (iv_ruleRichStringLiteralEnd= ruleRichStringLiteralEnd EOF )
            // InternalSpecParser.g:3159:2: iv_ruleRichStringLiteralEnd= ruleRichStringLiteralEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringLiteralEndRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRichStringLiteralEnd=ruleRichStringLiteralEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralEnd; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringLiteralEnd"


    // $ANTLR start "ruleRichStringLiteralEnd"
    // InternalSpecParser.g:3166:1: ruleRichStringLiteralEnd returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) ) ;
    public final EObject ruleRichStringLiteralEnd() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:3169:28: ( ( () ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) ) )
            // InternalSpecParser.g:3170:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) )
            {
            // InternalSpecParser.g:3170:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) )
            // InternalSpecParser.g:3170:2: () ( (lv_value_1_0= RULE_RICH_TEXT_END ) )
            {
            // InternalSpecParser.g:3170:2: ()
            // InternalSpecParser.g:3171:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringLiteralEndAccess().getRichStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:3179:2: ( (lv_value_1_0= RULE_RICH_TEXT_END ) )
            // InternalSpecParser.g:3180:1: (lv_value_1_0= RULE_RICH_TEXT_END )
            {
            // InternalSpecParser.g:3180:1: (lv_value_1_0= RULE_RICH_TEXT_END )
            // InternalSpecParser.g:3181:3: lv_value_1_0= RULE_RICH_TEXT_END
            {
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_END,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRichStringLiteralEndRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.jnario.xbase.richstring.XbaseWithRichstring.RICH_TEXT_END");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringLiteralEnd"


    // $ANTLR start "entryRuleRichStringPart"
    // InternalSpecParser.g:3207:1: entryRuleRichStringPart returns [EObject current=null] : iv_ruleRichStringPart= ruleRichStringPart EOF ;
    public final EObject entryRuleRichStringPart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringPart = null;


        try {
            // InternalSpecParser.g:3208:2: (iv_ruleRichStringPart= ruleRichStringPart EOF )
            // InternalSpecParser.g:3209:2: iv_ruleRichStringPart= ruleRichStringPart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringPartRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRichStringPart=ruleRichStringPart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringPart; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringPart"


    // $ANTLR start "ruleRichStringPart"
    // InternalSpecParser.g:3216:1: ruleRichStringPart returns [EObject current=null] : this_XExpressionOrVarDeclaration_0= ruleXExpressionOrVarDeclaration ;
    public final EObject ruleRichStringPart() throws RecognitionException {
        EObject current = null;

        EObject this_XExpressionOrVarDeclaration_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:3219:28: (this_XExpressionOrVarDeclaration_0= ruleXExpressionOrVarDeclaration )
            // InternalSpecParser.g:3221:2: this_XExpressionOrVarDeclaration_0= ruleXExpressionOrVarDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRichStringPartAccess().getXExpressionOrVarDeclarationParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_XExpressionOrVarDeclaration_0=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XExpressionOrVarDeclaration_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringPart"


    // $ANTLR start "entryRuleXAnnotation"
    // InternalSpecParser.g:3240:1: entryRuleXAnnotation returns [EObject current=null] : iv_ruleXAnnotation= ruleXAnnotation EOF ;
    public final EObject entryRuleXAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotation = null;


        try {
            // InternalSpecParser.g:3241:2: (iv_ruleXAnnotation= ruleXAnnotation EOF )
            // InternalSpecParser.g:3242:2: iv_ruleXAnnotation= ruleXAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXAnnotation=ruleXAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotation"


    // $ANTLR start "ruleXAnnotation"
    // InternalSpecParser.g:3249:1: ruleXAnnotation returns [EObject current=null] : ( () otherlv_1= CommercialAt ( ( ruleQualifiedName ) ) ( ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis )? ) ;
    public final EObject ruleXAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_elementValuePairs_4_0 = null;

        EObject lv_elementValuePairs_6_0 = null;

        EObject lv_value_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:3252:28: ( ( () otherlv_1= CommercialAt ( ( ruleQualifiedName ) ) ( ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis )? ) )
            // InternalSpecParser.g:3253:1: ( () otherlv_1= CommercialAt ( ( ruleQualifiedName ) ) ( ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis )? )
            {
            // InternalSpecParser.g:3253:1: ( () otherlv_1= CommercialAt ( ( ruleQualifiedName ) ) ( ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis )? )
            // InternalSpecParser.g:3253:2: () otherlv_1= CommercialAt ( ( ruleQualifiedName ) ) ( ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis )?
            {
            // InternalSpecParser.g:3253:2: ()
            // InternalSpecParser.g:3254:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXAnnotationAccess().getXAnnotationAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXAnnotationAccess().getCommercialAtKeyword_1());
                  
            }
            // InternalSpecParser.g:3267:1: ( ( ruleQualifiedName ) )
            // InternalSpecParser.g:3268:1: ( ruleQualifiedName )
            {
            // InternalSpecParser.g:3268:1: ( ruleQualifiedName )
            // InternalSpecParser.g:3269:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXAnnotationRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXAnnotationAccess().getAnnotationTypeJvmAnnotationTypeCrossReference_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_11);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:3286:2: ( ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis )?
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalSpecParser.g:3286:3: ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis
                    {
                    // InternalSpecParser.g:3286:3: ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis )
                    // InternalSpecParser.g:3286:4: ( LeftParenthesis )=>otherlv_3= LeftParenthesis
                    {
                    otherlv_3=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getXAnnotationAccess().getLeftParenthesisKeyword_3_0());
                          
                    }

                    }

                    // InternalSpecParser.g:3293:2: ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?
                    int alt76=3;
                    alt76 = dfa76.predict(input);
                    switch (alt76) {
                        case 1 :
                            // InternalSpecParser.g:3293:3: ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            {
                            // InternalSpecParser.g:3293:3: ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            // InternalSpecParser.g:3293:4: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            {
                            // InternalSpecParser.g:3293:4: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
                            // InternalSpecParser.g:3293:5: ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            {
                            // InternalSpecParser.g:3301:1: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            // InternalSpecParser.g:3302:3: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"elementValuePairs",
                                      		lv_elementValuePairs_4_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:3318:2: (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            loop75:
                            do {
                                int alt75=2;
                                int LA75_0 = input.LA(1);

                                if ( (LA75_0==Comma) ) {
                                    alt75=1;
                                }


                                switch (alt75) {
                            	case 1 :
                            	    // InternalSpecParser.g:3319:2: otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    {
                            	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_5, grammarAccess.getXAnnotationAccess().getCommaKeyword_3_1_0_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:3323:1: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    // InternalSpecParser.g:3323:2: ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    {
                            	    // InternalSpecParser.g:3331:1: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    // InternalSpecParser.g:3332:3: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_13);
                            	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elementValuePairs",
                            	              		lv_elementValuePairs_6_0, 
                            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop75;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:3349:6: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            {
                            // InternalSpecParser.g:3349:6: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            // InternalSpecParser.g:3350:1: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            {
                            // InternalSpecParser.g:3350:1: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            // InternalSpecParser.g:3351:3: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_53);
                            lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"value",
                                      		lv_value_7_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValueOrCommaList");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXAnnotationAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotation"


    // $ANTLR start "entryRuleXAnnotationElementValuePair"
    // InternalSpecParser.g:3380:1: entryRuleXAnnotationElementValuePair returns [EObject current=null] : iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF ;
    public final EObject entryRuleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValuePair = null;


        try {
            // InternalSpecParser.g:3381:2: (iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF )
            // InternalSpecParser.g:3382:2: iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValuePairRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXAnnotationElementValuePair=ruleXAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValuePair; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValuePair"


    // $ANTLR start "ruleXAnnotationElementValuePair"
    // InternalSpecParser.g:3389:1: ruleXAnnotationElementValuePair returns [EObject current=null] : ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> ( ( ( ruleValidID ) ) otherlv_1= EqualsSign ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) ;
    public final EObject ruleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:3392:28: ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> ( ( ( ruleValidID ) ) otherlv_1= EqualsSign ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) )
            // InternalSpecParser.g:3393:1: ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> ( ( ( ruleValidID ) ) otherlv_1= EqualsSign ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            {
            // InternalSpecParser.g:3393:1: ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> ( ( ( ruleValidID ) ) otherlv_1= EqualsSign ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            // InternalSpecParser.g:3393:2: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> ( ( ( ruleValidID ) ) otherlv_1= EqualsSign ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            {
            // InternalSpecParser.g:3393:2: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> ( ( ( ruleValidID ) ) otherlv_1= EqualsSign ) )
            // InternalSpecParser.g:3393:3: ( ( ( ( ruleValidID ) ) EqualsSign ) )=> ( ( ( ruleValidID ) ) otherlv_1= EqualsSign )
            {
            // InternalSpecParser.g:3400:5: ( ( ( ruleValidID ) ) otherlv_1= EqualsSign )
            // InternalSpecParser.g:3400:6: ( ( ruleValidID ) ) otherlv_1= EqualsSign
            {
            // InternalSpecParser.g:3400:6: ( ( ruleValidID ) )
            // InternalSpecParser.g:3401:1: ( ruleValidID )
            {
            // InternalSpecParser.g:3401:1: ( ruleValidID )
            // InternalSpecParser.g:3402:3: ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXAnnotationElementValuePairRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getElementJvmOperationCrossReference_0_0_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_54);
            ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValuePairAccess().getEqualsSignKeyword_0_0_1());
                  
            }

            }


            }

            // InternalSpecParser.g:3424:3: ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            // InternalSpecParser.g:3425:1: (lv_value_2_0= ruleXAnnotationElementValue )
            {
            // InternalSpecParser.g:3425:1: (lv_value_2_0= ruleXAnnotationElementValue )
            // InternalSpecParser.g:3426:3: lv_value_2_0= ruleXAnnotationElementValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getValueXAnnotationElementValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValuePair"


    // $ANTLR start "entryRuleXAnnotationElementValueOrCommaList"
    // InternalSpecParser.g:3450:1: entryRuleXAnnotationElementValueOrCommaList returns [EObject current=null] : iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF ;
    public final EObject entryRuleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValueOrCommaList = null;


        try {
            // InternalSpecParser.g:3451:2: (iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF )
            // InternalSpecParser.g:3452:2: iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXAnnotationElementValueOrCommaList=ruleXAnnotationElementValueOrCommaList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValueOrCommaList; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValueOrCommaList"


    // $ANTLR start "ruleXAnnotationElementValueOrCommaList"
    // InternalSpecParser.g:3459:1: ruleXAnnotationElementValueOrCommaList returns [EObject current=null] : ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) ) ;
    public final EObject ruleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject this_XAnnotationOrExpression_7 = null;

        EObject lv_elements_10_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:3462:28: ( ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) ) )
            // InternalSpecParser.g:3463:1: ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )
            {
            // InternalSpecParser.g:3463:1: ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )
            int alt82=2;
            alt82 = dfa82.predict(input);
            switch (alt82) {
                case 1 :
                    // InternalSpecParser.g:3463:2: ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket )
                    {
                    // InternalSpecParser.g:3463:2: ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket )
                    // InternalSpecParser.g:3463:3: ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket
                    {
                    // InternalSpecParser.g:3463:3: ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) )
                    // InternalSpecParser.g:3463:4: ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket )
                    {
                    // InternalSpecParser.g:3468:5: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket )
                    // InternalSpecParser.g:3468:6: () otherlv_1= NumberSign otherlv_2= LeftSquareBracket
                    {
                    // InternalSpecParser.g:3468:6: ()
                    // InternalSpecParser.g:3469:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXListLiteralAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getNumberSignKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getLeftSquareBracketKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    // InternalSpecParser.g:3487:3: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==Synchronized||LA79_0==Extension||LA79_0==Extends||LA79_0==Assert||LA79_0==Import||LA79_0==Return||(LA79_0>=Static && LA79_0<=Switch)||LA79_0==Typeof||LA79_0==False||(LA79_0>=Super && LA79_0<=While)||(LA79_0>=Null && LA79_0<=True)||(LA79_0>=For && LA79_0<=New)||LA79_0==Try||(LA79_0>=Do && LA79_0<=If)||(LA79_0>=ExclamationMark && LA79_0<=NumberSign)||LA79_0==LeftParenthesis||LA79_0==PlusSign||LA79_0==HyphenMinus||LA79_0==LessThanSign||(LA79_0>=CommercialAt && LA79_0<=LeftSquareBracket)||LA79_0==LeftCurlyBracket||LA79_0==RULE_ID||(LA79_0>=RULE_RICH_TEXT && LA79_0<=RULE_RICH_TEXT_START)||(LA79_0>=RULE_HEX && LA79_0<=RULE_STRING)) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalSpecParser.g:3487:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalSpecParser.g:3487:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                            // InternalSpecParser.g:3488:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            {
                            // InternalSpecParser.g:3488:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            // InternalSpecParser.g:3489:3: lv_elements_3_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_58);
                            lv_elements_3_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"elements",
                                      		lv_elements_3_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:3505:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            loop78:
                            do {
                                int alt78=2;
                                int LA78_0 = input.LA(1);

                                if ( (LA78_0==Comma) ) {
                                    alt78=1;
                                }


                                switch (alt78) {
                            	case 1 :
                            	    // InternalSpecParser.g:3506:2: otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_55); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_4, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:3510:1: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    // InternalSpecParser.g:3511:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalSpecParser.g:3511:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    // InternalSpecParser.g:3512:3: lv_elements_5_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_58);
                            	    lv_elements_5_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_5_0, 
                            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop78;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getRightSquareBracketKeyword_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:3534:6: (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? )
                    {
                    // InternalSpecParser.g:3534:6: (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? )
                    // InternalSpecParser.g:3535:2: this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )?
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXAnnotationOrExpressionParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    this_XAnnotationOrExpression_7=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XAnnotationOrExpression_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalSpecParser.g:3546:1: ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==Comma) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalSpecParser.g:3546:2: () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+
                            {
                            // InternalSpecParser.g:3546:2: ()
                            // InternalSpecParser.g:3547:2: 
                            {
                            if ( state.backtracking==0 ) {
                               
                              	  /* */ 
                              	
                            }
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndAdd(
                                          grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXListLiteralElementsAction_1_1_0(),
                                          current);
                                  
                            }

                            }

                            // InternalSpecParser.g:3555:2: (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+
                            int cnt80=0;
                            loop80:
                            do {
                                int alt80=2;
                                int LA80_0 = input.LA(1);

                                if ( (LA80_0==Comma) ) {
                                    alt80=1;
                                }


                                switch (alt80) {
                            	case 1 :
                            	    // InternalSpecParser.g:3556:2: otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_9=(Token)match(input,Comma,FollowSets000.FOLLOW_55); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_9, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:3560:1: ( (lv_elements_10_0= ruleXAnnotationOrExpression ) )
                            	    // InternalSpecParser.g:3561:1: (lv_elements_10_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalSpecParser.g:3561:1: (lv_elements_10_0= ruleXAnnotationOrExpression )
                            	    // InternalSpecParser.g:3562:3: lv_elements_10_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_59);
                            	    lv_elements_10_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_10_0, 
                            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt80 >= 1 ) break loop80;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(80, input);
                                        throw eee;
                                }
                                cnt80++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValueOrCommaList"


    // $ANTLR start "entryRuleXAnnotationElementValue"
    // InternalSpecParser.g:3586:1: entryRuleXAnnotationElementValue returns [EObject current=null] : iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF ;
    public final EObject entryRuleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValue = null;


        try {
            // InternalSpecParser.g:3587:2: (iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF )
            // InternalSpecParser.g:3588:2: iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXAnnotationElementValue=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValue"


    // $ANTLR start "ruleXAnnotationElementValue"
    // InternalSpecParser.g:3595:1: ruleXAnnotationElementValue returns [EObject current=null] : ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject this_XAnnotationOrExpression_7 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:3598:28: ( ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ) )
            // InternalSpecParser.g:3599:1: ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )
            {
            // InternalSpecParser.g:3599:1: ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )
            int alt85=2;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalSpecParser.g:3599:2: ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket )
                    {
                    // InternalSpecParser.g:3599:2: ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket )
                    // InternalSpecParser.g:3599:3: ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket
                    {
                    // InternalSpecParser.g:3599:3: ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) )
                    // InternalSpecParser.g:3599:4: ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket )
                    {
                    // InternalSpecParser.g:3604:5: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket )
                    // InternalSpecParser.g:3604:6: () otherlv_1= NumberSign otherlv_2= LeftSquareBracket
                    {
                    // InternalSpecParser.g:3604:6: ()
                    // InternalSpecParser.g:3605:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAnnotationElementValueAccess().getXListLiteralAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueAccess().getNumberSignKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXAnnotationElementValueAccess().getLeftSquareBracketKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    // InternalSpecParser.g:3623:3: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==Synchronized||LA84_0==Extension||LA84_0==Extends||LA84_0==Assert||LA84_0==Import||LA84_0==Return||(LA84_0>=Static && LA84_0<=Switch)||LA84_0==Typeof||LA84_0==False||(LA84_0>=Super && LA84_0<=While)||(LA84_0>=Null && LA84_0<=True)||(LA84_0>=For && LA84_0<=New)||LA84_0==Try||(LA84_0>=Do && LA84_0<=If)||(LA84_0>=ExclamationMark && LA84_0<=NumberSign)||LA84_0==LeftParenthesis||LA84_0==PlusSign||LA84_0==HyphenMinus||LA84_0==LessThanSign||(LA84_0>=CommercialAt && LA84_0<=LeftSquareBracket)||LA84_0==LeftCurlyBracket||LA84_0==RULE_ID||(LA84_0>=RULE_RICH_TEXT && LA84_0<=RULE_RICH_TEXT_START)||(LA84_0>=RULE_HEX && LA84_0<=RULE_STRING)) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // InternalSpecParser.g:3623:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalSpecParser.g:3623:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                            // InternalSpecParser.g:3624:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            {
                            // InternalSpecParser.g:3624:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            // InternalSpecParser.g:3625:3: lv_elements_3_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_58);
                            lv_elements_3_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"elements",
                                      		lv_elements_3_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:3641:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            loop83:
                            do {
                                int alt83=2;
                                int LA83_0 = input.LA(1);

                                if ( (LA83_0==Comma) ) {
                                    alt83=1;
                                }


                                switch (alt83) {
                            	case 1 :
                            	    // InternalSpecParser.g:3642:2: otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_55); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_4, grammarAccess.getXAnnotationElementValueAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:3646:1: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    // InternalSpecParser.g:3647:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalSpecParser.g:3647:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    // InternalSpecParser.g:3648:3: lv_elements_5_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_58);
                            	    lv_elements_5_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_5_0, 
                            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop83;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXAnnotationElementValueAccess().getRightSquareBracketKeyword_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:3671:2: this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getXAnnotationOrExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XAnnotationOrExpression_7=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XAnnotationOrExpression_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValue"


    // $ANTLR start "entryRuleXAnnotationOrExpression"
    // InternalSpecParser.g:3690:1: entryRuleXAnnotationOrExpression returns [EObject current=null] : iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF ;
    public final EObject entryRuleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationOrExpression = null;


        try {
            // InternalSpecParser.g:3691:2: (iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF )
            // InternalSpecParser.g:3692:2: iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXAnnotationOrExpression=ruleXAnnotationOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationOrExpression"


    // $ANTLR start "ruleXAnnotationOrExpression"
    // InternalSpecParser.g:3699:1: ruleXAnnotationOrExpression returns [EObject current=null] : (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAnnotation_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:3702:28: ( (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) )
            // InternalSpecParser.g:3703:1: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            {
            // InternalSpecParser.g:3703:1: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==CommercialAt) ) {
                alt86=1;
            }
            else if ( (LA86_0==Synchronized||LA86_0==Extension||LA86_0==Extends||LA86_0==Assert||LA86_0==Import||LA86_0==Return||(LA86_0>=Static && LA86_0<=Switch)||LA86_0==Typeof||LA86_0==False||(LA86_0>=Super && LA86_0<=While)||(LA86_0>=Null && LA86_0<=True)||(LA86_0>=For && LA86_0<=New)||LA86_0==Try||(LA86_0>=Do && LA86_0<=If)||(LA86_0>=ExclamationMark && LA86_0<=NumberSign)||LA86_0==LeftParenthesis||LA86_0==PlusSign||LA86_0==HyphenMinus||LA86_0==LessThanSign||LA86_0==LeftSquareBracket||LA86_0==LeftCurlyBracket||LA86_0==RULE_ID||(LA86_0>=RULE_RICH_TEXT && LA86_0<=RULE_RICH_TEXT_START)||(LA86_0>=RULE_HEX && LA86_0<=RULE_STRING)) ) {
                alt86=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }
            switch (alt86) {
                case 1 :
                    // InternalSpecParser.g:3704:2: this_XAnnotation_0= ruleXAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XAnnotation_0=ruleXAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XAnnotation_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:3717:2: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationOrExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalSpecParser.g:3736:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalSpecParser.g:3737:2: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalSpecParser.g:3738:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalSpecParser.g:3745:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:3748:28: (this_XAssignment_0= ruleXAssignment )
            // InternalSpecParser.g:3750:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XAssignment_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalSpecParser.g:3769:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalSpecParser.g:3770:2: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalSpecParser.g:3771:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalSpecParser.g:3778:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:3781:28: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalSpecParser.g:3782:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalSpecParser.g:3782:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt88=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA88_1 = input.LA(2);

                if ( (LA88_1==EOF||(LA88_1>=Synchronized && LA88_1<=Case)||(LA88_1>=Else && LA88_1<=ExclamationMarkEqualsSignEqualsSign)||(LA88_1>=FullStopFullStopLessThanSign && LA88_1<=EqualsSignEqualsSignEqualsSign)||(LA88_1>=Def && LA88_1<=New)||(LA88_1>=Try && LA88_1<=PercentSign)||(LA88_1>=LeftParenthesis && LA88_1<=LessThanSign)||LA88_1==GreaterThanSign||(LA88_1>=CommercialAt && LA88_1<=RightCurlyBracket)||LA88_1==RULE_ID||(LA88_1>=RULE_RICH_TEXT && LA88_1<=RULE_STRING)) ) {
                    alt88=2;
                }
                else if ( (LA88_1==EqualsSign) ) {
                    alt88=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 1, input);

                    throw nvae;
                }
                }
                break;
            case Extends:
                {
                int LA88_2 = input.LA(2);

                if ( (LA88_2==EqualsSign) ) {
                    alt88=1;
                }
                else if ( (LA88_2==EOF||(LA88_2>=Synchronized && LA88_2<=Case)||(LA88_2>=Else && LA88_2<=ExclamationMarkEqualsSignEqualsSign)||(LA88_2>=FullStopFullStopLessThanSign && LA88_2<=EqualsSignEqualsSignEqualsSign)||(LA88_2>=Def && LA88_2<=New)||(LA88_2>=Try && LA88_2<=PercentSign)||(LA88_2>=LeftParenthesis && LA88_2<=LessThanSign)||LA88_2==GreaterThanSign||(LA88_2>=CommercialAt && LA88_2<=RightCurlyBracket)||LA88_2==RULE_ID||(LA88_2>=RULE_RICH_TEXT && LA88_2<=RULE_STRING)) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 2, input);

                    throw nvae;
                }
                }
                break;
            case Static:
                {
                int LA88_3 = input.LA(2);

                if ( (LA88_3==EOF||(LA88_3>=Synchronized && LA88_3<=Case)||(LA88_3>=Else && LA88_3<=ExclamationMarkEqualsSignEqualsSign)||(LA88_3>=FullStopFullStopLessThanSign && LA88_3<=EqualsSignEqualsSignEqualsSign)||(LA88_3>=Def && LA88_3<=New)||(LA88_3>=Try && LA88_3<=PercentSign)||(LA88_3>=LeftParenthesis && LA88_3<=LessThanSign)||LA88_3==GreaterThanSign||(LA88_3>=CommercialAt && LA88_3<=RightCurlyBracket)||LA88_3==RULE_ID||(LA88_3>=RULE_RICH_TEXT && LA88_3<=RULE_STRING)) ) {
                    alt88=2;
                }
                else if ( (LA88_3==EqualsSign) ) {
                    alt88=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 3, input);

                    throw nvae;
                }
                }
                break;
            case Import:
                {
                int LA88_4 = input.LA(2);

                if ( (LA88_4==EOF||(LA88_4>=Synchronized && LA88_4<=Case)||(LA88_4>=Else && LA88_4<=ExclamationMarkEqualsSignEqualsSign)||(LA88_4>=FullStopFullStopLessThanSign && LA88_4<=EqualsSignEqualsSignEqualsSign)||(LA88_4>=Def && LA88_4<=New)||(LA88_4>=Try && LA88_4<=PercentSign)||(LA88_4>=LeftParenthesis && LA88_4<=LessThanSign)||LA88_4==GreaterThanSign||(LA88_4>=CommercialAt && LA88_4<=RightCurlyBracket)||LA88_4==RULE_ID||(LA88_4>=RULE_RICH_TEXT && LA88_4<=RULE_STRING)) ) {
                    alt88=2;
                }
                else if ( (LA88_4==EqualsSign) ) {
                    alt88=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 4, input);

                    throw nvae;
                }
                }
                break;
            case Extension:
                {
                int LA88_5 = input.LA(2);

                if ( (LA88_5==EqualsSign) ) {
                    alt88=1;
                }
                else if ( (LA88_5==EOF||(LA88_5>=Synchronized && LA88_5<=Case)||(LA88_5>=Else && LA88_5<=ExclamationMarkEqualsSignEqualsSign)||(LA88_5>=FullStopFullStopLessThanSign && LA88_5<=EqualsSignEqualsSignEqualsSign)||(LA88_5>=Def && LA88_5<=New)||(LA88_5>=Try && LA88_5<=PercentSign)||(LA88_5>=LeftParenthesis && LA88_5<=LessThanSign)||LA88_5==GreaterThanSign||(LA88_5>=CommercialAt && LA88_5<=RightCurlyBracket)||LA88_5==RULE_ID||(LA88_5>=RULE_RICH_TEXT && LA88_5<=RULE_STRING)) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 5, input);

                    throw nvae;
                }
                }
                break;
            case Synchronized:
            case Assert:
            case Return:
            case Switch:
            case Typeof:
            case False:
            case Super:
            case Throw:
            case While:
            case Null:
            case True:
            case For:
            case New:
            case Try:
            case Do:
            case If:
            case ExclamationMark:
            case NumberSign:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case LessThanSign:
            case LeftSquareBracket:
            case LeftCurlyBracket:
            case RULE_RICH_TEXT:
            case RULE_RICH_TEXT_START:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_STRING:
                {
                alt88=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // InternalSpecParser.g:3782:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalSpecParser.g:3782:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalSpecParser.g:3782:3: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalSpecParser.g:3782:3: ()
                    // InternalSpecParser.g:3783:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:3791:2: ( ( ruleFeatureCallID ) )
                    // InternalSpecParser.g:3792:1: ( ruleFeatureCallID )
                    {
                    // InternalSpecParser.g:3792:1: ( ruleFeatureCallID )
                    // InternalSpecParser.g:3793:3: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXAssignmentRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalSpecParser.g:3821:1: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalSpecParser.g:3822:1: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalSpecParser.g:3822:1: (lv_value_3_0= ruleXAssignment )
                    // InternalSpecParser.g:3823:3: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:3840:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalSpecParser.g:3840:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalSpecParser.g:3841:2: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_60);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XOrExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalSpecParser.g:3852:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt87=2;
                    alt87 = dfa87.predict(input);
                    switch (alt87) {
                        case 1 :
                            // InternalSpecParser.g:3852:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalSpecParser.g:3852:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalSpecParser.g:3852:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalSpecParser.g:3858:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalSpecParser.g:3858:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalSpecParser.g:3858:7: ()
                            // InternalSpecParser.g:3859:2: 
                            {
                            if ( state.backtracking==0 ) {
                               
                              	  /* */ 
                              	
                            }
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                                          current);
                                  
                            }

                            }

                            // InternalSpecParser.g:3867:2: ( ( ruleOpMultiAssign ) )
                            // InternalSpecParser.g:3868:1: ( ruleOpMultiAssign )
                            {
                            // InternalSpecParser.g:3868:1: ( ruleOpMultiAssign )
                            // InternalSpecParser.g:3869:3: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {
                               
                              		  /* */ 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getXAssignmentRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_22);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }

                            // InternalSpecParser.g:3886:4: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalSpecParser.g:3887:1: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalSpecParser.g:3887:1: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalSpecParser.g:3888:3: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rightOperand",
                                      		lv_rightOperand_7_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalSpecParser.g:3912:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalSpecParser.g:3913:1: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalSpecParser.g:3914:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalSpecParser.g:3921:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= EqualsSign ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:3925:6: (kw= EqualsSign )
            // InternalSpecParser.g:3927:2: kw= EqualsSign
            {
            kw=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalSpecParser.g:3940:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalSpecParser.g:3941:1: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalSpecParser.g:3942:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalSpecParser.g:3949:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:3953:6: ( (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) ) )
            // InternalSpecParser.g:3954:1: (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) )
            {
            // InternalSpecParser.g:3954:1: (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) )
            int alt90=7;
            switch ( input.LA(1) ) {
            case PlusSignEqualsSign:
                {
                alt90=1;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt90=2;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt90=3;
                }
                break;
            case SolidusEqualsSign:
                {
                alt90=4;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt90=5;
                }
                break;
            case LessThanSign:
                {
                alt90=6;
                }
                break;
            case GreaterThanSign:
                {
                alt90=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // InternalSpecParser.g:3955:2: kw= PlusSignEqualsSign
                    {
                    kw=(Token)match(input,PlusSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:3962:2: kw= HyphenMinusEqualsSign
                    {
                    kw=(Token)match(input,HyphenMinusEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:3969:2: kw= AsteriskEqualsSign
                    {
                    kw=(Token)match(input,AsteriskEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:3976:2: kw= SolidusEqualsSign
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpecParser.g:3983:2: kw= PercentSignEqualsSign
                    {
                    kw=(Token)match(input,PercentSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpecParser.g:3989:6: (kw= LessThanSign kw= LessThanSign kw= EqualsSign )
                    {
                    // InternalSpecParser.g:3989:6: (kw= LessThanSign kw= LessThanSign kw= EqualsSign )
                    // InternalSpecParser.g:3990:2: kw= LessThanSign kw= LessThanSign kw= EqualsSign
                    {
                    kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); 
                          
                    }
                    kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); 
                          
                    }
                    kw=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSpecParser.g:4008:6: (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign )
                    {
                    // InternalSpecParser.g:4008:6: (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign )
                    // InternalSpecParser.g:4009:2: kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); 
                          
                    }
                    // InternalSpecParser.g:4014:1: (kw= GreaterThanSign )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==GreaterThanSign) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalSpecParser.g:4015:2: kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_63); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); 
                                  
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,GreaterThanSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalSpecParser.g:4034:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalSpecParser.g:4035:2: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalSpecParser.g:4036:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalSpecParser.g:4043:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:4046:28: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalSpecParser.g:4047:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalSpecParser.g:4047:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalSpecParser.g:4048:2: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_64);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XAndExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:4059:1: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==VerticalLineVerticalLine) ) {
                    int LA91_2 = input.LA(2);

                    if ( (synpred156_InternalSpecParser()) ) {
                        alt91=1;
                    }


                }


                switch (alt91) {
            	case 1 :
            	    // InternalSpecParser.g:4059:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalSpecParser.g:4059:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalSpecParser.g:4059:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalSpecParser.g:4065:6: ( () ( ( ruleOpOr ) ) )
            	    // InternalSpecParser.g:4065:7: () ( ( ruleOpOr ) )
            	    {
            	    // InternalSpecParser.g:4065:7: ()
            	    // InternalSpecParser.g:4066:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:4074:2: ( ( ruleOpOr ) )
            	    // InternalSpecParser.g:4075:1: ( ruleOpOr )
            	    {
            	    // InternalSpecParser.g:4075:1: ( ruleOpOr )
            	    // InternalSpecParser.g:4076:3: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:4093:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalSpecParser.g:4094:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalSpecParser.g:4094:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalSpecParser.g:4095:3: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalSpecParser.g:4119:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalSpecParser.g:4120:1: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalSpecParser.g:4121:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalSpecParser.g:4128:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= VerticalLineVerticalLine ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:4132:6: (kw= VerticalLineVerticalLine )
            // InternalSpecParser.g:4134:2: kw= VerticalLineVerticalLine
            {
            kw=(Token)match(input,VerticalLineVerticalLine,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalSpecParser.g:4147:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalSpecParser.g:4148:2: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalSpecParser.g:4149:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalSpecParser.g:4156:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:4159:28: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalSpecParser.g:4160:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalSpecParser.g:4160:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalSpecParser.g:4161:2: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_65);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XEqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:4172:1: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==AmpersandAmpersand) ) {
                    int LA92_2 = input.LA(2);

                    if ( (synpred158_InternalSpecParser()) ) {
                        alt92=1;
                    }


                }


                switch (alt92) {
            	case 1 :
            	    // InternalSpecParser.g:4172:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalSpecParser.g:4172:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalSpecParser.g:4172:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalSpecParser.g:4178:6: ( () ( ( ruleOpAnd ) ) )
            	    // InternalSpecParser.g:4178:7: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalSpecParser.g:4178:7: ()
            	    // InternalSpecParser.g:4179:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:4187:2: ( ( ruleOpAnd ) )
            	    // InternalSpecParser.g:4188:1: ( ruleOpAnd )
            	    {
            	    // InternalSpecParser.g:4188:1: ( ruleOpAnd )
            	    // InternalSpecParser.g:4189:3: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:4206:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalSpecParser.g:4207:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalSpecParser.g:4207:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalSpecParser.g:4208:3: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalSpecParser.g:4232:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalSpecParser.g:4233:1: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalSpecParser.g:4234:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalSpecParser.g:4241:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= AmpersandAmpersand ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:4245:6: (kw= AmpersandAmpersand )
            // InternalSpecParser.g:4247:2: kw= AmpersandAmpersand
            {
            kw=(Token)match(input,AmpersandAmpersand,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalSpecParser.g:4260:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalSpecParser.g:4261:2: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalSpecParser.g:4262:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalSpecParser.g:4269:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:4272:28: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalSpecParser.g:4273:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalSpecParser.g:4273:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalSpecParser.g:4274:2: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_66);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XRelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:4285:1: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop93:
            do {
                int alt93=2;
                switch ( input.LA(1) ) {
                case EqualsSignEqualsSign:
                    {
                    int LA93_2 = input.LA(2);

                    if ( (synpred160_InternalSpecParser()) ) {
                        alt93=1;
                    }


                    }
                    break;
                case ExclamationMarkEqualsSign:
                    {
                    int LA93_3 = input.LA(2);

                    if ( (synpred160_InternalSpecParser()) ) {
                        alt93=1;
                    }


                    }
                    break;
                case EqualsSignEqualsSignEqualsSign:
                    {
                    int LA93_4 = input.LA(2);

                    if ( (synpred160_InternalSpecParser()) ) {
                        alt93=1;
                    }


                    }
                    break;
                case ExclamationMarkEqualsSignEqualsSign:
                    {
                    int LA93_5 = input.LA(2);

                    if ( (synpred160_InternalSpecParser()) ) {
                        alt93=1;
                    }


                    }
                    break;

                }

                switch (alt93) {
            	case 1 :
            	    // InternalSpecParser.g:4285:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalSpecParser.g:4285:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalSpecParser.g:4285:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalSpecParser.g:4291:6: ( () ( ( ruleOpEquality ) ) )
            	    // InternalSpecParser.g:4291:7: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalSpecParser.g:4291:7: ()
            	    // InternalSpecParser.g:4292:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:4300:2: ( ( ruleOpEquality ) )
            	    // InternalSpecParser.g:4301:1: ( ruleOpEquality )
            	    {
            	    // InternalSpecParser.g:4301:1: ( ruleOpEquality )
            	    // InternalSpecParser.g:4302:3: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:4319:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalSpecParser.g:4320:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalSpecParser.g:4320:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalSpecParser.g:4321:3: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.jnario.spec.Spec.XRelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalSpecParser.g:4345:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalSpecParser.g:4346:1: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalSpecParser.g:4347:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalSpecParser.g:4354:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:4358:6: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign ) )
            // InternalSpecParser.g:4359:1: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign )
            {
            // InternalSpecParser.g:4359:1: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign )
            int alt94=4;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSign:
                {
                alt94=1;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt94=2;
                }
                break;
            case EqualsSignEqualsSignEqualsSign:
                {
                alt94=3;
                }
                break;
            case ExclamationMarkEqualsSignEqualsSign:
                {
                alt94=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }

            switch (alt94) {
                case 1 :
                    // InternalSpecParser.g:4360:2: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:4367:2: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:4374:2: kw= EqualsSignEqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:4381:2: kw= ExclamationMarkEqualsSignEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleOpCompare"
    // InternalSpecParser.g:4394:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalSpecParser.g:4395:1: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalSpecParser.g:4396:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalSpecParser.g:4403:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:4407:6: ( (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign ) )
            // InternalSpecParser.g:4408:1: (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign )
            {
            // InternalSpecParser.g:4408:1: (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign )
            int alt95=4;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt95=1;
                }
                break;
            case LessThanSign:
                {
                int LA95_2 = input.LA(2);

                if ( (LA95_2==EqualsSign) ) {
                    alt95=2;
                }
                else if ( (LA95_2==EOF||LA95_2==Synchronized||LA95_2==Extension||LA95_2==Extends||LA95_2==Assert||LA95_2==Import||LA95_2==Return||(LA95_2>=Static && LA95_2<=Switch)||LA95_2==Typeof||LA95_2==False||(LA95_2>=Super && LA95_2<=While)||(LA95_2>=Null && LA95_2<=True)||(LA95_2>=For && LA95_2<=New)||LA95_2==Try||(LA95_2>=Do && LA95_2<=If)||(LA95_2>=ExclamationMark && LA95_2<=NumberSign)||LA95_2==LeftParenthesis||LA95_2==PlusSign||LA95_2==HyphenMinus||LA95_2==LessThanSign||LA95_2==LeftSquareBracket||LA95_2==LeftCurlyBracket||LA95_2==RULE_ID||(LA95_2>=RULE_RICH_TEXT && LA95_2<=RULE_RICH_TEXT_START)||(LA95_2>=RULE_HEX && LA95_2<=RULE_STRING)) ) {
                    alt95=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 95, 2, input);

                    throw nvae;
                }
                }
                break;
            case GreaterThanSign:
                {
                alt95=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }

            switch (alt95) {
                case 1 :
                    // InternalSpecParser.g:4409:2: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:4415:6: (kw= LessThanSign kw= EqualsSign )
                    {
                    // InternalSpecParser.g:4415:6: (kw= LessThanSign kw= EqualsSign )
                    // InternalSpecParser.g:4416:2: kw= LessThanSign kw= EqualsSign
                    {
                    kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); 
                          
                    }
                    kw=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:4429:2: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:4436:2: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalSpecParser.g:4449:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalSpecParser.g:4450:2: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalSpecParser.g:4451:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalSpecParser.g:4458:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:4461:28: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalSpecParser.g:4462:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalSpecParser.g:4462:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalSpecParser.g:4463:2: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_67);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XAdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:4474:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop96:
            do {
                int alt96=2;
                alt96 = dfa96.predict(input);
                switch (alt96) {
            	case 1 :
            	    // InternalSpecParser.g:4474:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalSpecParser.g:4474:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalSpecParser.g:4474:3: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalSpecParser.g:4480:6: ( () ( ( ruleOpOther ) ) )
            	    // InternalSpecParser.g:4480:7: () ( ( ruleOpOther ) )
            	    {
            	    // InternalSpecParser.g:4480:7: ()
            	    // InternalSpecParser.g:4481:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:4489:2: ( ( ruleOpOther ) )
            	    // InternalSpecParser.g:4490:1: ( ruleOpOther )
            	    {
            	    // InternalSpecParser.g:4490:1: ( ruleOpOther )
            	    // InternalSpecParser.g:4491:3: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:4508:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalSpecParser.g:4509:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalSpecParser.g:4509:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalSpecParser.g:4510:3: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalSpecParser.g:4534:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalSpecParser.g:4535:1: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalSpecParser.g:4536:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalSpecParser.g:4543:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:4547:6: ( (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon ) )
            // InternalSpecParser.g:4548:1: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )
            {
            // InternalSpecParser.g:4548:1: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )
            int alt99=9;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalSpecParser.g:4549:2: kw= HyphenMinusGreaterThanSign
                    {
                    kw=(Token)match(input,HyphenMinusGreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:4556:2: kw= FullStopFullStopLessThanSign
                    {
                    kw=(Token)match(input,FullStopFullStopLessThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:4562:6: (kw= GreaterThanSign kw= FullStopFullStop )
                    {
                    // InternalSpecParser.g:4562:6: (kw= GreaterThanSign kw= FullStopFullStop )
                    // InternalSpecParser.g:4563:2: kw= GreaterThanSign kw= FullStopFullStop
                    {
                    kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
                          
                    }
                    kw=(Token)match(input,FullStopFullStop,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:4576:2: kw= FullStopFullStop
                    {
                    kw=(Token)match(input,FullStopFullStop,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpecParser.g:4583:2: kw= EqualsSignGreaterThanSign
                    {
                    kw=(Token)match(input,EqualsSignGreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpecParser.g:4589:6: (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) )
                    {
                    // InternalSpecParser.g:4589:6: (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) )
                    // InternalSpecParser.g:4590:2: kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign )
                    {
                    kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
                          
                    }
                    // InternalSpecParser.g:4595:1: ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign )
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==GreaterThanSign) ) {
                        int LA97_1 = input.LA(2);

                        if ( (LA97_1==GreaterThanSign) ) {
                            alt97=1;
                        }
                        else if ( (LA97_1==EOF||LA97_1==Synchronized||LA97_1==Extension||LA97_1==Extends||LA97_1==Assert||LA97_1==Import||LA97_1==Return||(LA97_1>=Static && LA97_1<=Switch)||LA97_1==Typeof||LA97_1==False||(LA97_1>=Super && LA97_1<=While)||(LA97_1>=Null && LA97_1<=True)||(LA97_1>=For && LA97_1<=New)||LA97_1==Try||(LA97_1>=Do && LA97_1<=If)||(LA97_1>=ExclamationMark && LA97_1<=NumberSign)||LA97_1==LeftParenthesis||LA97_1==PlusSign||LA97_1==HyphenMinus||LA97_1==LessThanSign||LA97_1==LeftSquareBracket||LA97_1==LeftCurlyBracket||LA97_1==RULE_ID||(LA97_1>=RULE_RICH_TEXT && LA97_1<=RULE_RICH_TEXT_START)||(LA97_1>=RULE_HEX && LA97_1<=RULE_STRING)) ) {
                            alt97=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 97, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 97, 0, input);

                        throw nvae;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalSpecParser.g:4595:2: ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) )
                            {
                            // InternalSpecParser.g:4595:2: ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) )
                            // InternalSpecParser.g:4595:3: ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign )
                            {
                            // InternalSpecParser.g:4599:5: (kw= GreaterThanSign kw= GreaterThanSign )
                            // InternalSpecParser.g:4600:2: kw= GreaterThanSign kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_69); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:4613:2: kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSpecParser.g:4619:6: (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) )
                    {
                    // InternalSpecParser.g:4619:6: (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) )
                    // InternalSpecParser.g:4620:2: kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign )
                    {
                    kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
                          
                    }
                    // InternalSpecParser.g:4625:1: ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign )
                    int alt98=3;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==LessThanSign) ) {
                        int LA98_1 = input.LA(2);

                        if ( (synpred178_InternalSpecParser()) ) {
                            alt98=1;
                        }
                        else if ( (synpred179_InternalSpecParser()) ) {
                            alt98=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 98, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA98_0==EqualsSignGreaterThanSign) ) {
                        alt98=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 98, 0, input);

                        throw nvae;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalSpecParser.g:4625:2: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
                            {
                            // InternalSpecParser.g:4625:2: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
                            // InternalSpecParser.g:4625:3: ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign )
                            {
                            // InternalSpecParser.g:4629:5: (kw= LessThanSign kw= LessThanSign )
                            // InternalSpecParser.g:4630:2: kw= LessThanSign kw= LessThanSign
                            {
                            kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_61); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:4643:2: kw= LessThanSign
                            {
                            kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
                                  
                            }

                            }
                            break;
                        case 3 :
                            // InternalSpecParser.g:4650:2: kw= EqualsSignGreaterThanSign
                            {
                            kw=(Token)match(input,EqualsSignGreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalSpecParser.g:4657:2: kw= LessThanSignGreaterThanSign
                    {
                    kw=(Token)match(input,LessThanSignGreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalSpecParser.g:4664:2: kw= QuestionMarkColon
                    {
                    kw=(Token)match(input,QuestionMarkColon,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalSpecParser.g:4677:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalSpecParser.g:4678:2: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalSpecParser.g:4679:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalSpecParser.g:4686:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:4689:28: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalSpecParser.g:4690:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalSpecParser.g:4690:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalSpecParser.g:4691:2: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_71);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XMultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:4702:1: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==PlusSign) ) {
                    int LA100_2 = input.LA(2);

                    if ( (synpred183_InternalSpecParser()) ) {
                        alt100=1;
                    }


                }
                else if ( (LA100_0==HyphenMinus) ) {
                    int LA100_3 = input.LA(2);

                    if ( (synpred183_InternalSpecParser()) ) {
                        alt100=1;
                    }


                }


                switch (alt100) {
            	case 1 :
            	    // InternalSpecParser.g:4702:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalSpecParser.g:4702:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalSpecParser.g:4702:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalSpecParser.g:4708:6: ( () ( ( ruleOpAdd ) ) )
            	    // InternalSpecParser.g:4708:7: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalSpecParser.g:4708:7: ()
            	    // InternalSpecParser.g:4709:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:4717:2: ( ( ruleOpAdd ) )
            	    // InternalSpecParser.g:4718:1: ( ruleOpAdd )
            	    {
            	    // InternalSpecParser.g:4718:1: ( ruleOpAdd )
            	    // InternalSpecParser.g:4719:3: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:4736:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalSpecParser.g:4737:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalSpecParser.g:4737:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalSpecParser.g:4738:3: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalSpecParser.g:4762:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalSpecParser.g:4763:1: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalSpecParser.g:4764:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalSpecParser.g:4771:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:4775:6: ( (kw= PlusSign | kw= HyphenMinus ) )
            // InternalSpecParser.g:4776:1: (kw= PlusSign | kw= HyphenMinus )
            {
            // InternalSpecParser.g:4776:1: (kw= PlusSign | kw= HyphenMinus )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==PlusSign) ) {
                alt101=1;
            }
            else if ( (LA101_0==HyphenMinus) ) {
                alt101=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // InternalSpecParser.g:4777:2: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:4784:2: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalSpecParser.g:4797:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalSpecParser.g:4798:2: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalSpecParser.g:4799:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalSpecParser.g:4806:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:4809:28: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalSpecParser.g:4810:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalSpecParser.g:4810:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalSpecParser.g:4811:2: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_72);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XUnaryOperation_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:4822:1: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop102:
            do {
                int alt102=2;
                switch ( input.LA(1) ) {
                case Asterisk:
                    {
                    int LA102_2 = input.LA(2);

                    if ( (synpred186_InternalSpecParser()) ) {
                        alt102=1;
                    }


                    }
                    break;
                case AsteriskAsterisk:
                    {
                    int LA102_3 = input.LA(2);

                    if ( (synpred186_InternalSpecParser()) ) {
                        alt102=1;
                    }


                    }
                    break;
                case Solidus:
                    {
                    int LA102_4 = input.LA(2);

                    if ( (synpred186_InternalSpecParser()) ) {
                        alt102=1;
                    }


                    }
                    break;
                case PercentSign:
                    {
                    int LA102_5 = input.LA(2);

                    if ( (synpred186_InternalSpecParser()) ) {
                        alt102=1;
                    }


                    }
                    break;

                }

                switch (alt102) {
            	case 1 :
            	    // InternalSpecParser.g:4822:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalSpecParser.g:4822:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalSpecParser.g:4822:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalSpecParser.g:4828:6: ( () ( ( ruleOpMulti ) ) )
            	    // InternalSpecParser.g:4828:7: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalSpecParser.g:4828:7: ()
            	    // InternalSpecParser.g:4829:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:4837:2: ( ( ruleOpMulti ) )
            	    // InternalSpecParser.g:4838:1: ( ruleOpMulti )
            	    {
            	    // InternalSpecParser.g:4838:1: ( ruleOpMulti )
            	    // InternalSpecParser.g:4839:3: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:4856:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalSpecParser.g:4857:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalSpecParser.g:4857:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalSpecParser.g:4858:3: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_72);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalSpecParser.g:4882:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalSpecParser.g:4883:1: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalSpecParser.g:4884:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalSpecParser.g:4891:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:4895:6: ( (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign ) )
            // InternalSpecParser.g:4896:1: (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign )
            {
            // InternalSpecParser.g:4896:1: (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign )
            int alt103=4;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt103=1;
                }
                break;
            case AsteriskAsterisk:
                {
                alt103=2;
                }
                break;
            case Solidus:
                {
                alt103=3;
                }
                break;
            case PercentSign:
                {
                alt103=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }

            switch (alt103) {
                case 1 :
                    // InternalSpecParser.g:4897:2: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:4904:2: kw= AsteriskAsterisk
                    {
                    kw=(Token)match(input,AsteriskAsterisk,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:4911:2: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:4918:2: kw= PercentSign
                    {
                    kw=(Token)match(input,PercentSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalSpecParser.g:4931:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalSpecParser.g:4932:2: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalSpecParser.g:4933:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalSpecParser.g:4940:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:4943:28: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalSpecParser.g:4944:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalSpecParser.g:4944:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==ExclamationMark||LA104_0==PlusSign||LA104_0==HyphenMinus) ) {
                alt104=1;
            }
            else if ( (LA104_0==Synchronized||LA104_0==Extension||LA104_0==Extends||LA104_0==Assert||LA104_0==Import||LA104_0==Return||(LA104_0>=Static && LA104_0<=Switch)||LA104_0==Typeof||LA104_0==False||(LA104_0>=Super && LA104_0<=While)||(LA104_0>=Null && LA104_0<=True)||(LA104_0>=For && LA104_0<=New)||LA104_0==Try||(LA104_0>=Do && LA104_0<=If)||LA104_0==NumberSign||LA104_0==LeftParenthesis||LA104_0==LessThanSign||LA104_0==LeftSquareBracket||LA104_0==LeftCurlyBracket||LA104_0==RULE_ID||(LA104_0>=RULE_RICH_TEXT && LA104_0<=RULE_RICH_TEXT_START)||(LA104_0>=RULE_HEX && LA104_0<=RULE_STRING)) ) {
                alt104=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    // InternalSpecParser.g:4944:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalSpecParser.g:4944:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalSpecParser.g:4944:3: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalSpecParser.g:4944:3: ()
                    // InternalSpecParser.g:4945:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:4953:2: ( ( ruleOpUnary ) )
                    // InternalSpecParser.g:4954:1: ( ruleOpUnary )
                    {
                    // InternalSpecParser.g:4954:1: ( ruleOpUnary )
                    // InternalSpecParser.g:4955:3: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:4972:2: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalSpecParser.g:4973:1: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalSpecParser.g:4973:1: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalSpecParser.g:4974:3: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:4992:2: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XCastedExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalSpecParser.g:5011:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalSpecParser.g:5012:1: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalSpecParser.g:5013:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalSpecParser.g:5020:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:5024:6: ( (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign ) )
            // InternalSpecParser.g:5025:1: (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign )
            {
            // InternalSpecParser.g:5025:1: (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign )
            int alt105=3;
            switch ( input.LA(1) ) {
            case ExclamationMark:
                {
                alt105=1;
                }
                break;
            case HyphenMinus:
                {
                alt105=2;
                }
                break;
            case PlusSign:
                {
                alt105=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }

            switch (alt105) {
                case 1 :
                    // InternalSpecParser.g:5026:2: kw= ExclamationMark
                    {
                    kw=(Token)match(input,ExclamationMark,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:5033:2: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:5040:2: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalSpecParser.g:5053:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalSpecParser.g:5054:2: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalSpecParser.g:5055:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalSpecParser.g:5062:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:5065:28: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalSpecParser.g:5066:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalSpecParser.g:5066:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalSpecParser.g:5067:2: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_73);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XPostfixOperation_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:5078:1: ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==As) ) {
                    int LA106_2 = input.LA(2);

                    if ( (synpred194_InternalSpecParser()) ) {
                        alt106=1;
                    }


                }


                switch (alt106) {
            	case 1 :
            	    // InternalSpecParser.g:5078:2: ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalSpecParser.g:5078:2: ( ( ( () As ) )=> ( () otherlv_2= As ) )
            	    // InternalSpecParser.g:5078:3: ( ( () As ) )=> ( () otherlv_2= As )
            	    {
            	    // InternalSpecParser.g:5081:5: ( () otherlv_2= As )
            	    // InternalSpecParser.g:5081:6: () otherlv_2= As
            	    {
            	    // InternalSpecParser.g:5081:6: ()
            	    // InternalSpecParser.g:5082:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,As,FollowSets000.FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // InternalSpecParser.g:5095:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalSpecParser.g:5096:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalSpecParser.g:5096:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalSpecParser.g:5097:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalSpecParser.g:5121:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalSpecParser.g:5122:2: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalSpecParser.g:5123:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalSpecParser.g:5130:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:5133:28: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalSpecParser.g:5134:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalSpecParser.g:5134:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalSpecParser.g:5135:2: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_74);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XMemberFeatureCall_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:5146:1: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==PlusSignPlusSign) ) {
                int LA107_1 = input.LA(2);

                if ( (synpred195_InternalSpecParser()) ) {
                    alt107=1;
                }
            }
            else if ( (LA107_0==HyphenMinusHyphenMinus) ) {
                int LA107_2 = input.LA(2);

                if ( (synpred195_InternalSpecParser()) ) {
                    alt107=1;
                }
            }
            switch (alt107) {
                case 1 :
                    // InternalSpecParser.g:5146:2: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalSpecParser.g:5152:6: ( () ( ( ruleOpPostfix ) ) )
                    // InternalSpecParser.g:5152:7: () ( ( ruleOpPostfix ) )
                    {
                    // InternalSpecParser.g:5152:7: ()
                    // InternalSpecParser.g:5153:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpecParser.g:5161:2: ( ( ruleOpPostfix ) )
                    // InternalSpecParser.g:5162:1: ( ruleOpPostfix )
                    {
                    // InternalSpecParser.g:5162:1: ( ruleOpPostfix )
                    // InternalSpecParser.g:5163:3: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalSpecParser.g:5188:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalSpecParser.g:5189:1: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalSpecParser.g:5190:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalSpecParser.g:5197:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:5201:6: ( (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus ) )
            // InternalSpecParser.g:5202:1: (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus )
            {
            // InternalSpecParser.g:5202:1: (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus )
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==PlusSignPlusSign) ) {
                alt108=1;
            }
            else if ( (LA108_0==HyphenMinusHyphenMinus) ) {
                alt108=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }
            switch (alt108) {
                case 1 :
                    // InternalSpecParser.g:5203:2: kw= PlusSignPlusSign
                    {
                    kw=(Token)match(input,PlusSignPlusSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:5210:2: kw= HyphenMinusHyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinusHyphenMinus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalSpecParser.g:5223:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalSpecParser.g:5224:2: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalSpecParser.g:5225:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalSpecParser.g:5232:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:5235:28: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalSpecParser.g:5236:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalSpecParser.g:5236:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalSpecParser.g:5237:2: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_75);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XPrimaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:5248:1: ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop117:
            do {
                int alt117=3;
                switch ( input.LA(1) ) {
                case FullStop:
                    {
                    int LA117_2 = input.LA(2);

                    if ( (synpred200_InternalSpecParser()) ) {
                        alt117=1;
                    }
                    else if ( (synpred217_InternalSpecParser()) ) {
                        alt117=2;
                    }


                    }
                    break;
                case ColonColon:
                    {
                    int LA117_3 = input.LA(2);

                    if ( (synpred200_InternalSpecParser()) ) {
                        alt117=1;
                    }
                    else if ( (synpred217_InternalSpecParser()) ) {
                        alt117=2;
                    }


                    }
                    break;
                case QuestionMarkFullStop:
                    {
                    int LA117_4 = input.LA(2);

                    if ( (synpred217_InternalSpecParser()) ) {
                        alt117=2;
                    }


                    }
                    break;

                }

                switch (alt117) {
            	case 1 :
            	    // InternalSpecParser.g:5248:2: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalSpecParser.g:5248:2: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalSpecParser.g:5248:3: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalSpecParser.g:5248:3: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalSpecParser.g:5248:4: ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalSpecParser.g:5264:24: ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalSpecParser.g:5264:25: () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalSpecParser.g:5264:25: ()
            	    // InternalSpecParser.g:5265:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:5273:2: (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) )
            	    int alt109=2;
            	    int LA109_0 = input.LA(1);

            	    if ( (LA109_0==FullStop) ) {
            	        alt109=1;
            	    }
            	    else if ( (LA109_0==ColonColon) ) {
            	        alt109=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 109, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt109) {
            	        case 1 :
            	            // InternalSpecParser.g:5274:2: otherlv_2= FullStop
            	            {
            	            otherlv_2=(Token)match(input,FullStop,FollowSets000.FOLLOW_76); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSpecParser.g:5279:6: ( (lv_explicitStatic_3_0= ColonColon ) )
            	            {
            	            // InternalSpecParser.g:5279:6: ( (lv_explicitStatic_3_0= ColonColon ) )
            	            // InternalSpecParser.g:5280:1: (lv_explicitStatic_3_0= ColonColon )
            	            {
            	            // InternalSpecParser.g:5280:1: (lv_explicitStatic_3_0= ColonColon )
            	            // InternalSpecParser.g:5281:3: lv_explicitStatic_3_0= ColonColon
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,ColonColon,FollowSets000.FOLLOW_76); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalSpecParser.g:5295:3: ( ( ruleFeatureCallID ) )
            	    // InternalSpecParser.g:5296:1: ( ruleFeatureCallID )
            	    {
            	    // InternalSpecParser.g:5296:1: ( ruleFeatureCallID )
            	    // InternalSpecParser.g:5297:3: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_54);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
            	          
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }


            	    }

            	    // InternalSpecParser.g:5325:3: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalSpecParser.g:5326:1: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalSpecParser.g:5326:1: (lv_value_6_0= ruleXAssignment )
            	    // InternalSpecParser.g:5327:3: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"value",
            	              		lv_value_6_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSpecParser.g:5344:6: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalSpecParser.g:5344:6: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalSpecParser.g:5344:7: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalSpecParser.g:5344:7: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) )
            	    // InternalSpecParser.g:5344:8: ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
            	    {
            	    // InternalSpecParser.g:5363:7: ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
            	    // InternalSpecParser.g:5363:8: () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
            	    {
            	    // InternalSpecParser.g:5363:8: ()
            	    // InternalSpecParser.g:5364:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpecParser.g:5372:2: (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
            	    int alt110=3;
            	    switch ( input.LA(1) ) {
            	    case FullStop:
            	        {
            	        alt110=1;
            	        }
            	        break;
            	    case QuestionMarkFullStop:
            	        {
            	        alt110=2;
            	        }
            	        break;
            	    case ColonColon:
            	        {
            	        alt110=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 110, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt110) {
            	        case 1 :
            	            // InternalSpecParser.g:5373:2: otherlv_8= FullStop
            	            {
            	            otherlv_8=(Token)match(input,FullStop,FollowSets000.FOLLOW_77); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSpecParser.g:5378:6: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
            	            {
            	            // InternalSpecParser.g:5378:6: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
            	            // InternalSpecParser.g:5379:1: (lv_nullSafe_9_0= QuestionMarkFullStop )
            	            {
            	            // InternalSpecParser.g:5379:1: (lv_nullSafe_9_0= QuestionMarkFullStop )
            	            // InternalSpecParser.g:5380:3: lv_nullSafe_9_0= QuestionMarkFullStop
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,QuestionMarkFullStop,FollowSets000.FOLLOW_77); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "nullSafe", true, "?.");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalSpecParser.g:5395:6: ( (lv_explicitStatic_10_0= ColonColon ) )
            	            {
            	            // InternalSpecParser.g:5395:6: ( (lv_explicitStatic_10_0= ColonColon ) )
            	            // InternalSpecParser.g:5396:1: (lv_explicitStatic_10_0= ColonColon )
            	            {
            	            // InternalSpecParser.g:5396:1: (lv_explicitStatic_10_0= ColonColon )
            	            // InternalSpecParser.g:5397:3: lv_explicitStatic_10_0= ColonColon
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,ColonColon,FollowSets000.FOLLOW_77); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalSpecParser.g:5411:5: (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )?
            	    int alt112=2;
            	    int LA112_0 = input.LA(1);

            	    if ( (LA112_0==LessThanSign) ) {
            	        alt112=1;
            	    }
            	    switch (alt112) {
            	        case 1 :
            	            // InternalSpecParser.g:5412:2: otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign
            	            {
            	            otherlv_11=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	                  
            	            }
            	            // InternalSpecParser.g:5416:1: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalSpecParser.g:5417:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalSpecParser.g:5417:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalSpecParser.g:5418:3: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_16);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"typeArguments",
            	                      		lv_typeArguments_12_0, 
            	                      		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }

            	            // InternalSpecParser.g:5434:2: (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop111:
            	            do {
            	                int alt111=2;
            	                int LA111_0 = input.LA(1);

            	                if ( (LA111_0==Comma) ) {
            	                    alt111=1;
            	                }


            	                switch (alt111) {
            	            	case 1 :
            	            	    // InternalSpecParser.g:5435:2: otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	          	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	          
            	            	    }
            	            	    // InternalSpecParser.g:5439:1: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalSpecParser.g:5440:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalSpecParser.g:5440:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalSpecParser.g:5441:3: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {
            	            	       
            	            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FollowSets000.FOLLOW_16);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      	        }
            	            	             		add(
            	            	             			current, 
            	            	             			"typeArguments",
            	            	              		lv_typeArguments_14_0, 
            	            	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      	        afterParserOrEnumRuleCall();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop111;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_77); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalSpecParser.g:5462:3: ( ( ruleIdOrSuper ) )
            	    // InternalSpecParser.g:5463:1: ( ruleIdOrSuper )
            	    {
            	    // InternalSpecParser.g:5463:1: ( ruleIdOrSuper )
            	    // InternalSpecParser.g:5464:3: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      		  /* */ 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_79);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpecParser.g:5481:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?
            	    int alt115=2;
            	    alt115 = dfa115.predict(input);
            	    switch (alt115) {
            	        case 1 :
            	            // InternalSpecParser.g:5481:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis
            	            {
            	            // InternalSpecParser.g:5481:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) )
            	            // InternalSpecParser.g:5481:4: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis )
            	            {
            	            // InternalSpecParser.g:5489:1: (lv_explicitOperationCall_17_0= LeftParenthesis )
            	            // InternalSpecParser.g:5490:3: lv_explicitOperationCall_17_0= LeftParenthesis
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_80); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              	    
            	            }

            	            }


            	            }

            	            // InternalSpecParser.g:5504:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt114=3;
            	            alt114 = dfa114.predict(input);
            	            switch (alt114) {
            	                case 1 :
            	                    // InternalSpecParser.g:5504:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalSpecParser.g:5504:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalSpecParser.g:5504:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalSpecParser.g:5523:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalSpecParser.g:5524:3: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FollowSets000.FOLLOW_53);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_18_0, 
            	                              		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalSpecParser.g:5541:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalSpecParser.g:5541:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalSpecParser.g:5541:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalSpecParser.g:5541:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalSpecParser.g:5542:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalSpecParser.g:5542:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalSpecParser.g:5543:3: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FollowSets000.FOLLOW_13);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_19_0, 
            	                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }

            	                    // InternalSpecParser.g:5559:2: (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop113:
            	                    do {
            	                        int alt113=2;
            	                        int LA113_0 = input.LA(1);

            	                        if ( (LA113_0==Comma) ) {
            	                            alt113=1;
            	                        }


            	                        switch (alt113) {
            	                    	case 1 :
            	                    	    // InternalSpecParser.g:5560:2: otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	          	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	          
            	                    	    }
            	                    	    // InternalSpecParser.g:5564:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalSpecParser.g:5565:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalSpecParser.g:5565:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalSpecParser.g:5566:3: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {
            	                    	       
            	                    	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
            	                    	      	    
            	                    	    }
            	                    	    pushFollow(FollowSets000.FOLLOW_13);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      	        if (current==null) {
            	                    	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      	        }
            	                    	             		add(
            	                    	             			current, 
            	                    	             			"memberCallArguments",
            	                    	              		lv_memberCallArguments_21_0, 
            	                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      	        afterParserOrEnumRuleCall();
            	                    	      	    
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop113;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_81); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalSpecParser.g:5587:3: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt116=2;
            	    alt116 = dfa116.predict(input);
            	    switch (alt116) {
            	        case 1 :
            	            // InternalSpecParser.g:5587:4: ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalSpecParser.g:5591:1: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalSpecParser.g:5592:3: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_75);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"memberCallArguments",
            	                      		lv_memberCallArguments_23_0, 
            	                      		"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXLiteral"
    // InternalSpecParser.g:5616:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalSpecParser.g:5617:2: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalSpecParser.g:5618:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalSpecParser.g:5625:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:5628:28: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalSpecParser.g:5629:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalSpecParser.g:5629:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt118=7;
            switch ( input.LA(1) ) {
            case NumberSign:
                {
                alt118=1;
                }
                break;
            case LeftSquareBracket:
                {
                alt118=2;
                }
                break;
            case False:
            case True:
                {
                alt118=3;
                }
                break;
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt118=4;
                }
                break;
            case Null:
                {
                alt118=5;
                }
                break;
            case RULE_RICH_TEXT:
            case RULE_RICH_TEXT_START:
            case RULE_STRING:
                {
                alt118=6;
                }
                break;
            case Typeof:
                {
                alt118=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }

            switch (alt118) {
                case 1 :
                    // InternalSpecParser.g:5630:2: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XCollectionLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:5642:6: ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalSpecParser.g:5642:6: ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure )
                    // InternalSpecParser.g:5642:7: ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XClosure_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:5659:2: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XBooleanLiteral_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:5672:2: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XNumberLiteral_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpecParser.g:5685:2: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XNullLiteral_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpecParser.g:5698:2: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XStringLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSpecParser.g:5711:2: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XTypeLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalSpecParser.g:5730:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalSpecParser.g:5731:2: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalSpecParser.g:5732:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalSpecParser.g:5739:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:5742:28: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalSpecParser.g:5743:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalSpecParser.g:5743:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==NumberSign) ) {
                int LA119_1 = input.LA(2);

                if ( (LA119_1==LeftCurlyBracket) ) {
                    alt119=1;
                }
                else if ( (LA119_1==LeftSquareBracket) ) {
                    alt119=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 119, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    // InternalSpecParser.g:5744:2: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XSetLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:5757:2: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XListLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalSpecParser.g:5776:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalSpecParser.g:5777:2: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalSpecParser.g:5778:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalSpecParser.g:5785:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:5788:28: ( ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket ) )
            // InternalSpecParser.g:5789:1: ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket )
            {
            // InternalSpecParser.g:5789:1: ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket )
            // InternalSpecParser.g:5789:2: () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket
            {
            // InternalSpecParser.g:5789:2: ()
            // InternalSpecParser.g:5790:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalSpecParser.g:5808:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==Synchronized||LA121_0==Extension||LA121_0==Extends||LA121_0==Assert||LA121_0==Import||LA121_0==Return||(LA121_0>=Static && LA121_0<=Switch)||LA121_0==Typeof||LA121_0==False||(LA121_0>=Super && LA121_0<=While)||(LA121_0>=Null && LA121_0<=True)||(LA121_0>=For && LA121_0<=New)||LA121_0==Try||(LA121_0>=Do && LA121_0<=If)||(LA121_0>=ExclamationMark && LA121_0<=NumberSign)||LA121_0==LeftParenthesis||LA121_0==PlusSign||LA121_0==HyphenMinus||LA121_0==LessThanSign||LA121_0==LeftSquareBracket||LA121_0==LeftCurlyBracket||LA121_0==RULE_ID||(LA121_0>=RULE_RICH_TEXT && LA121_0<=RULE_RICH_TEXT_START)||(LA121_0>=RULE_HEX && LA121_0<=RULE_STRING)) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSpecParser.g:5808:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalSpecParser.g:5808:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalSpecParser.g:5809:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:5809:1: (lv_elements_3_0= ruleXExpression )
                    // InternalSpecParser.g:5810:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:5826:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==Comma) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    // InternalSpecParser.g:5827:2: otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalSpecParser.g:5831:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalSpecParser.g:5832:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalSpecParser.g:5832:1: (lv_elements_5_0= ruleXExpression )
                    	    // InternalSpecParser.g:5833:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_83);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalSpecParser.g:5862:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalSpecParser.g:5863:2: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalSpecParser.g:5864:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalSpecParser.g:5871:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:5874:28: ( ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket ) )
            // InternalSpecParser.g:5875:1: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket )
            {
            // InternalSpecParser.g:5875:1: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket )
            // InternalSpecParser.g:5875:2: () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket
            {
            // InternalSpecParser.g:5875:2: ()
            // InternalSpecParser.g:5876:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSpecParser.g:5894:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==Synchronized||LA123_0==Extension||LA123_0==Extends||LA123_0==Assert||LA123_0==Import||LA123_0==Return||(LA123_0>=Static && LA123_0<=Switch)||LA123_0==Typeof||LA123_0==False||(LA123_0>=Super && LA123_0<=While)||(LA123_0>=Null && LA123_0<=True)||(LA123_0>=For && LA123_0<=New)||LA123_0==Try||(LA123_0>=Do && LA123_0<=If)||(LA123_0>=ExclamationMark && LA123_0<=NumberSign)||LA123_0==LeftParenthesis||LA123_0==PlusSign||LA123_0==HyphenMinus||LA123_0==LessThanSign||LA123_0==LeftSquareBracket||LA123_0==LeftCurlyBracket||LA123_0==RULE_ID||(LA123_0>=RULE_RICH_TEXT && LA123_0<=RULE_RICH_TEXT_START)||(LA123_0>=RULE_HEX && LA123_0<=RULE_STRING)) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSpecParser.g:5894:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalSpecParser.g:5894:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalSpecParser.g:5895:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:5895:1: (lv_elements_3_0= ruleXExpression )
                    // InternalSpecParser.g:5896:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_58);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:5912:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop122:
                    do {
                        int alt122=2;
                        int LA122_0 = input.LA(1);

                        if ( (LA122_0==Comma) ) {
                            alt122=1;
                        }


                        switch (alt122) {
                    	case 1 :
                    	    // InternalSpecParser.g:5913:2: otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalSpecParser.g:5917:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalSpecParser.g:5918:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalSpecParser.g:5918:1: (lv_elements_5_0= ruleXExpression )
                    	    // InternalSpecParser.g:5919:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_58);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop122;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalSpecParser.g:5948:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalSpecParser.g:5949:2: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalSpecParser.g:5950:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalSpecParser.g:5957:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:5960:28: ( ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket ) )
            // InternalSpecParser.g:5961:1: ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket )
            {
            // InternalSpecParser.g:5961:1: ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket )
            // InternalSpecParser.g:5961:2: ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket
            {
            // InternalSpecParser.g:5961:2: ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) )
            // InternalSpecParser.g:5961:3: ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket )
            {
            // InternalSpecParser.g:5964:5: ( () otherlv_1= LeftSquareBracket )
            // InternalSpecParser.g:5964:6: () otherlv_1= LeftSquareBracket
            {
            // InternalSpecParser.g:5964:6: ()
            // InternalSpecParser.g:5965:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
                  
            }

            }


            }

            // InternalSpecParser.g:5978:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )?
            int alt126=2;
            alt126 = dfa126.predict(input);
            switch (alt126) {
                case 1 :
                    // InternalSpecParser.g:5978:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) )
                    {
                    // InternalSpecParser.g:5995:6: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) )
                    // InternalSpecParser.g:5995:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) )
                    {
                    // InternalSpecParser.g:5995:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( (LA125_0==EqualsSignGreaterThanSign||LA125_0==LeftParenthesis||LA125_0==RULE_ID) ) {
                        alt125=1;
                    }
                    switch (alt125) {
                        case 1 :
                            // InternalSpecParser.g:5995:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalSpecParser.g:5995:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalSpecParser.g:5996:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalSpecParser.g:5996:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalSpecParser.g:5997:3: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_86);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"declaredFormalParameters",
                                      		lv_declaredFormalParameters_2_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:6013:2: (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop124:
                            do {
                                int alt124=2;
                                int LA124_0 = input.LA(1);

                                if ( (LA124_0==Comma) ) {
                                    alt124=1;
                                }


                                switch (alt124) {
                            	case 1 :
                            	    // InternalSpecParser.g:6014:2: otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FollowSets000.FOLLOW_37); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:6018:1: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalSpecParser.g:6019:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalSpecParser.g:6019:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalSpecParser.g:6020:3: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_86);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredFormalParameters",
                            	              		lv_declaredFormalParameters_4_0, 
                            	              		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop124;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSpecParser.g:6036:6: ( (lv_explicitSyntax_5_0= VerticalLine ) )
                    // InternalSpecParser.g:6037:1: (lv_explicitSyntax_5_0= VerticalLine )
                    {
                    // InternalSpecParser.g:6037:1: (lv_explicitSyntax_5_0= VerticalLine )
                    // InternalSpecParser.g:6038:3: lv_explicitSyntax_5_0= VerticalLine
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,VerticalLine,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXClosureRule());
                      	        }
                             		setWithLastConsumed(current, "explicitSyntax", true, "|");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSpecParser.g:6052:5: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalSpecParser.g:6053:1: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalSpecParser.g:6053:1: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalSpecParser.g:6054:3: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_18);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalSpecParser.g:6083:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalSpecParser.g:6084:2: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalSpecParser.g:6085:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalSpecParser.g:6092:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:6095:28: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* ) )
            // InternalSpecParser.g:6096:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* )
            {
            // InternalSpecParser.g:6096:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* )
            // InternalSpecParser.g:6096:2: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )*
            {
            // InternalSpecParser.g:6096:2: ()
            // InternalSpecParser.g:6097:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:6105:2: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==Synchronized||LA128_0==Extension||LA128_0==Extends||LA128_0==Assert||LA128_0==Import||LA128_0==Return||(LA128_0>=Static && LA128_0<=Switch)||LA128_0==Typeof||LA128_0==False||(LA128_0>=Super && LA128_0<=While)||(LA128_0>=Null && LA128_0<=True)||(LA128_0>=For && LA128_0<=New)||(LA128_0>=Try && LA128_0<=Var)||(LA128_0>=Do && LA128_0<=If)||(LA128_0>=ExclamationMark && LA128_0<=NumberSign)||LA128_0==LeftParenthesis||LA128_0==PlusSign||LA128_0==HyphenMinus||LA128_0==LessThanSign||LA128_0==LeftSquareBracket||LA128_0==LeftCurlyBracket||LA128_0==RULE_ID||(LA128_0>=RULE_RICH_TEXT && LA128_0<=RULE_RICH_TEXT_START)||(LA128_0>=RULE_HEX && LA128_0<=RULE_STRING)) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // InternalSpecParser.g:6105:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )?
            	    {
            	    // InternalSpecParser.g:6105:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalSpecParser.g:6106:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalSpecParser.g:6106:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalSpecParser.g:6107:3: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_88);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_1_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpecParser.g:6123:2: (otherlv_2= Semicolon )?
            	    int alt127=2;
            	    int LA127_0 = input.LA(1);

            	    if ( (LA127_0==Semicolon) ) {
            	        alt127=1;
            	    }
            	    switch (alt127) {
            	        case 1 :
            	            // InternalSpecParser.g:6124:2: otherlv_2= Semicolon
            	            {
            	            otherlv_2=(Token)match(input,Semicolon,FollowSets000.FOLLOW_89); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalSpecParser.g:6136:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalSpecParser.g:6137:2: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalSpecParser.g:6138:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalSpecParser.g:6145:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:6148:28: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalSpecParser.g:6149:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalSpecParser.g:6149:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalSpecParser.g:6149:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:6149:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) )
            // InternalSpecParser.g:6149:3: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) )
            {
            // InternalSpecParser.g:6167:6: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) )
            // InternalSpecParser.g:6167:7: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) )
            {
            // InternalSpecParser.g:6167:7: ()
            // InternalSpecParser.g:6168:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:6176:2: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==EqualsSignGreaterThanSign||LA130_0==LeftParenthesis||LA130_0==RULE_ID) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalSpecParser.g:6176:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalSpecParser.g:6176:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalSpecParser.g:6177:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalSpecParser.g:6177:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalSpecParser.g:6178:3: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      	        }
                             		add(
                             			current, 
                             			"declaredFormalParameters",
                              		lv_declaredFormalParameters_1_0, 
                              		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:6194:2: (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop129:
                    do {
                        int alt129=2;
                        int LA129_0 = input.LA(1);

                        if ( (LA129_0==Comma) ) {
                            alt129=1;
                        }


                        switch (alt129) {
                    	case 1 :
                    	    // InternalSpecParser.g:6195:2: otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	          
                    	    }
                    	    // InternalSpecParser.g:6199:1: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalSpecParser.g:6200:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalSpecParser.g:6200:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalSpecParser.g:6201:3: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_86);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredFormalParameters",
                    	              		lv_declaredFormalParameters_3_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop129;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSpecParser.g:6217:6: ( (lv_explicitSyntax_4_0= VerticalLine ) )
            // InternalSpecParser.g:6218:1: (lv_explicitSyntax_4_0= VerticalLine )
            {
            // InternalSpecParser.g:6218:1: (lv_explicitSyntax_4_0= VerticalLine )
            // InternalSpecParser.g:6219:3: lv_explicitSyntax_4_0= VerticalLine
            {
            lv_explicitSyntax_4_0=(Token)match(input,VerticalLine,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXShortClosureRule());
              	        }
                     		setWithLastConsumed(current, "explicitSyntax", true, "|");
              	    
            }

            }


            }


            }


            }

            // InternalSpecParser.g:6233:4: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalSpecParser.g:6234:1: (lv_expression_5_0= ruleXExpression )
            {
            // InternalSpecParser.g:6234:1: (lv_expression_5_0= ruleXExpression )
            // InternalSpecParser.g:6235:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalSpecParser.g:6259:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalSpecParser.g:6260:2: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalSpecParser.g:6261:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalSpecParser.g:6268:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:6271:28: ( (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis ) )
            // InternalSpecParser.g:6272:1: (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis )
            {
            // InternalSpecParser.g:6272:1: (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis )
            // InternalSpecParser.g:6273:2: otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_53);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XExpression_1;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalSpecParser.g:6302:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalSpecParser.g:6303:2: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalSpecParser.g:6304:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalSpecParser.g:6311:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:6314:28: ( ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalSpecParser.g:6315:1: ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalSpecParser.g:6315:1: ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalSpecParser.g:6315:2: () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalSpecParser.g:6315:2: ()
            // InternalSpecParser.g:6316:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,If,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalSpecParser.g:6334:1: ( (lv_if_3_0= ruleXExpression ) )
            // InternalSpecParser.g:6335:1: (lv_if_3_0= ruleXExpression )
            {
            // InternalSpecParser.g:6335:1: (lv_if_3_0= ruleXExpression )
            // InternalSpecParser.g:6336:3: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // InternalSpecParser.g:6357:1: ( (lv_then_5_0= ruleXExpression ) )
            // InternalSpecParser.g:6358:1: (lv_then_5_0= ruleXExpression )
            {
            // InternalSpecParser.g:6358:1: (lv_then_5_0= ruleXExpression )
            // InternalSpecParser.g:6359:3: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_90);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:6375:2: ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==Else) ) {
                int LA131_1 = input.LA(2);

                if ( (synpred244_InternalSpecParser()) ) {
                    alt131=1;
                }
            }
            switch (alt131) {
                case 1 :
                    // InternalSpecParser.g:6375:3: ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalSpecParser.g:6375:3: ( ( Else )=>otherlv_6= Else )
                    // InternalSpecParser.g:6375:4: ( Else )=>otherlv_6= Else
                    {
                    otherlv_6=(Token)match(input,Else,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                          
                    }

                    }

                    // InternalSpecParser.g:6382:2: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalSpecParser.g:6383:1: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:6383:1: (lv_else_7_0= ruleXExpression )
                    // InternalSpecParser.g:6384:3: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalSpecParser.g:6408:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalSpecParser.g:6409:2: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalSpecParser.g:6410:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalSpecParser.g:6417:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:6420:28: ( ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket ) )
            // InternalSpecParser.g:6421:1: ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket )
            {
            // InternalSpecParser.g:6421:1: ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket )
            // InternalSpecParser.g:6421:2: () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket
            {
            // InternalSpecParser.g:6421:2: ()
            // InternalSpecParser.g:6422:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Switch,FollowSets000.FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
                  
            }
            // InternalSpecParser.g:6435:1: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt133=2;
            alt133 = dfa133.predict(input);
            switch (alt133) {
                case 1 :
                    // InternalSpecParser.g:6435:2: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
                    {
                    // InternalSpecParser.g:6435:2: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
                    // InternalSpecParser.g:6435:3: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
                    {
                    // InternalSpecParser.g:6435:3: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
                    // InternalSpecParser.g:6435:4: ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
                    {
                    // InternalSpecParser.g:6443:5: (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
                    // InternalSpecParser.g:6444:2: otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
                    {
                    otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                          
                    }
                    // InternalSpecParser.g:6448:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalSpecParser.g:6449:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalSpecParser.g:6449:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalSpecParser.g:6450:3: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_92);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredParam",
                              		lv_declaredParam_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                          
                    }

                    }


                    }

                    // InternalSpecParser.g:6471:3: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalSpecParser.g:6472:1: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:6472:1: (lv_switch_5_0= ruleXExpression )
                    // InternalSpecParser.g:6473:3: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_5_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:6495:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalSpecParser.g:6495:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalSpecParser.g:6495:7: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalSpecParser.g:6495:7: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )?
                    int alt132=2;
                    alt132 = dfa132.predict(input);
                    switch (alt132) {
                        case 1 :
                            // InternalSpecParser.g:6495:8: ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon )
                            {
                            // InternalSpecParser.g:6501:5: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon )
                            // InternalSpecParser.g:6501:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon
                            {
                            // InternalSpecParser.g:6501:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalSpecParser.g:6502:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalSpecParser.g:6502:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalSpecParser.g:6503:3: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_92);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredParam",
                                      		lv_declaredParam_7_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,Colon,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                                  
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:6524:4: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalSpecParser.g:6525:1: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:6525:1: (lv_switch_9_0= ruleXExpression )
                    // InternalSpecParser.g:6526:3: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_9_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,LeftCurlyBracket,FollowSets000.FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalSpecParser.g:6547:1: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==Case||LA134_0==EqualsSignGreaterThanSign||LA134_0==LeftParenthesis||LA134_0==Comma||LA134_0==Colon||LA134_0==RULE_ID) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalSpecParser.g:6548:1: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalSpecParser.g:6548:1: (lv_cases_11_0= ruleXCasePart )
            	    // InternalSpecParser.g:6549:3: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_93);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_11_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);

            // InternalSpecParser.g:6565:3: (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==Default) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSpecParser.g:6566:2: otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,Default,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                          
                    }
                    otherlv_13=(Token)match(input,Colon,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                          
                    }
                    // InternalSpecParser.g:6575:1: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalSpecParser.g:6576:1: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:6576:1: (lv_default_14_0= ruleXExpression )
                    // InternalSpecParser.g:6577:3: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"default",
                              		lv_default_14_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,RightCurlyBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalSpecParser.g:6606:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalSpecParser.g:6607:2: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalSpecParser.g:6608:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalSpecParser.g:6615:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:6618:28: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) ) )
            // InternalSpecParser.g:6619:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) )
            {
            // InternalSpecParser.g:6619:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) )
            // InternalSpecParser.g:6619:2: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) )
            {
            // InternalSpecParser.g:6619:2: ()
            // InternalSpecParser.g:6620:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:6628:2: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==EqualsSignGreaterThanSign||LA136_0==LeftParenthesis||LA136_0==RULE_ID) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSpecParser.g:6629:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalSpecParser.g:6629:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalSpecParser.g:6630:3: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"typeGuard",
                              		lv_typeGuard_1_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSpecParser.g:6646:3: (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==Case) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSpecParser.g:6647:2: otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,Case,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                          
                    }
                    // InternalSpecParser.g:6651:1: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalSpecParser.g:6652:1: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:6652:1: (lv_case_3_0= ruleXExpression )
                    // InternalSpecParser.g:6653:3: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"case",
                              		lv_case_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSpecParser.g:6669:4: ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) )
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==Colon) ) {
                alt138=1;
            }
            else if ( (LA138_0==Comma) ) {
                alt138=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }
            switch (alt138) {
                case 1 :
                    // InternalSpecParser.g:6669:5: (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalSpecParser.g:6669:5: (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalSpecParser.g:6670:2: otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,Colon,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                          
                    }
                    // InternalSpecParser.g:6674:1: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalSpecParser.g:6675:1: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:6675:1: (lv_then_5_0= ruleXExpression )
                    // InternalSpecParser.g:6676:3: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"then",
                              		lv_then_5_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:6693:6: ( (lv_fallThrough_6_0= Comma ) )
                    {
                    // InternalSpecParser.g:6693:6: ( (lv_fallThrough_6_0= Comma ) )
                    // InternalSpecParser.g:6694:1: (lv_fallThrough_6_0= Comma )
                    {
                    // InternalSpecParser.g:6694:1: (lv_fallThrough_6_0= Comma )
                    // InternalSpecParser.g:6695:3: lv_fallThrough_6_0= Comma
                    {
                    lv_fallThrough_6_0=(Token)match(input,Comma,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXCasePartRule());
                      	        }
                             		setWithLastConsumed(current, "fallThrough", true, ",");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalSpecParser.g:6717:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalSpecParser.g:6718:2: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalSpecParser.g:6719:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalSpecParser.g:6726:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:6729:28: ( ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalSpecParser.g:6730:1: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalSpecParser.g:6730:1: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalSpecParser.g:6730:2: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:6730:2: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
            // InternalSpecParser.g:6730:3: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
            {
            // InternalSpecParser.g:6741:5: ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
            // InternalSpecParser.g:6741:6: () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
            {
            // InternalSpecParser.g:6741:6: ()
            // InternalSpecParser.g:6742:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }
            // InternalSpecParser.g:6760:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalSpecParser.g:6761:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalSpecParser.g:6761:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalSpecParser.g:6762:3: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_92);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,Colon,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
                  
            }

            }


            }

            // InternalSpecParser.g:6783:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalSpecParser.g:6784:1: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalSpecParser.g:6784:1: (lv_forExpression_5_0= ruleXExpression )
            // InternalSpecParser.g:6785:3: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"forExpression",
                      		lv_forExpression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // InternalSpecParser.g:6806:1: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalSpecParser.g:6807:1: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalSpecParser.g:6807:1: (lv_eachExpression_7_0= ruleXExpression )
            // InternalSpecParser.g:6808:3: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_7_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalSpecParser.g:6832:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalSpecParser.g:6833:2: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalSpecParser.g:6834:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalSpecParser.g:6841:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:6844:28: ( ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalSpecParser.g:6845:1: ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalSpecParser.g:6845:1: ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalSpecParser.g:6845:2: () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:6845:2: ()
            // InternalSpecParser.g:6846:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalSpecParser.g:6864:1: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==Synchronized||LA140_0==Extension||LA140_0==Extends||LA140_0==Assert||LA140_0==Import||LA140_0==Return||(LA140_0>=Static && LA140_0<=Switch)||LA140_0==Typeof||LA140_0==False||(LA140_0>=Super && LA140_0<=While)||(LA140_0>=Null && LA140_0<=True)||(LA140_0>=For && LA140_0<=New)||(LA140_0>=Try && LA140_0<=Var)||(LA140_0>=Do && LA140_0<=If)||(LA140_0>=ExclamationMark && LA140_0<=NumberSign)||LA140_0==LeftParenthesis||LA140_0==PlusSign||LA140_0==HyphenMinus||LA140_0==LessThanSign||LA140_0==LeftSquareBracket||LA140_0==LeftCurlyBracket||LA140_0==RULE_ID||(LA140_0>=RULE_RICH_TEXT && LA140_0<=RULE_RICH_TEXT_START)||(LA140_0>=RULE_HEX && LA140_0<=RULE_STRING)) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalSpecParser.g:6864:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalSpecParser.g:6864:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalSpecParser.g:6865:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalSpecParser.g:6865:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalSpecParser.g:6866:3: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"initExpressions",
                              		lv_initExpressions_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:6882:2: (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop139:
                    do {
                        int alt139=2;
                        int LA139_0 = input.LA(1);

                        if ( (LA139_0==Comma) ) {
                            alt139=1;
                        }


                        switch (alt139) {
                    	case 1 :
                    	    // InternalSpecParser.g:6883:2: otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalSpecParser.g:6887:1: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalSpecParser.g:6888:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalSpecParser.g:6888:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalSpecParser.g:6889:3: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"initExpressions",
                    	              		lv_initExpressions_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop139;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,Semicolon,FollowSets000.FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
                  
            }
            // InternalSpecParser.g:6910:1: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==Synchronized||LA141_0==Extension||LA141_0==Extends||LA141_0==Assert||LA141_0==Import||LA141_0==Return||(LA141_0>=Static && LA141_0<=Switch)||LA141_0==Typeof||LA141_0==False||(LA141_0>=Super && LA141_0<=While)||(LA141_0>=Null && LA141_0<=True)||(LA141_0>=For && LA141_0<=New)||LA141_0==Try||(LA141_0>=Do && LA141_0<=If)||(LA141_0>=ExclamationMark && LA141_0<=NumberSign)||LA141_0==LeftParenthesis||LA141_0==PlusSign||LA141_0==HyphenMinus||LA141_0==LessThanSign||LA141_0==LeftSquareBracket||LA141_0==LeftCurlyBracket||LA141_0==RULE_ID||(LA141_0>=RULE_RICH_TEXT && LA141_0<=RULE_RICH_TEXT_START)||(LA141_0>=RULE_HEX && LA141_0<=RULE_STRING)) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSpecParser.g:6911:1: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:6911:1: (lv_expression_7_0= ruleXExpression )
                    // InternalSpecParser.g:6912:3: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_101);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,Semicolon,FollowSets000.FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
                  
            }
            // InternalSpecParser.g:6933:1: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==Synchronized||LA143_0==Extension||LA143_0==Extends||LA143_0==Assert||LA143_0==Import||LA143_0==Return||(LA143_0>=Static && LA143_0<=Switch)||LA143_0==Typeof||LA143_0==False||(LA143_0>=Super && LA143_0<=While)||(LA143_0>=Null && LA143_0<=True)||(LA143_0>=For && LA143_0<=New)||LA143_0==Try||(LA143_0>=Do && LA143_0<=If)||(LA143_0>=ExclamationMark && LA143_0<=NumberSign)||LA143_0==LeftParenthesis||LA143_0==PlusSign||LA143_0==HyphenMinus||LA143_0==LessThanSign||LA143_0==LeftSquareBracket||LA143_0==LeftCurlyBracket||LA143_0==RULE_ID||(LA143_0>=RULE_RICH_TEXT && LA143_0<=RULE_RICH_TEXT_START)||(LA143_0>=RULE_HEX && LA143_0<=RULE_STRING)) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSpecParser.g:6933:2: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalSpecParser.g:6933:2: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalSpecParser.g:6934:1: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:6934:1: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalSpecParser.g:6935:3: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"updateExpressions",
                              		lv_updateExpressions_9_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:6951:2: (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==Comma) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalSpecParser.g:6952:2: otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	          
                    	    }
                    	    // InternalSpecParser.g:6956:1: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalSpecParser.g:6957:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalSpecParser.g:6957:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalSpecParser.g:6958:3: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_13);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"updateExpressions",
                    	              		lv_updateExpressions_11_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
                  
            }
            // InternalSpecParser.g:6979:1: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalSpecParser.g:6980:1: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalSpecParser.g:6980:1: (lv_eachExpression_13_0= ruleXExpression )
            // InternalSpecParser.g:6981:3: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_13_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalSpecParser.g:7005:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalSpecParser.g:7006:2: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalSpecParser.g:7007:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalSpecParser.g:7014:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7017:28: ( ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalSpecParser.g:7018:1: ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalSpecParser.g:7018:1: ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalSpecParser.g:7018:2: () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:7018:2: ()
            // InternalSpecParser.g:7019:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,While,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalSpecParser.g:7037:1: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalSpecParser.g:7038:1: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalSpecParser.g:7038:1: (lv_predicate_3_0= ruleXExpression )
            // InternalSpecParser.g:7039:3: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // InternalSpecParser.g:7060:1: ( (lv_body_5_0= ruleXExpression ) )
            // InternalSpecParser.g:7061:1: (lv_body_5_0= ruleXExpression )
            {
            // InternalSpecParser.g:7061:1: (lv_body_5_0= ruleXExpression )
            // InternalSpecParser.g:7062:3: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalSpecParser.g:7086:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalSpecParser.g:7087:2: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalSpecParser.g:7088:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalSpecParser.g:7095:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7098:28: ( ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) )
            // InternalSpecParser.g:7099:1: ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
            {
            // InternalSpecParser.g:7099:1: ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
            // InternalSpecParser.g:7099:2: () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
            {
            // InternalSpecParser.g:7099:2: ()
            // InternalSpecParser.g:7100:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Do,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
                  
            }
            // InternalSpecParser.g:7113:1: ( (lv_body_2_0= ruleXExpression ) )
            // InternalSpecParser.g:7114:1: (lv_body_2_0= ruleXExpression )
            {
            // InternalSpecParser.g:7114:1: (lv_body_2_0= ruleXExpression )
            // InternalSpecParser.g:7115:3: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,While,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
                  
            }
            // InternalSpecParser.g:7141:1: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalSpecParser.g:7142:1: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalSpecParser.g:7142:1: (lv_predicate_5_0= ruleXExpression )
            // InternalSpecParser.g:7143:3: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalSpecParser.g:7172:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalSpecParser.g:7173:2: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalSpecParser.g:7174:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalSpecParser.g:7181:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= LeftCurlyBracket ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* otherlv_4= RightCurlyBracket ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7184:28: ( ( () otherlv_1= LeftCurlyBracket ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* otherlv_4= RightCurlyBracket ) )
            // InternalSpecParser.g:7185:1: ( () otherlv_1= LeftCurlyBracket ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* otherlv_4= RightCurlyBracket )
            {
            // InternalSpecParser.g:7185:1: ( () otherlv_1= LeftCurlyBracket ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* otherlv_4= RightCurlyBracket )
            // InternalSpecParser.g:7185:2: () otherlv_1= LeftCurlyBracket ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* otherlv_4= RightCurlyBracket
            {
            // InternalSpecParser.g:7185:2: ()
            // InternalSpecParser.g:7186:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FollowSets000.FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // InternalSpecParser.g:7199:1: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )*
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

                if ( (LA145_0==Synchronized||LA145_0==Extension||LA145_0==Extends||LA145_0==Assert||LA145_0==Import||LA145_0==Return||(LA145_0>=Static && LA145_0<=Switch)||LA145_0==Typeof||LA145_0==False||(LA145_0>=Super && LA145_0<=While)||(LA145_0>=Null && LA145_0<=True)||(LA145_0>=For && LA145_0<=New)||(LA145_0>=Try && LA145_0<=Var)||(LA145_0>=Do && LA145_0<=If)||(LA145_0>=ExclamationMark && LA145_0<=NumberSign)||LA145_0==LeftParenthesis||LA145_0==PlusSign||LA145_0==HyphenMinus||LA145_0==LessThanSign||LA145_0==LeftSquareBracket||LA145_0==LeftCurlyBracket||LA145_0==RULE_ID||(LA145_0>=RULE_RICH_TEXT && LA145_0<=RULE_RICH_TEXT_START)||(LA145_0>=RULE_HEX && LA145_0<=RULE_STRING)) ) {
                    alt145=1;
                }


                switch (alt145) {
            	case 1 :
            	    // InternalSpecParser.g:7199:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )?
            	    {
            	    // InternalSpecParser.g:7199:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalSpecParser.g:7200:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalSpecParser.g:7200:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalSpecParser.g:7201:3: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_2_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpecParser.g:7217:2: (otherlv_3= Semicolon )?
            	    int alt144=2;
            	    int LA144_0 = input.LA(1);

            	    if ( (LA144_0==Semicolon) ) {
            	        alt144=1;
            	    }
            	    switch (alt144) {
            	        case 1 :
            	            // InternalSpecParser.g:7218:2: otherlv_3= Semicolon
            	            {
            	            otherlv_3=(Token)match(input,Semicolon,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);

            otherlv_4=(Token)match(input,RightCurlyBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalSpecParser.g:7235:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalSpecParser.g:7236:2: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalSpecParser.g:7237:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalSpecParser.g:7244:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7247:28: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalSpecParser.g:7248:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalSpecParser.g:7248:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( ((LA146_0>=Val && LA146_0<=Var)) ) {
                alt146=1;
            }
            else if ( (LA146_0==Synchronized||LA146_0==Extension||LA146_0==Extends||LA146_0==Assert||LA146_0==Import||LA146_0==Return||(LA146_0>=Static && LA146_0<=Switch)||LA146_0==Typeof||LA146_0==False||(LA146_0>=Super && LA146_0<=While)||(LA146_0>=Null && LA146_0<=True)||(LA146_0>=For && LA146_0<=New)||LA146_0==Try||(LA146_0>=Do && LA146_0<=If)||(LA146_0>=ExclamationMark && LA146_0<=NumberSign)||LA146_0==LeftParenthesis||LA146_0==PlusSign||LA146_0==HyphenMinus||LA146_0==LessThanSign||LA146_0==LeftSquareBracket||LA146_0==LeftCurlyBracket||LA146_0==RULE_ID||(LA146_0>=RULE_RICH_TEXT && LA146_0<=RULE_RICH_TEXT_START)||(LA146_0>=RULE_HEX && LA146_0<=RULE_STRING)) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalSpecParser.g:7249:2: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XVariableDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:7262:2: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalSpecParser.g:7281:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalSpecParser.g:7282:2: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalSpecParser.g:7283:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalSpecParser.g:7290:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7293:28: ( ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalSpecParser.g:7294:1: ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalSpecParser.g:7294:1: ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalSpecParser.g:7294:2: () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalSpecParser.g:7294:2: ()
            // InternalSpecParser.g:7295:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:7303:2: ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==Var) ) {
                alt147=1;
            }
            else if ( (LA147_0==Val) ) {
                alt147=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // InternalSpecParser.g:7303:3: ( (lv_writeable_1_0= Var ) )
                    {
                    // InternalSpecParser.g:7303:3: ( (lv_writeable_1_0= Var ) )
                    // InternalSpecParser.g:7304:1: (lv_writeable_1_0= Var )
                    {
                    // InternalSpecParser.g:7304:1: (lv_writeable_1_0= Var )
                    // InternalSpecParser.g:7305:3: lv_writeable_1_0= Var
                    {
                    lv_writeable_1_0=(Token)match(input,Var,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "writeable", true, "var");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:7321:2: otherlv_2= Val
                    {
                    otherlv_2=(Token)match(input,Val,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalSpecParser.g:7325:2: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==RULE_ID) ) {
                int LA148_1 = input.LA(2);

                if ( (synpred264_InternalSpecParser()) ) {
                    alt148=1;
                }
                else if ( (true) ) {
                    alt148=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 148, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA148_0==EqualsSignGreaterThanSign||LA148_0==LeftParenthesis) ) {
                alt148=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // InternalSpecParser.g:7325:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalSpecParser.g:7325:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalSpecParser.g:7325:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalSpecParser.g:7333:6: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalSpecParser.g:7333:7: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalSpecParser.g:7333:7: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalSpecParser.g:7334:1: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalSpecParser.g:7334:1: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalSpecParser.g:7335:3: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_3);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:7351:2: ( (lv_name_4_0= ruleValidID ) )
                    // InternalSpecParser.g:7352:1: (lv_name_4_0= ruleValidID )
                    {
                    // InternalSpecParser.g:7352:1: (lv_name_4_0= ruleValidID )
                    // InternalSpecParser.g:7353:3: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_106);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:7370:6: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalSpecParser.g:7370:6: ( (lv_name_5_0= ruleValidID ) )
                    // InternalSpecParser.g:7371:1: (lv_name_5_0= ruleValidID )
                    {
                    // InternalSpecParser.g:7371:1: (lv_name_5_0= ruleValidID )
                    // InternalSpecParser.g:7372:3: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_106);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_5_0, 
                              		"org.eclipse.xtext.xbase.Xtype.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSpecParser.g:7388:3: (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==EqualsSign) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSpecParser.g:7389:2: otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                          
                    }
                    // InternalSpecParser.g:7393:1: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalSpecParser.g:7394:1: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:7394:1: (lv_right_7_0= ruleXExpression )
                    // InternalSpecParser.g:7395:3: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"right",
                              		lv_right_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalSpecParser.g:7419:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalSpecParser.g:7420:2: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalSpecParser.g:7421:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalSpecParser.g:7428:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7431:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalSpecParser.g:7432:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalSpecParser.g:7432:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalSpecParser.g:7432:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalSpecParser.g:7432:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==RULE_ID) ) {
                int LA150_1 = input.LA(2);

                if ( (LA150_1==FullStop||LA150_1==LessThanSign||LA150_1==LeftSquareBracket||LA150_1==RULE_ID) ) {
                    alt150=1;
                }
            }
            else if ( (LA150_0==EqualsSignGreaterThanSign||LA150_0==LeftParenthesis) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalSpecParser.g:7433:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalSpecParser.g:7433:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalSpecParser.g:7434:3: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_3);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"parameterType",
                              		lv_parameterType_0_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSpecParser.g:7450:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalSpecParser.g:7451:1: (lv_name_1_0= ruleValidID )
            {
            // InternalSpecParser.g:7451:1: (lv_name_1_0= ruleValidID )
            // InternalSpecParser.g:7452:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalSpecParser.g:7476:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalSpecParser.g:7477:2: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalSpecParser.g:7478:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalSpecParser.g:7485:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7488:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalSpecParser.g:7489:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalSpecParser.g:7489:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalSpecParser.g:7489:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalSpecParser.g:7489:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalSpecParser.g:7490:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalSpecParser.g:7490:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalSpecParser.g:7491:3: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_3);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"parameterType",
                      		lv_parameterType_0_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:7507:2: ( (lv_name_1_0= ruleValidID ) )
            // InternalSpecParser.g:7508:1: (lv_name_1_0= ruleValidID )
            {
            // InternalSpecParser.g:7508:1: (lv_name_1_0= ruleValidID )
            // InternalSpecParser.g:7509:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalSpecParser.g:7533:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalSpecParser.g:7534:2: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalSpecParser.g:7535:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalSpecParser.g:7542:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7545:28: ( ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalSpecParser.g:7546:1: ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalSpecParser.g:7546:1: ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalSpecParser.g:7546:2: () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalSpecParser.g:7546:2: ()
            // InternalSpecParser.g:7547:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:7555:2: (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==LessThanSign) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalSpecParser.g:7556:2: otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalSpecParser.g:7560:1: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalSpecParser.g:7561:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalSpecParser.g:7561:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalSpecParser.g:7562:3: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:7578:2: (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==Comma) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    // InternalSpecParser.g:7579:2: otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSpecParser.g:7583:1: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalSpecParser.g:7584:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalSpecParser.g:7584:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalSpecParser.g:7585:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_16);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_4_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop151;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }

            // InternalSpecParser.g:7606:3: ( ( ruleIdOrSuper ) )
            // InternalSpecParser.g:7607:1: ( ruleIdOrSuper )
            {
            // InternalSpecParser.g:7607:1: ( ruleIdOrSuper )
            // InternalSpecParser.g:7608:3: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXFeatureCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_107);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:7625:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )?
            int alt155=2;
            alt155 = dfa155.predict(input);
            switch (alt155) {
                case 1 :
                    // InternalSpecParser.g:7625:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis
                    {
                    // InternalSpecParser.g:7625:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) )
                    // InternalSpecParser.g:7625:4: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis )
                    {
                    // InternalSpecParser.g:7633:1: (lv_explicitOperationCall_7_0= LeftParenthesis )
                    // InternalSpecParser.g:7634:3: lv_explicitOperationCall_7_0= LeftParenthesis
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXFeatureCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:7648:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt154=3;
                    alt154 = dfa154.predict(input);
                    switch (alt154) {
                        case 1 :
                            // InternalSpecParser.g:7648:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalSpecParser.g:7648:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalSpecParser.g:7648:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalSpecParser.g:7667:1: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalSpecParser.g:7668:3: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_53);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_8_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:7685:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalSpecParser.g:7685:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalSpecParser.g:7685:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalSpecParser.g:7685:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalSpecParser.g:7686:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalSpecParser.g:7686:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalSpecParser.g:7687:3: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_9_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:7703:2: (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop153:
                            do {
                                int alt153=2;
                                int LA153_0 = input.LA(1);

                                if ( (LA153_0==Comma) ) {
                                    alt153=1;
                                }


                                switch (alt153) {
                            	case 1 :
                            	    // InternalSpecParser.g:7704:2: otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:7708:1: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalSpecParser.g:7709:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalSpecParser.g:7709:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalSpecParser.g:7710:3: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_13);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"featureCallArguments",
                            	              		lv_featureCallArguments_11_0, 
                            	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop153;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }
                    break;

            }

            // InternalSpecParser.g:7731:3: ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt156=2;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    // InternalSpecParser.g:7731:4: ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalSpecParser.g:7735:1: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalSpecParser.g:7736:3: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"featureCallArguments",
                              		lv_featureCallArguments_13_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalSpecParser.g:7760:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalSpecParser.g:7761:1: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalSpecParser.g:7762:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalSpecParser.g:7769:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7773:6: ( (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension ) )
            // InternalSpecParser.g:7774:1: (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension )
            {
            // InternalSpecParser.g:7774:1: (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension )
            int alt157=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt157=1;
                }
                break;
            case Extends:
                {
                alt157=2;
                }
                break;
            case Static:
                {
                alt157=3;
                }
                break;
            case Import:
                {
                alt157=4;
                }
                break;
            case Extension:
                {
                alt157=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }

            switch (alt157) {
                case 1 :
                    // InternalSpecParser.g:7775:5: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ValidID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:7787:2: kw= Extends
                    {
                    kw=(Token)match(input,Extends,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:7794:2: kw= Static
                    {
                    kw=(Token)match(input,Static,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpecParser.g:7801:2: kw= Import
                    {
                    kw=(Token)match(input,Import,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpecParser.g:7808:2: kw= Extension
                    {
                    kw=(Token)match(input,Extension,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalSpecParser.g:7821:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalSpecParser.g:7822:1: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalSpecParser.g:7823:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalSpecParser.g:7830:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= Super ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7834:6: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= Super ) )
            // InternalSpecParser.g:7835:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= Super )
            {
            // InternalSpecParser.g:7835:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= Super )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==Extension||LA158_0==Extends||LA158_0==Import||LA158_0==Static||LA158_0==RULE_ID) ) {
                alt158=1;
            }
            else if ( (LA158_0==Super) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    // InternalSpecParser.g:7836:5: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_FeatureCallID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:7848:2: kw= Super
                    {
                    kw=(Token)match(input,Super,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalSpecParser.g:7861:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalSpecParser.g:7862:2: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalSpecParser.g:7863:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalSpecParser.g:7870:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:7873:28: ( ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalSpecParser.g:7874:1: ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalSpecParser.g:7874:1: ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalSpecParser.g:7874:2: () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalSpecParser.g:7874:2: ()
            // InternalSpecParser.g:7875:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,New,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
                  
            }
            // InternalSpecParser.g:7888:1: ( ( ruleQualifiedName ) )
            // InternalSpecParser.g:7889:1: ( ruleQualifiedName )
            {
            // InternalSpecParser.g:7889:1: ( ruleQualifiedName )
            // InternalSpecParser.g:7890:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXConstructorCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_108);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:7907:2: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )?
            int alt160=2;
            alt160 = dfa160.predict(input);
            switch (alt160) {
                case 1 :
                    // InternalSpecParser.g:7907:3: ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign
                    {
                    // InternalSpecParser.g:7907:3: ( ( LessThanSign )=>otherlv_3= LessThanSign )
                    // InternalSpecParser.g:7907:4: ( LessThanSign )=>otherlv_3= LessThanSign
                    {
                    otherlv_3=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                          
                    }

                    }

                    // InternalSpecParser.g:7914:2: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalSpecParser.g:7915:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalSpecParser.g:7915:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalSpecParser.g:7916:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:7932:2: (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop159:
                    do {
                        int alt159=2;
                        int LA159_0 = input.LA(1);

                        if ( (LA159_0==Comma) ) {
                            alt159=1;
                        }


                        switch (alt159) {
                    	case 1 :
                    	    // InternalSpecParser.g:7933:2: otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSpecParser.g:7937:1: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalSpecParser.g:7938:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalSpecParser.g:7938:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalSpecParser.g:7939:3: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_16);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_6_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop159;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                          
                    }

                    }
                    break;

            }

            // InternalSpecParser.g:7960:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )?
            int alt163=2;
            alt163 = dfa163.predict(input);
            switch (alt163) {
                case 1 :
                    // InternalSpecParser.g:7960:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis
                    {
                    // InternalSpecParser.g:7960:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) )
                    // InternalSpecParser.g:7960:5: ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis )
                    {
                    // InternalSpecParser.g:7968:1: (lv_explicitConstructorCall_8_0= LeftParenthesis )
                    // InternalSpecParser.g:7969:3: lv_explicitConstructorCall_8_0= LeftParenthesis
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXConstructorCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:7983:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt162=3;
                    alt162 = dfa162.predict(input);
                    switch (alt162) {
                        case 1 :
                            // InternalSpecParser.g:7983:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalSpecParser.g:7983:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalSpecParser.g:7983:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalSpecParser.g:8002:1: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalSpecParser.g:8003:3: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_53);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_9_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:8020:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalSpecParser.g:8020:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalSpecParser.g:8020:7: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalSpecParser.g:8020:7: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalSpecParser.g:8021:1: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalSpecParser.g:8021:1: (lv_arguments_10_0= ruleXExpression )
                            // InternalSpecParser.g:8022:3: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_10_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:8038:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop161:
                            do {
                                int alt161=2;
                                int LA161_0 = input.LA(1);

                                if ( (LA161_0==Comma) ) {
                                    alt161=1;
                                }


                                switch (alt161) {
                            	case 1 :
                            	    // InternalSpecParser.g:8039:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:8043:1: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalSpecParser.g:8044:1: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalSpecParser.g:8044:1: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalSpecParser.g:8045:3: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_13);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"arguments",
                            	              		lv_arguments_12_0, 
                            	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop161;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                          
                    }

                    }
                    break;

            }

            // InternalSpecParser.g:8066:3: ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt164=2;
            alt164 = dfa164.predict(input);
            switch (alt164) {
                case 1 :
                    // InternalSpecParser.g:8066:4: ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalSpecParser.g:8070:1: (lv_arguments_14_0= ruleXClosure )
                    // InternalSpecParser.g:8071:3: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_14_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalSpecParser.g:8095:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalSpecParser.g:8096:2: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalSpecParser.g:8097:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalSpecParser.g:8104:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:8107:28: ( ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) ) )
            // InternalSpecParser.g:8108:1: ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) )
            {
            // InternalSpecParser.g:8108:1: ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) )
            // InternalSpecParser.g:8108:2: () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) )
            {
            // InternalSpecParser.g:8108:2: ()
            // InternalSpecParser.g:8109:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:8117:2: (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) )
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==False) ) {
                alt165=1;
            }
            else if ( (LA165_0==True) ) {
                alt165=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 165, 0, input);

                throw nvae;
            }
            switch (alt165) {
                case 1 :
                    // InternalSpecParser.g:8118:2: otherlv_1= False
                    {
                    otherlv_1=(Token)match(input,False,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:8123:6: ( (lv_isTrue_2_0= True ) )
                    {
                    // InternalSpecParser.g:8123:6: ( (lv_isTrue_2_0= True ) )
                    // InternalSpecParser.g:8124:1: (lv_isTrue_2_0= True )
                    {
                    // InternalSpecParser.g:8124:1: (lv_isTrue_2_0= True )
                    // InternalSpecParser.g:8125:3: lv_isTrue_2_0= True
                    {
                    lv_isTrue_2_0=(Token)match(input,True,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "isTrue", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalSpecParser.g:8147:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalSpecParser.g:8148:2: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalSpecParser.g:8149:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalSpecParser.g:8156:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= Null ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:8159:28: ( ( () otherlv_1= Null ) )
            // InternalSpecParser.g:8160:1: ( () otherlv_1= Null )
            {
            // InternalSpecParser.g:8160:1: ( () otherlv_1= Null )
            // InternalSpecParser.g:8160:2: () otherlv_1= Null
            {
            // InternalSpecParser.g:8160:2: ()
            // InternalSpecParser.g:8161:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Null,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalSpecParser.g:8182:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalSpecParser.g:8183:2: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalSpecParser.g:8184:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalSpecParser.g:8191:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8194:28: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalSpecParser.g:8195:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalSpecParser.g:8195:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalSpecParser.g:8195:2: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalSpecParser.g:8195:2: ()
            // InternalSpecParser.g:8196:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalSpecParser.g:8204:2: ( (lv_value_1_0= ruleNumber ) )
            // InternalSpecParser.g:8205:1: (lv_value_1_0= ruleNumber )
            {
            // InternalSpecParser.g:8205:1: (lv_value_1_0= ruleNumber )
            // InternalSpecParser.g:8206:3: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.eclipse.xtext.xbase.Xbase.Number");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalSpecParser.g:8230:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalSpecParser.g:8231:2: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalSpecParser.g:8232:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalSpecParser.g:8239:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8242:28: ( ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis ) )
            // InternalSpecParser.g:8243:1: ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis )
            {
            // InternalSpecParser.g:8243:1: ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis )
            // InternalSpecParser.g:8243:2: () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis
            {
            // InternalSpecParser.g:8243:2: ()
            // InternalSpecParser.g:8244:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Typeof,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalSpecParser.g:8262:1: ( ( ruleQualifiedName ) )
            // InternalSpecParser.g:8263:1: ( ruleQualifiedName )
            {
            // InternalSpecParser.g:8263:1: ( ruleQualifiedName )
            // InternalSpecParser.g:8264:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXTypeLiteralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_109);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:8281:2: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==LeftSquareBracket) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // InternalSpecParser.g:8282:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalSpecParser.g:8282:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalSpecParser.g:8283:3: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_109);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arrayDimensions",
            	              		lv_arrayDimensions_4_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);

            otherlv_5=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalSpecParser.g:8312:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalSpecParser.g:8313:2: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalSpecParser.g:8314:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalSpecParser.g:8321:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8324:28: ( ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalSpecParser.g:8325:1: ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalSpecParser.g:8325:1: ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalSpecParser.g:8325:2: () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:8325:2: ()
            // InternalSpecParser.g:8326:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Throw,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
                  
            }
            // InternalSpecParser.g:8339:1: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalSpecParser.g:8340:1: (lv_expression_2_0= ruleXExpression )
            {
            // InternalSpecParser.g:8340:1: (lv_expression_2_0= ruleXExpression )
            // InternalSpecParser.g:8341:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalSpecParser.g:8365:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalSpecParser.g:8366:2: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalSpecParser.g:8367:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalSpecParser.g:8374:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8377:28: ( ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalSpecParser.g:8378:1: ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalSpecParser.g:8378:1: ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalSpecParser.g:8378:2: () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalSpecParser.g:8378:2: ()
            // InternalSpecParser.g:8379:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Return,FollowSets000.FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
                  
            }
            // InternalSpecParser.g:8392:1: ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt167=2;
            alt167 = dfa167.predict(input);
            switch (alt167) {
                case 1 :
                    // InternalSpecParser.g:8392:2: ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:8449:1: (lv_expression_2_0= ruleXExpression )
                    // InternalSpecParser.g:8450:3: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalSpecParser.g:8474:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalSpecParser.g:8475:2: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalSpecParser.g:8476:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalSpecParser.g:8483:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8486:28: ( ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalSpecParser.g:8487:1: ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalSpecParser.g:8487:1: ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalSpecParser.g:8487:2: () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalSpecParser.g:8487:2: ()
            // InternalSpecParser.g:8488:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Try,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
                  
            }
            // InternalSpecParser.g:8501:1: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalSpecParser.g:8502:1: (lv_expression_2_0= ruleXExpression )
            {
            // InternalSpecParser.g:8502:1: (lv_expression_2_0= ruleXExpression )
            // InternalSpecParser.g:8503:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_110);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:8519:2: ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==Catch) ) {
                alt170=1;
            }
            else if ( (LA170_0==Finally) ) {
                alt170=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }
            switch (alt170) {
                case 1 :
                    // InternalSpecParser.g:8519:3: ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalSpecParser.g:8519:3: ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalSpecParser.g:8519:4: ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalSpecParser.g:8519:4: ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt168=0;
                    loop168:
                    do {
                        int alt168=2;
                        int LA168_0 = input.LA(1);

                        if ( (LA168_0==Catch) ) {
                            int LA168_2 = input.LA(2);

                            if ( (synpred332_InternalSpecParser()) ) {
                                alt168=1;
                            }


                        }


                        switch (alt168) {
                    	case 1 :
                    	    // InternalSpecParser.g:8519:5: ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalSpecParser.g:8522:1: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalSpecParser.g:8523:3: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_111);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"catchClauses",
                    	              		lv_catchClauses_3_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt168 >= 1 ) break loop168;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(168, input);
                                throw eee;
                        }
                        cnt168++;
                    } while (true);

                    // InternalSpecParser.g:8539:3: ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt169=2;
                    int LA169_0 = input.LA(1);

                    if ( (LA169_0==Finally) ) {
                        int LA169_1 = input.LA(2);

                        if ( (synpred334_InternalSpecParser()) ) {
                            alt169=1;
                        }
                    }
                    switch (alt169) {
                        case 1 :
                            // InternalSpecParser.g:8539:4: ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalSpecParser.g:8539:4: ( ( Finally )=>otherlv_4= Finally )
                            // InternalSpecParser.g:8539:5: ( Finally )=>otherlv_4= Finally
                            {
                            otherlv_4=(Token)match(input,Finally,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                                  
                            }

                            }

                            // InternalSpecParser.g:8546:2: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalSpecParser.g:8547:1: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalSpecParser.g:8547:1: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalSpecParser.g:8548:3: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finallyExpression",
                                      		lv_finallyExpression_5_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:8565:6: (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalSpecParser.g:8565:6: (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalSpecParser.g:8566:2: otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,Finally,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                          
                    }
                    // InternalSpecParser.g:8570:1: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalSpecParser.g:8571:1: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalSpecParser.g:8571:1: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalSpecParser.g:8572:3: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"finallyExpression",
                              		lv_finallyExpression_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalSpecParser.g:8596:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalSpecParser.g:8597:2: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalSpecParser.g:8598:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalSpecParser.g:8605:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8608:28: ( ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalSpecParser.g:8609:1: ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalSpecParser.g:8609:1: ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalSpecParser.g:8609:2: ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:8609:2: ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) )
            // InternalSpecParser.g:8609:3: ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis )
            {
            // InternalSpecParser.g:8614:5: ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis )
            // InternalSpecParser.g:8614:6: () otherlv_1= Synchronized otherlv_2= LeftParenthesis
            {
            // InternalSpecParser.g:8614:6: ()
            // InternalSpecParser.g:8615:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Synchronized,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }

            }


            }

            // InternalSpecParser.g:8633:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalSpecParser.g:8634:1: (lv_param_3_0= ruleXExpression )
            {
            // InternalSpecParser.g:8634:1: (lv_param_3_0= ruleXExpression )
            // InternalSpecParser.g:8635:3: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"param",
                      		lv_param_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // InternalSpecParser.g:8656:1: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalSpecParser.g:8657:1: (lv_expression_5_0= ruleXExpression )
            {
            // InternalSpecParser.g:8657:1: (lv_expression_5_0= ruleXExpression )
            // InternalSpecParser.g:8658:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalSpecParser.g:8682:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalSpecParser.g:8683:2: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalSpecParser.g:8684:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalSpecParser.g:8691:1: ruleXCatchClause returns [EObject current=null] : ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8694:28: ( ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalSpecParser.g:8695:1: ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalSpecParser.g:8695:1: ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalSpecParser.g:8695:2: ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalSpecParser.g:8695:2: ( ( Catch )=>otherlv_0= Catch )
            // InternalSpecParser.g:8695:3: ( Catch )=>otherlv_0= Catch
            {
            otherlv_0=(Token)match(input,Catch,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
                  
            }

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalSpecParser.g:8707:1: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalSpecParser.g:8708:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalSpecParser.g:8708:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalSpecParser.g:8709:3: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
                  
            }
            // InternalSpecParser.g:8730:1: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalSpecParser.g:8731:1: (lv_expression_4_0= ruleXExpression )
            {
            // InternalSpecParser.g:8731:1: (lv_expression_4_0= ruleXExpression )
            // InternalSpecParser.g:8732:3: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalSpecParser.g:8756:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalSpecParser.g:8757:1: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalSpecParser.g:8758:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalSpecParser.g:8765:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8769:6: ( (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* ) )
            // InternalSpecParser.g:8770:1: (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* )
            {
            // InternalSpecParser.g:8770:1: (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* )
            // InternalSpecParser.g:8771:5: this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_112);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ValidID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpecParser.g:8781:1: ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )*
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==FullStop) ) {
                    int LA171_2 = input.LA(2);

                    if ( (LA171_2==RULE_ID) ) {
                        int LA171_3 = input.LA(3);

                        if ( (synpred339_InternalSpecParser()) ) {
                            alt171=1;
                        }


                    }


                }


                switch (alt171) {
            	case 1 :
            	    // InternalSpecParser.g:8781:2: ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalSpecParser.g:8781:2: ( ( FullStop )=>kw= FullStop )
            	    // InternalSpecParser.g:8781:3: ( FullStop )=>kw= FullStop
            	    {
            	    kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FollowSets000.FOLLOW_112);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalSpecParser.g:8808:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalSpecParser.g:8812:1: (iv_ruleNumber= ruleNumber EOF )
            // InternalSpecParser.g:8813:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalSpecParser.g:8823:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalSpecParser.g:8828:6: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalSpecParser.g:8829:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalSpecParser.g:8829:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==RULE_HEX) ) {
                alt175=1;
            }
            else if ( ((LA175_0>=RULE_INT && LA175_0<=RULE_DECIMAL)) ) {
                alt175=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;
            }
            switch (alt175) {
                case 1 :
                    // InternalSpecParser.g:8829:6: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:8837:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalSpecParser.g:8837:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalSpecParser.g:8837:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalSpecParser.g:8837:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( (LA172_0==RULE_INT) ) {
                        alt172=1;
                    }
                    else if ( (LA172_0==RULE_DECIMAL) ) {
                        alt172=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 172, 0, input);

                        throw nvae;
                    }
                    switch (alt172) {
                        case 1 :
                            // InternalSpecParser.g:8837:12: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_112); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_INT_1);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:8845:10: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FollowSets000.FOLLOW_112); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_DECIMAL_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
                                  
                            }

                            }
                            break;

                    }

                    // InternalSpecParser.g:8852:2: (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==FullStop) ) {
                        int LA174_1 = input.LA(2);

                        if ( ((LA174_1>=RULE_INT && LA174_1<=RULE_DECIMAL)) ) {
                            alt174=1;
                        }
                    }
                    switch (alt174) {
                        case 1 :
                            // InternalSpecParser.g:8853:2: kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_113); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
                                  
                            }
                            // InternalSpecParser.g:8858:1: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt173=2;
                            int LA173_0 = input.LA(1);

                            if ( (LA173_0==RULE_INT) ) {
                                alt173=1;
                            }
                            else if ( (LA173_0==RULE_DECIMAL) ) {
                                alt173=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 173, 0, input);

                                throw nvae;
                            }
                            switch (alt173) {
                                case 1 :
                                    // InternalSpecParser.g:8858:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_INT_4);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
                                          
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSpecParser.g:8866:10: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_DECIMAL_5);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalSpecParser.g:8886:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalSpecParser.g:8887:2: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalSpecParser.g:8888:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalSpecParser.g:8895:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8898:28: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalSpecParser.g:8899:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalSpecParser.g:8899:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==RULE_ID) ) {
                alt177=1;
            }
            else if ( (LA177_0==EqualsSignGreaterThanSign||LA177_0==LeftParenthesis) ) {
                alt177=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;
            }
            switch (alt177) {
                case 1 :
                    // InternalSpecParser.g:8899:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalSpecParser.g:8899:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalSpecParser.g:8900:2: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JvmParameterizedTypeReference_0;
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalSpecParser.g:8911:1: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop176:
                    do {
                        int alt176=2;
                        int LA176_0 = input.LA(1);

                        if ( (LA176_0==LeftSquareBracket) ) {
                            int LA176_2 = input.LA(2);

                            if ( (LA176_2==RightSquareBracket) ) {
                                int LA176_3 = input.LA(3);

                                if ( (synpred344_InternalSpecParser()) ) {
                                    alt176=1;
                                }


                            }


                        }


                        switch (alt176) {
                    	case 1 :
                    	    // InternalSpecParser.g:8911:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalSpecParser.g:8912:23: ( () ruleArrayBrackets )
                    	    // InternalSpecParser.g:8912:24: () ruleArrayBrackets
                    	    {
                    	    // InternalSpecParser.g:8912:24: ()
                    	    // InternalSpecParser.g:8913:2: 
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	  /* */ 
                    	      	
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	  /* */ 
                    	      	
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop176;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:8934:2: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XFunctionTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalSpecParser.g:8953:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalSpecParser.g:8954:1: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalSpecParser.g:8955:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalSpecParser.g:8962:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= LeftSquareBracket kw= RightSquareBracket ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:8966:6: ( (kw= LeftSquareBracket kw= RightSquareBracket ) )
            // InternalSpecParser.g:8967:1: (kw= LeftSquareBracket kw= RightSquareBracket )
            {
            // InternalSpecParser.g:8967:1: (kw= LeftSquareBracket kw= RightSquareBracket )
            // InternalSpecParser.g:8968:2: kw= LeftSquareBracket kw= RightSquareBracket
            {
            kw=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
                  
            }
            kw=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalSpecParser.g:8987:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalSpecParser.g:8988:2: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalSpecParser.g:8989:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalSpecParser.g:8996:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:8999:28: ( ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalSpecParser.g:9000:1: ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalSpecParser.g:9000:1: ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalSpecParser.g:9000:2: (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalSpecParser.g:9000:2: (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==LeftParenthesis) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalSpecParser.g:9001:2: otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                          
                    }
                    // InternalSpecParser.g:9005:1: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt179=2;
                    int LA179_0 = input.LA(1);

                    if ( (LA179_0==EqualsSignGreaterThanSign||LA179_0==LeftParenthesis||LA179_0==RULE_ID) ) {
                        alt179=1;
                    }
                    switch (alt179) {
                        case 1 :
                            // InternalSpecParser.g:9005:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalSpecParser.g:9005:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalSpecParser.g:9006:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalSpecParser.g:9006:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalSpecParser.g:9007:3: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"paramTypes",
                                      		lv_paramTypes_1_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpecParser.g:9023:2: (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop178:
                            do {
                                int alt178=2;
                                int LA178_0 = input.LA(1);

                                if ( (LA178_0==Comma) ) {
                                    alt178=1;
                                }


                                switch (alt178) {
                            	case 1 :
                            	    // InternalSpecParser.g:9024:2: otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FollowSets000.FOLLOW_37); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // InternalSpecParser.g:9028:1: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalSpecParser.g:9029:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalSpecParser.g:9029:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalSpecParser.g:9030:3: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_13);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"paramTypes",
                            	              		lv_paramTypes_3_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop178;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,EqualsSignGreaterThanSign,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
                  
            }
            // InternalSpecParser.g:9056:1: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalSpecParser.g:9057:1: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalSpecParser.g:9057:1: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalSpecParser.g:9058:3: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_6_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalSpecParser.g:9082:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalSpecParser.g:9083:2: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalSpecParser.g:9084:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalSpecParser.g:9091:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9094:28: ( ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? ) )
            // InternalSpecParser.g:9095:1: ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? )
            {
            // InternalSpecParser.g:9095:1: ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? )
            // InternalSpecParser.g:9095:2: ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?
            {
            // InternalSpecParser.g:9095:2: ( ( ruleQualifiedName ) )
            // InternalSpecParser.g:9096:1: ( ruleQualifiedName )
            {
            // InternalSpecParser.g:9096:1: ( ruleQualifiedName )
            // InternalSpecParser.g:9097:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_116);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:9114:2: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?
            int alt185=2;
            alt185 = dfa185.predict(input);
            switch (alt185) {
                case 1 :
                    // InternalSpecParser.g:9114:3: ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
                    {
                    // InternalSpecParser.g:9114:3: ( ( LessThanSign )=>otherlv_1= LessThanSign )
                    // InternalSpecParser.g:9114:4: ( LessThanSign )=>otherlv_1= LessThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }

                    // InternalSpecParser.g:9121:2: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalSpecParser.g:9122:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalSpecParser.g:9122:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalSpecParser.g:9123:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:9139:2: (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop181:
                    do {
                        int alt181=2;
                        int LA181_0 = input.LA(1);

                        if ( (LA181_0==Comma) ) {
                            alt181=1;
                        }


                        switch (alt181) {
                    	case 1 :
                    	    // InternalSpecParser.g:9140:2: otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSpecParser.g:9144:1: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalSpecParser.g:9145:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalSpecParser.g:9145:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalSpecParser.g:9146:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_16);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"arguments",
                    	              		lv_arguments_4_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop181;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                          
                    }
                    // InternalSpecParser.g:9167:1: ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
                    loop184:
                    do {
                        int alt184=2;
                        int LA184_0 = input.LA(1);

                        if ( (LA184_0==FullStop) ) {
                            int LA184_2 = input.LA(2);

                            if ( (LA184_2==RULE_ID) ) {
                                int LA184_3 = input.LA(3);

                                if ( (synpred355_InternalSpecParser()) ) {
                                    alt184=1;
                                }


                            }


                        }


                        switch (alt184) {
                    	case 1 :
                    	    // InternalSpecParser.g:9167:2: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
                    	    {
                    	    // InternalSpecParser.g:9167:2: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) )
                    	    // InternalSpecParser.g:9167:3: ( ( () FullStop ) )=> ( () otherlv_7= FullStop )
                    	    {
                    	    // InternalSpecParser.g:9170:5: ( () otherlv_7= FullStop )
                    	    // InternalSpecParser.g:9170:6: () otherlv_7= FullStop
                    	    {
                    	    // InternalSpecParser.g:9170:6: ()
                    	    // InternalSpecParser.g:9171:2: 
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	  /* */ 
                    	      	
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,FullStop,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	          
                    	    }

                    	    }


                    	    }

                    	    // InternalSpecParser.g:9184:3: ( ( ruleValidID ) )
                    	    // InternalSpecParser.g:9185:1: ( ruleValidID )
                    	    {
                    	    // InternalSpecParser.g:9185:1: ( ruleValidID )
                    	    // InternalSpecParser.g:9186:3: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		  /* */ 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	              
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_117);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // InternalSpecParser.g:9203:2: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
                    	    int alt183=2;
                    	    alt183 = dfa183.predict(input);
                    	    switch (alt183) {
                    	        case 1 :
                    	            // InternalSpecParser.g:9203:3: ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign
                    	            {
                    	            // InternalSpecParser.g:9203:3: ( ( LessThanSign )=>otherlv_9= LessThanSign )
                    	            // InternalSpecParser.g:9203:4: ( LessThanSign )=>otherlv_9= LessThanSign
                    	            {
                    	            otherlv_9=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	                  
                    	            }

                    	            }

                    	            // InternalSpecParser.g:9210:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalSpecParser.g:9211:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalSpecParser.g:9211:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalSpecParser.g:9212:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_16);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"arguments",
                    	                      		lv_arguments_10_0, 
                    	                      		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }

                    	            // InternalSpecParser.g:9228:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop182:
                    	            do {
                    	                int alt182=2;
                    	                int LA182_0 = input.LA(1);

                    	                if ( (LA182_0==Comma) ) {
                    	                    alt182=1;
                    	                }


                    	                switch (alt182) {
                    	            	case 1 :
                    	            	    // InternalSpecParser.g:9229:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	          	newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	          
                    	            	    }
                    	            	    // InternalSpecParser.g:9233:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalSpecParser.g:9234:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalSpecParser.g:9234:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalSpecParser.g:9235:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {
                    	            	       
                    	            	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
                    	            	      	    
                    	            	    }
                    	            	    pushFollow(FollowSets000.FOLLOW_16);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      	        if (current==null) {
                    	            	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      	        }
                    	            	             		add(
                    	            	             			current, 
                    	            	             			"arguments",
                    	            	              		lv_arguments_12_0, 
                    	            	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      	        afterParserOrEnumRuleCall();
                    	            	      	    
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop182;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop184;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalSpecParser.g:9264:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalSpecParser.g:9265:2: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalSpecParser.g:9266:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalSpecParser.g:9273:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9276:28: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalSpecParser.g:9277:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalSpecParser.g:9277:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==EqualsSignGreaterThanSign||LA186_0==LeftParenthesis||LA186_0==RULE_ID) ) {
                alt186=1;
            }
            else if ( (LA186_0==QuestionMark) ) {
                alt186=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;
            }
            switch (alt186) {
                case 1 :
                    // InternalSpecParser.g:9278:2: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JvmTypeReference_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:9291:2: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JvmWildcardTypeReference_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalSpecParser.g:9310:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalSpecParser.g:9311:2: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalSpecParser.g:9312:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalSpecParser.g:9319:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9322:28: ( ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalSpecParser.g:9323:1: ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalSpecParser.g:9323:1: ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalSpecParser.g:9323:2: () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalSpecParser.g:9323:2: ()
            // InternalSpecParser.g:9324:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,QuestionMark,FollowSets000.FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
                  
            }
            // InternalSpecParser.g:9337:1: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt189=3;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==Extends) ) {
                alt189=1;
            }
            else if ( (LA189_0==Super) ) {
                alt189=2;
            }
            switch (alt189) {
                case 1 :
                    // InternalSpecParser.g:9337:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalSpecParser.g:9337:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalSpecParser.g:9337:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalSpecParser.g:9337:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalSpecParser.g:9338:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalSpecParser.g:9338:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalSpecParser.g:9339:3: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:9355:2: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop187:
                    do {
                        int alt187=2;
                        int LA187_0 = input.LA(1);

                        if ( (LA187_0==Ampersand) ) {
                            alt187=1;
                        }


                        switch (alt187) {
                    	case 1 :
                    	    // InternalSpecParser.g:9356:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalSpecParser.g:9356:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalSpecParser.g:9357:3: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_119);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_3_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop187;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:9374:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalSpecParser.g:9374:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalSpecParser.g:9374:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalSpecParser.g:9374:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalSpecParser.g:9375:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalSpecParser.g:9375:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalSpecParser.g:9376:3: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:9392:2: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop188:
                    do {
                        int alt188=2;
                        int LA188_0 = input.LA(1);

                        if ( (LA188_0==Ampersand) ) {
                            alt188=1;
                        }


                        switch (alt188) {
                    	case 1 :
                    	    // InternalSpecParser.g:9393:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalSpecParser.g:9393:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalSpecParser.g:9394:3: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_119);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop188;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalSpecParser.g:9418:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalSpecParser.g:9419:2: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalSpecParser.g:9420:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalSpecParser.g:9427:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9430:28: ( (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalSpecParser.g:9431:1: (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalSpecParser.g:9431:1: (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalSpecParser.g:9432:2: otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Extends,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
                  
            }
            // InternalSpecParser.g:9436:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalSpecParser.g:9437:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalSpecParser.g:9437:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalSpecParser.g:9438:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalSpecParser.g:9462:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalSpecParser.g:9463:2: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalSpecParser.g:9464:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalSpecParser.g:9471:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9474:28: ( (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalSpecParser.g:9475:1: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalSpecParser.g:9475:1: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalSpecParser.g:9476:2: otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Ampersand,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // InternalSpecParser.g:9480:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalSpecParser.g:9481:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalSpecParser.g:9481:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalSpecParser.g:9482:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalSpecParser.g:9506:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalSpecParser.g:9507:2: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalSpecParser.g:9508:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalSpecParser.g:9515:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9518:28: ( (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalSpecParser.g:9519:1: (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalSpecParser.g:9519:1: (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalSpecParser.g:9520:2: otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Super,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
                  
            }
            // InternalSpecParser.g:9524:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalSpecParser.g:9525:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalSpecParser.g:9525:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalSpecParser.g:9526:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalSpecParser.g:9550:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalSpecParser.g:9551:2: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalSpecParser.g:9552:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalSpecParser.g:9559:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9562:28: ( (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalSpecParser.g:9563:1: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalSpecParser.g:9563:1: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalSpecParser.g:9564:2: otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Ampersand,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // InternalSpecParser.g:9568:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalSpecParser.g:9569:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalSpecParser.g:9569:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalSpecParser.g:9570:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleJvmTypeParameter"
    // InternalSpecParser.g:9594:1: entryRuleJvmTypeParameter returns [EObject current=null] : iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF ;
    public final EObject entryRuleJvmTypeParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeParameter = null;


        try {
            // InternalSpecParser.g:9595:2: (iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF )
            // InternalSpecParser.g:9596:2: iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJvmTypeParameter=ruleJvmTypeParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeParameter"


    // $ANTLR start "ruleJvmTypeParameter"
    // InternalSpecParser.g:9603:1: ruleJvmTypeParameter returns [EObject current=null] : ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? ) ;
    public final EObject ruleJvmTypeParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_constraints_1_0 = null;

        EObject lv_constraints_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9606:28: ( ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? ) )
            // InternalSpecParser.g:9607:1: ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? )
            {
            // InternalSpecParser.g:9607:1: ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? )
            // InternalSpecParser.g:9607:2: ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )?
            {
            // InternalSpecParser.g:9607:2: ( (lv_name_0_0= ruleValidID ) )
            // InternalSpecParser.g:9608:1: (lv_name_0_0= ruleValidID )
            {
            // InternalSpecParser.g:9608:1: (lv_name_0_0= ruleValidID )
            // InternalSpecParser.g:9609:3: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getNameValidIDParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_120);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpecParser.g:9625:2: ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==Extends) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalSpecParser.g:9625:3: ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalSpecParser.g:9625:3: ( (lv_constraints_1_0= ruleJvmUpperBound ) )
                    // InternalSpecParser.g:9626:1: (lv_constraints_1_0= ruleJvmUpperBound )
                    {
                    // InternalSpecParser.g:9626:1: (lv_constraints_1_0= ruleJvmUpperBound )
                    // InternalSpecParser.g:9627:3: lv_constraints_1_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getConstraintsJvmUpperBoundParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_constraints_1_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_1_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:9643:2: ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )*
                    loop190:
                    do {
                        int alt190=2;
                        int LA190_0 = input.LA(1);

                        if ( (LA190_0==Ampersand) ) {
                            alt190=1;
                        }


                        switch (alt190) {
                    	case 1 :
                    	    // InternalSpecParser.g:9644:1: (lv_constraints_2_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalSpecParser.g:9644:1: (lv_constraints_2_0= ruleJvmUpperBoundAnded )
                    	    // InternalSpecParser.g:9645:3: lv_constraints_2_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_119);
                    	    lv_constraints_2_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_2_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop190;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeParameter"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalSpecParser.g:9669:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalSpecParser.g:9670:1: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalSpecParser.g:9671:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalSpecParser.g:9678:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9682:6: ( (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk ) )
            // InternalSpecParser.g:9683:1: (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk )
            {
            // InternalSpecParser.g:9683:1: (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk )
            // InternalSpecParser.g:9684:5: this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_121);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); 
                  
            }
            kw=(Token)match(input,Asterisk,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalSpecParser.g:9714:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalSpecParser.g:9715:1: (iv_ruleValidID= ruleValidID EOF )
            // InternalSpecParser.g:9716:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalSpecParser.g:9723:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // InternalSpecParser.g:9727:6: (this_ID_0= RULE_ID )
            // InternalSpecParser.g:9728:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // InternalSpecParser.g:9743:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalSpecParser.g:9744:2: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalSpecParser.g:9745:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalSpecParser.g:9752:1: ruleXImportSection returns [EObject current=null] : ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9755:28: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalSpecParser.g:9756:1: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalSpecParser.g:9756:1: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt192=0;
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==Import) ) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // InternalSpecParser.g:9757:1: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalSpecParser.g:9757:1: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalSpecParser.g:9758:3: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_123);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"importDeclarations",
            	              		lv_importDeclarations_0_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.XImportDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt192 >= 1 ) break loop192;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(192, input);
                        throw eee;
                }
                cnt192++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalSpecParser.g:9782:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalSpecParser.g:9783:2: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalSpecParser.g:9784:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalSpecParser.g:9791:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9794:28: ( (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? ) )
            // InternalSpecParser.g:9795:1: (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? )
            {
            // InternalSpecParser.g:9795:1: (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? )
            // InternalSpecParser.g:9796:2: otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )?
            {
            otherlv_0=(Token)match(input,Import,FollowSets000.FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
                  
            }
            // InternalSpecParser.g:9800:1: ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt195=3;
            alt195 = dfa195.predict(input);
            switch (alt195) {
                case 1 :
                    // InternalSpecParser.g:9800:2: ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalSpecParser.g:9800:2: ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalSpecParser.g:9800:3: ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalSpecParser.g:9800:3: ( (lv_static_1_0= Static ) )
                    // InternalSpecParser.g:9801:1: (lv_static_1_0= Static )
                    {
                    // InternalSpecParser.g:9801:1: (lv_static_1_0= Static )
                    // InternalSpecParser.g:9802:3: lv_static_1_0= Static
                    {
                    lv_static_1_0=(Token)match(input,Static,FollowSets000.FOLLOW_125); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:9816:2: ( (lv_extension_2_0= Extension ) )?
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==Extension) ) {
                        alt193=1;
                    }
                    switch (alt193) {
                        case 1 :
                            // InternalSpecParser.g:9817:1: (lv_extension_2_0= Extension )
                            {
                            // InternalSpecParser.g:9817:1: (lv_extension_2_0= Extension )
                            // InternalSpecParser.g:9818:3: lv_extension_2_0= Extension
                            {
                            lv_extension_2_0=(Token)match(input,Extension,FollowSets000.FOLLOW_125); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "extension", true, "extension");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpecParser.g:9832:3: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalSpecParser.g:9833:1: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalSpecParser.g:9833:1: ( ruleQualifiedNameInStaticImport )
                    // InternalSpecParser.g:9834:3: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_126);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpecParser.g:9851:2: ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt194=2;
                    int LA194_0 = input.LA(1);

                    if ( (LA194_0==Asterisk) ) {
                        alt194=1;
                    }
                    else if ( (LA194_0==RULE_ID) ) {
                        alt194=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 194, 0, input);

                        throw nvae;
                    }
                    switch (alt194) {
                        case 1 :
                            // InternalSpecParser.g:9851:3: ( (lv_wildcard_4_0= Asterisk ) )
                            {
                            // InternalSpecParser.g:9851:3: ( (lv_wildcard_4_0= Asterisk ) )
                            // InternalSpecParser.g:9852:1: (lv_wildcard_4_0= Asterisk )
                            {
                            // InternalSpecParser.g:9852:1: (lv_wildcard_4_0= Asterisk )
                            // InternalSpecParser.g:9853:3: lv_wildcard_4_0= Asterisk
                            {
                            lv_wildcard_4_0=(Token)match(input,Asterisk,FollowSets000.FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "wildcard", true, "*");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpecParser.g:9868:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalSpecParser.g:9868:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalSpecParser.g:9869:1: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalSpecParser.g:9869:1: (lv_memberName_5_0= ruleValidID )
                            // InternalSpecParser.g:9870:3: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_35);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"memberName",
                                      		lv_memberName_5_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpecParser.g:9887:6: ( ( ruleQualifiedName ) )
                    {
                    // InternalSpecParser.g:9887:6: ( ( ruleQualifiedName ) )
                    // InternalSpecParser.g:9888:1: ( ruleQualifiedName )
                    {
                    // InternalSpecParser.g:9888:1: ( ruleQualifiedName )
                    // InternalSpecParser.g:9889:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSpecParser.g:9907:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalSpecParser.g:9907:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalSpecParser.g:9908:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalSpecParser.g:9908:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalSpecParser.g:9909:3: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"importedNamespace",
                              		lv_importedNamespace_7_0, 
                              		"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSpecParser.g:9925:3: (otherlv_8= Semicolon )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==Semicolon) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // InternalSpecParser.g:9926:2: otherlv_8= Semicolon
                    {
                    otherlv_8=(Token)match(input,Semicolon,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalSpecParser.g:9938:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalSpecParser.g:9939:1: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalSpecParser.g:9940:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalSpecParser.g:9947:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= FullStop )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // InternalSpecParser.g:9951:6: ( (this_ValidID_0= ruleValidID kw= FullStop )+ )
            // InternalSpecParser.g:9952:1: (this_ValidID_0= ruleValidID kw= FullStop )+
            {
            // InternalSpecParser.g:9952:1: (this_ValidID_0= ruleValidID kw= FullStop )+
            int cnt197=0;
            loop197:
            do {
                int alt197=2;
                int LA197_0 = input.LA(1);

                if ( (LA197_0==RULE_ID) ) {
                    int LA197_2 = input.LA(2);

                    if ( (LA197_2==FullStop) ) {
                        alt197=1;
                    }


                }


                switch (alt197) {
            	case 1 :
            	    // InternalSpecParser.g:9953:5: this_ValidID_0= ruleValidID kw= FullStop
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); 
            	          
            	    }
            	    pushFollow(FollowSets000.FOLLOW_121);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }
            	    kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_127); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt197 >= 1 ) break loop197;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(197, input);
                        throw eee;
                }
                cnt197++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"

    // $ANTLR start synpred28_InternalSpecParser
    public final void synpred28_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:738:4: ( ( RULE_STRING ) )
        // InternalSpecParser.g:739:1: ( RULE_STRING )
        {
        // InternalSpecParser.g:739:1: ( RULE_STRING )
        // InternalSpecParser.g:740:1: RULE_STRING
        {
        match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred28_InternalSpecParser

    // $ANTLR start synpred32_InternalSpecParser
    public final void synpred32_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:816:4: ( ( RULE_STRING ) )
        // InternalSpecParser.g:817:1: ( RULE_STRING )
        {
        // InternalSpecParser.g:817:1: ( RULE_STRING )
        // InternalSpecParser.g:818:1: RULE_STRING
        {
        match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalSpecParser

    // $ANTLR start synpred81_InternalSpecParser
    public final void synpred81_InternalSpecParser_fragment() throws RecognitionException {   
        EObject this_XForLoopExpression_7 = null;


        // InternalSpecParser.g:1855:6: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) )
        // InternalSpecParser.g:1855:6: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
        {
        // InternalSpecParser.g:1855:6: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
        // InternalSpecParser.g:1855:7: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
        {
        pushFollow(FollowSets000.FOLLOW_2);
        this_XForLoopExpression_7=ruleXForLoopExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred81_InternalSpecParser

    // $ANTLR start synpred82_InternalSpecParser
    public final void synpred82_InternalSpecParser_fragment() throws RecognitionException {   
        EObject this_XBasicForLoopExpression_8 = null;


        // InternalSpecParser.g:1880:2: (this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression )
        // InternalSpecParser.g:1880:2: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred82_InternalSpecParser

    // $ANTLR start synpred90_InternalSpecParser
    public final void synpred90_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:2049:5: ( ( ruleXOtherOperatorExpression ) )
        // InternalSpecParser.g:2050:1: ( ruleXOtherOperatorExpression )
        {
        // InternalSpecParser.g:2050:1: ( ruleXOtherOperatorExpression )
        // InternalSpecParser.g:2051:1: ruleXOtherOperatorExpression
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleXOtherOperatorExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred90_InternalSpecParser

    // $ANTLR start synpred91_InternalSpecParser
    public final void synpred91_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_3_0 = null;


        // InternalSpecParser.g:2015:2: ( ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? ) )
        // InternalSpecParser.g:2015:2: ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? )
        {
        // InternalSpecParser.g:2015:2: ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? )
        // InternalSpecParser.g:2015:3: ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )?
        {
        // InternalSpecParser.g:2015:3: ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) )
        // InternalSpecParser.g:2015:4: ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) )
        {
        // InternalSpecParser.g:2021:6: ( () ( ( ruleShould ) ) )
        // InternalSpecParser.g:2021:7: () ( ( ruleShould ) )
        {
        // InternalSpecParser.g:2021:7: ()
        // InternalSpecParser.g:2022:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:2030:2: ( ( ruleShould ) )
        // InternalSpecParser.g:2031:1: ( ruleShould )
        {
        // InternalSpecParser.g:2031:1: ( ruleShould )
        // InternalSpecParser.g:2032:3: ruleShould
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_48);
        ruleShould();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:2049:4: ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )?
        int alt242=2;
        alt242 = dfa242.predict(input);
        switch (alt242) {
            case 1 :
                // InternalSpecParser.g:2049:5: ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression )
                {
                // InternalSpecParser.g:2054:1: (lv_rightOperand_3_0= ruleXOtherOperatorExpression )
                // InternalSpecParser.g:2055:3: lv_rightOperand_3_0= ruleXOtherOperatorExpression
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_0_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_rightOperand_3_0=ruleXOtherOperatorExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred91_InternalSpecParser

    // $ANTLR start synpred95_InternalSpecParser
    public final void synpred95_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_type_8_0 = null;


        // InternalSpecParser.g:2072:6: ( ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) ) )
        // InternalSpecParser.g:2072:6: ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) )
        {
        // InternalSpecParser.g:2072:6: ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) )
        // InternalSpecParser.g:2072:7: ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) )
        {
        // InternalSpecParser.g:2072:7: ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) )
        // InternalSpecParser.g:2072:8: ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) )
        {
        // InternalSpecParser.g:2080:6: ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) )
        // InternalSpecParser.g:2080:7: () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws )
        {
        // InternalSpecParser.g:2080:7: ()
        // InternalSpecParser.g:2081:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:2089:2: ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws )
        int alt244=2;
        int LA244_0 = input.LA(1);

        if ( (LA244_0==Should) ) {
            alt244=1;
        }
        else if ( (LA244_0==Throws) ) {
            alt244=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 244, 0, input);

            throw nvae;
        }
        switch (alt244) {
            case 1 :
                // InternalSpecParser.g:2089:3: (otherlv_5= Should otherlv_6= Throw )
                {
                // InternalSpecParser.g:2089:3: (otherlv_5= Should otherlv_6= Throw )
                // InternalSpecParser.g:2090:2: otherlv_5= Should otherlv_6= Throw
                {
                otherlv_5=(Token)match(input,Should,FollowSets000.FOLLOW_45); if (state.failed) return ;
                otherlv_6=(Token)match(input,Throw,FollowSets000.FOLLOW_37); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                // InternalSpecParser.g:2101:2: otherlv_7= Throws
                {
                otherlv_7=(Token)match(input,Throws,FollowSets000.FOLLOW_37); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalSpecParser.g:2105:4: ( (lv_type_8_0= ruleJvmTypeReference ) )
        // InternalSpecParser.g:2106:1: (lv_type_8_0= ruleJvmTypeReference )
        {
        // InternalSpecParser.g:2106:1: (lv_type_8_0= ruleJvmTypeReference )
        // InternalSpecParser.g:2107:3: lv_type_8_0= ruleJvmTypeReference
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_type_8_0=ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred95_InternalSpecParser

    // $ANTLR start synpred97_InternalSpecParser
    public final void synpred97_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        EObject lv_type_11_0 = null;


        // InternalSpecParser.g:2124:6: ( ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) ) )
        // InternalSpecParser.g:2124:6: ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) )
        {
        // InternalSpecParser.g:2124:6: ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) )
        // InternalSpecParser.g:2124:7: ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) )
        {
        // InternalSpecParser.g:2124:7: ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) )
        // InternalSpecParser.g:2124:8: ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof )
        {
        // InternalSpecParser.g:2127:5: ( () otherlv_10= Instanceof )
        // InternalSpecParser.g:2127:6: () otherlv_10= Instanceof
        {
        // InternalSpecParser.g:2127:6: ()
        // InternalSpecParser.g:2128:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_10=(Token)match(input,Instanceof,FollowSets000.FOLLOW_37); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:2141:3: ( (lv_type_11_0= ruleJvmTypeReference ) )
        // InternalSpecParser.g:2142:1: (lv_type_11_0= ruleJvmTypeReference )
        {
        // InternalSpecParser.g:2142:1: (lv_type_11_0= ruleJvmTypeReference )
        // InternalSpecParser.g:2143:3: lv_type_11_0= ruleJvmTypeReference
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_2_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_type_11_0=ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred97_InternalSpecParser

    // $ANTLR start synpred99_InternalSpecParser
    public final void synpred99_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_14_0 = null;


        // InternalSpecParser.g:2160:6: ( ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) ) )
        // InternalSpecParser.g:2160:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) )
        {
        // InternalSpecParser.g:2160:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) )
        // InternalSpecParser.g:2160:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) )
        {
        // InternalSpecParser.g:2160:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
        // InternalSpecParser.g:2160:8: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
        {
        // InternalSpecParser.g:2166:6: ( () ( ( ruleOpCompare ) ) )
        // InternalSpecParser.g:2166:7: () ( ( ruleOpCompare ) )
        {
        // InternalSpecParser.g:2166:7: ()
        // InternalSpecParser.g:2167:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:2175:2: ( ( ruleOpCompare ) )
        // InternalSpecParser.g:2176:1: ( ruleOpCompare )
        {
        // InternalSpecParser.g:2176:1: ( ruleOpCompare )
        // InternalSpecParser.g:2177:3: ruleOpCompare
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:2194:4: ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) )
        // InternalSpecParser.g:2195:1: (lv_rightOperand_14_0= ruleXOtherOperatorExpression )
        {
        // InternalSpecParser.g:2195:1: (lv_rightOperand_14_0= ruleXOtherOperatorExpression )
        // InternalSpecParser.g:2196:3: lv_rightOperand_14_0= ruleXOtherOperatorExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_3_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_rightOperand_14_0=ruleXOtherOperatorExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred99_InternalSpecParser

    // $ANTLR start synpred130_InternalSpecParser
    public final void synpred130_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_elementValuePairs_4_0 = null;

        EObject lv_elementValuePairs_6_0 = null;


        // InternalSpecParser.g:3293:3: ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) )
        // InternalSpecParser.g:3293:3: ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
        {
        // InternalSpecParser.g:3293:3: ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
        // InternalSpecParser.g:3293:4: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
        {
        // InternalSpecParser.g:3293:4: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
        // InternalSpecParser.g:3293:5: ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
        {
        // InternalSpecParser.g:3301:1: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
        // InternalSpecParser.g:3302:3: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_59);
        lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:3318:2: (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
        loop247:
        do {
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==Comma) ) {
                alt247=1;
            }


            switch (alt247) {
        	case 1 :
        	    // InternalSpecParser.g:3319:2: otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
        	    {
        	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_3); if (state.failed) return ;
        	    // InternalSpecParser.g:3323:1: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
        	    // InternalSpecParser.g:3323:2: ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
        	    {
        	    // InternalSpecParser.g:3331:1: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
        	    // InternalSpecParser.g:3332:3: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_59);
        	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop247;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred130_InternalSpecParser

    // $ANTLR start synpred131_InternalSpecParser
    public final void synpred131_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_value_7_0 = null;


        // InternalSpecParser.g:3349:6: ( ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )
        // InternalSpecParser.g:3349:6: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
        {
        // InternalSpecParser.g:3349:6: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
        // InternalSpecParser.g:3350:1: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
        {
        // InternalSpecParser.g:3350:1: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
        // InternalSpecParser.g:3351:3: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred131_InternalSpecParser

    // $ANTLR start synpred132_InternalSpecParser
    public final void synpred132_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_elementValuePairs_4_0 = null;

        EObject lv_elementValuePairs_6_0 = null;

        EObject lv_value_7_0 = null;


        // InternalSpecParser.g:3286:3: ( ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis )
        // InternalSpecParser.g:3286:3: ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis
        {
        // InternalSpecParser.g:3286:3: ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis )
        // InternalSpecParser.g:3286:4: ( LeftParenthesis )=>otherlv_3= LeftParenthesis
        {
        otherlv_3=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_52); if (state.failed) return ;

        }

        // InternalSpecParser.g:3293:2: ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?
        int alt249=3;
        alt249 = dfa249.predict(input);
        switch (alt249) {
            case 1 :
                // InternalSpecParser.g:3293:3: ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                {
                // InternalSpecParser.g:3293:3: ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                // InternalSpecParser.g:3293:4: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                {
                // InternalSpecParser.g:3293:4: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
                // InternalSpecParser.g:3293:5: ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                {
                // InternalSpecParser.g:3301:1: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                // InternalSpecParser.g:3302:3: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_13);
                lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:3318:2: (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                loop248:
                do {
                    int alt248=2;
                    int LA248_0 = input.LA(1);

                    if ( (LA248_0==Comma) ) {
                        alt248=1;
                    }


                    switch (alt248) {
                	case 1 :
                	    // InternalSpecParser.g:3319:2: otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                	    {
                	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_3); if (state.failed) return ;
                	    // InternalSpecParser.g:3323:1: ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                	    // InternalSpecParser.g:3323:2: ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                	    {
                	    // InternalSpecParser.g:3331:1: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                	    // InternalSpecParser.g:3332:3: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_13);
                	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop248;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalSpecParser.g:3349:6: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                {
                // InternalSpecParser.g:3349:6: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                // InternalSpecParser.g:3350:1: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                {
                // InternalSpecParser.g:3350:1: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                // InternalSpecParser.g:3351:3: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_53);
                lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_8=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_InternalSpecParser

    // $ANTLR start synpred137_InternalSpecParser
    public final void synpred137_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


        // InternalSpecParser.g:3463:2: ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) )
        // InternalSpecParser.g:3463:2: ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket )
        {
        // InternalSpecParser.g:3463:2: ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket )
        // InternalSpecParser.g:3463:3: ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket
        {
        // InternalSpecParser.g:3463:3: ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) )
        // InternalSpecParser.g:3463:4: ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket )
        {
        // InternalSpecParser.g:3468:5: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket )
        // InternalSpecParser.g:3468:6: () otherlv_1= NumberSign otherlv_2= LeftSquareBracket
        {
        // InternalSpecParser.g:3468:6: ()
        // InternalSpecParser.g:3469:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_56); if (state.failed) return ;
        otherlv_2=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_57); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:3487:3: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
        int alt252=2;
        int LA252_0 = input.LA(1);

        if ( (LA252_0==Synchronized||LA252_0==Extension||LA252_0==Extends||LA252_0==Assert||LA252_0==Import||LA252_0==Return||(LA252_0>=Static && LA252_0<=Switch)||LA252_0==Typeof||LA252_0==False||(LA252_0>=Super && LA252_0<=While)||(LA252_0>=Null && LA252_0<=True)||(LA252_0>=For && LA252_0<=New)||LA252_0==Try||(LA252_0>=Do && LA252_0<=If)||(LA252_0>=ExclamationMark && LA252_0<=NumberSign)||LA252_0==LeftParenthesis||LA252_0==PlusSign||LA252_0==HyphenMinus||LA252_0==LessThanSign||(LA252_0>=CommercialAt && LA252_0<=LeftSquareBracket)||LA252_0==LeftCurlyBracket||LA252_0==RULE_ID||(LA252_0>=RULE_RICH_TEXT && LA252_0<=RULE_RICH_TEXT_START)||(LA252_0>=RULE_HEX && LA252_0<=RULE_STRING)) ) {
            alt252=1;
        }
        switch (alt252) {
            case 1 :
                // InternalSpecParser.g:3487:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                {
                // InternalSpecParser.g:3487:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                // InternalSpecParser.g:3488:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                {
                // InternalSpecParser.g:3488:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                // InternalSpecParser.g:3489:3: lv_elements_3_0= ruleXAnnotationOrExpression
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_58);
                lv_elements_3_0=ruleXAnnotationOrExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:3505:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                loop251:
                do {
                    int alt251=2;
                    int LA251_0 = input.LA(1);

                    if ( (LA251_0==Comma) ) {
                        alt251=1;
                    }


                    switch (alt251) {
                	case 1 :
                	    // InternalSpecParser.g:3506:2: otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                	    {
                	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_55); if (state.failed) return ;
                	    // InternalSpecParser.g:3510:1: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                	    // InternalSpecParser.g:3511:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                	    {
                	    // InternalSpecParser.g:3511:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                	    // InternalSpecParser.g:3512:3: lv_elements_5_0= ruleXAnnotationOrExpression
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_58);
                	    lv_elements_5_0=ruleXAnnotationOrExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop251;
                    }
                } while (true);


                }
                break;

        }

        otherlv_6=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred137_InternalSpecParser

    // $ANTLR start synpred143_InternalSpecParser
    public final void synpred143_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


        // InternalSpecParser.g:3599:2: ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) )
        // InternalSpecParser.g:3599:2: ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket )
        {
        // InternalSpecParser.g:3599:2: ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket )
        // InternalSpecParser.g:3599:3: ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket
        {
        // InternalSpecParser.g:3599:3: ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) )
        // InternalSpecParser.g:3599:4: ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket )
        {
        // InternalSpecParser.g:3604:5: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket )
        // InternalSpecParser.g:3604:6: () otherlv_1= NumberSign otherlv_2= LeftSquareBracket
        {
        // InternalSpecParser.g:3604:6: ()
        // InternalSpecParser.g:3605:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_56); if (state.failed) return ;
        otherlv_2=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_57); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:3623:3: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
        int alt256=2;
        int LA256_0 = input.LA(1);

        if ( (LA256_0==Synchronized||LA256_0==Extension||LA256_0==Extends||LA256_0==Assert||LA256_0==Import||LA256_0==Return||(LA256_0>=Static && LA256_0<=Switch)||LA256_0==Typeof||LA256_0==False||(LA256_0>=Super && LA256_0<=While)||(LA256_0>=Null && LA256_0<=True)||(LA256_0>=For && LA256_0<=New)||LA256_0==Try||(LA256_0>=Do && LA256_0<=If)||(LA256_0>=ExclamationMark && LA256_0<=NumberSign)||LA256_0==LeftParenthesis||LA256_0==PlusSign||LA256_0==HyphenMinus||LA256_0==LessThanSign||(LA256_0>=CommercialAt && LA256_0<=LeftSquareBracket)||LA256_0==LeftCurlyBracket||LA256_0==RULE_ID||(LA256_0>=RULE_RICH_TEXT && LA256_0<=RULE_RICH_TEXT_START)||(LA256_0>=RULE_HEX && LA256_0<=RULE_STRING)) ) {
            alt256=1;
        }
        switch (alt256) {
            case 1 :
                // InternalSpecParser.g:3623:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                {
                // InternalSpecParser.g:3623:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                // InternalSpecParser.g:3624:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                {
                // InternalSpecParser.g:3624:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                // InternalSpecParser.g:3625:3: lv_elements_3_0= ruleXAnnotationOrExpression
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_58);
                lv_elements_3_0=ruleXAnnotationOrExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:3641:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                loop255:
                do {
                    int alt255=2;
                    int LA255_0 = input.LA(1);

                    if ( (LA255_0==Comma) ) {
                        alt255=1;
                    }


                    switch (alt255) {
                	case 1 :
                	    // InternalSpecParser.g:3642:2: otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                	    {
                	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_55); if (state.failed) return ;
                	    // InternalSpecParser.g:3646:1: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                	    // InternalSpecParser.g:3647:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                	    {
                	    // InternalSpecParser.g:3647:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                	    // InternalSpecParser.g:3648:3: lv_elements_5_0= ruleXAnnotationOrExpression
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_58);
                	    lv_elements_5_0=ruleXAnnotationOrExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop255;
                    }
                } while (true);


                }
                break;

        }

        otherlv_6=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred143_InternalSpecParser

    // $ANTLR start synpred147_InternalSpecParser
    public final void synpred147_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_7_0 = null;


        // InternalSpecParser.g:3852:2: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )
        // InternalSpecParser.g:3852:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
        {
        // InternalSpecParser.g:3852:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalSpecParser.g:3852:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalSpecParser.g:3858:6: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalSpecParser.g:3858:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalSpecParser.g:3858:7: ()
        // InternalSpecParser.g:3859:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:3867:2: ( ( ruleOpMultiAssign ) )
        // InternalSpecParser.g:3868:1: ( ruleOpMultiAssign )
        {
        // InternalSpecParser.g:3868:1: ( ruleOpMultiAssign )
        // InternalSpecParser.g:3869:3: ruleOpMultiAssign
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:3886:4: ( (lv_rightOperand_7_0= ruleXAssignment ) )
        // InternalSpecParser.g:3887:1: (lv_rightOperand_7_0= ruleXAssignment )
        {
        // InternalSpecParser.g:3887:1: (lv_rightOperand_7_0= ruleXAssignment )
        // InternalSpecParser.g:3888:3: lv_rightOperand_7_0= ruleXAssignment
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_rightOperand_7_0=ruleXAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred147_InternalSpecParser

    // $ANTLR start synpred156_InternalSpecParser
    public final void synpred156_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_3_0 = null;


        // InternalSpecParser.g:4059:2: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )
        // InternalSpecParser.g:4059:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
        {
        // InternalSpecParser.g:4059:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
        // InternalSpecParser.g:4059:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
        {
        // InternalSpecParser.g:4065:6: ( () ( ( ruleOpOr ) ) )
        // InternalSpecParser.g:4065:7: () ( ( ruleOpOr ) )
        {
        // InternalSpecParser.g:4065:7: ()
        // InternalSpecParser.g:4066:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:4074:2: ( ( ruleOpOr ) )
        // InternalSpecParser.g:4075:1: ( ruleOpOr )
        {
        // InternalSpecParser.g:4075:1: ( ruleOpOr )
        // InternalSpecParser.g:4076:3: ruleOpOr
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:4093:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
        // InternalSpecParser.g:4094:1: (lv_rightOperand_3_0= ruleXAndExpression )
        {
        // InternalSpecParser.g:4094:1: (lv_rightOperand_3_0= ruleXAndExpression )
        // InternalSpecParser.g:4095:3: lv_rightOperand_3_0= ruleXAndExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_rightOperand_3_0=ruleXAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred156_InternalSpecParser

    // $ANTLR start synpred158_InternalSpecParser
    public final void synpred158_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_3_0 = null;


        // InternalSpecParser.g:4172:2: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )
        // InternalSpecParser.g:4172:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
        {
        // InternalSpecParser.g:4172:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
        // InternalSpecParser.g:4172:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
        {
        // InternalSpecParser.g:4178:6: ( () ( ( ruleOpAnd ) ) )
        // InternalSpecParser.g:4178:7: () ( ( ruleOpAnd ) )
        {
        // InternalSpecParser.g:4178:7: ()
        // InternalSpecParser.g:4179:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:4187:2: ( ( ruleOpAnd ) )
        // InternalSpecParser.g:4188:1: ( ruleOpAnd )
        {
        // InternalSpecParser.g:4188:1: ( ruleOpAnd )
        // InternalSpecParser.g:4189:3: ruleOpAnd
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:4206:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
        // InternalSpecParser.g:4207:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
        {
        // InternalSpecParser.g:4207:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
        // InternalSpecParser.g:4208:3: lv_rightOperand_3_0= ruleXEqualityExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_rightOperand_3_0=ruleXEqualityExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred158_InternalSpecParser

    // $ANTLR start synpred160_InternalSpecParser
    public final void synpred160_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_3_0 = null;


        // InternalSpecParser.g:4285:2: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )
        // InternalSpecParser.g:4285:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
        {
        // InternalSpecParser.g:4285:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
        // InternalSpecParser.g:4285:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
        {
        // InternalSpecParser.g:4291:6: ( () ( ( ruleOpEquality ) ) )
        // InternalSpecParser.g:4291:7: () ( ( ruleOpEquality ) )
        {
        // InternalSpecParser.g:4291:7: ()
        // InternalSpecParser.g:4292:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:4300:2: ( ( ruleOpEquality ) )
        // InternalSpecParser.g:4301:1: ( ruleOpEquality )
        {
        // InternalSpecParser.g:4301:1: ( ruleOpEquality )
        // InternalSpecParser.g:4302:3: ruleOpEquality
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:4319:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
        // InternalSpecParser.g:4320:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
        {
        // InternalSpecParser.g:4320:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
        // InternalSpecParser.g:4321:3: lv_rightOperand_3_0= ruleXRelationalExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_rightOperand_3_0=ruleXRelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred160_InternalSpecParser

    // $ANTLR start synpred168_InternalSpecParser
    public final void synpred168_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_3_0 = null;


        // InternalSpecParser.g:4474:2: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )
        // InternalSpecParser.g:4474:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
        {
        // InternalSpecParser.g:4474:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
        // InternalSpecParser.g:4474:3: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
        {
        // InternalSpecParser.g:4480:6: ( () ( ( ruleOpOther ) ) )
        // InternalSpecParser.g:4480:7: () ( ( ruleOpOther ) )
        {
        // InternalSpecParser.g:4480:7: ()
        // InternalSpecParser.g:4481:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:4489:2: ( ( ruleOpOther ) )
        // InternalSpecParser.g:4490:1: ( ruleOpOther )
        {
        // InternalSpecParser.g:4490:1: ( ruleOpOther )
        // InternalSpecParser.g:4491:3: ruleOpOther
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:4508:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
        // InternalSpecParser.g:4509:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
        {
        // InternalSpecParser.g:4509:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
        // InternalSpecParser.g:4510:3: lv_rightOperand_3_0= ruleXAdditiveExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_rightOperand_3_0=ruleXAdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred168_InternalSpecParser

    // $ANTLR start synpred178_InternalSpecParser
    public final void synpred178_InternalSpecParser_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalSpecParser.g:4625:2: ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) )
        // InternalSpecParser.g:4625:2: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
        {
        // InternalSpecParser.g:4625:2: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
        // InternalSpecParser.g:4625:3: ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign )
        {
        // InternalSpecParser.g:4629:5: (kw= LessThanSign kw= LessThanSign )
        // InternalSpecParser.g:4630:2: kw= LessThanSign kw= LessThanSign
        {
        kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_61); if (state.failed) return ;
        kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred178_InternalSpecParser

    // $ANTLR start synpred179_InternalSpecParser
    public final void synpred179_InternalSpecParser_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalSpecParser.g:4643:2: (kw= LessThanSign )
        // InternalSpecParser.g:4643:2: kw= LessThanSign
        {
        kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred179_InternalSpecParser

    // $ANTLR start synpred183_InternalSpecParser
    public final void synpred183_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_3_0 = null;


        // InternalSpecParser.g:4702:2: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )
        // InternalSpecParser.g:4702:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
        {
        // InternalSpecParser.g:4702:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
        // InternalSpecParser.g:4702:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
        {
        // InternalSpecParser.g:4708:6: ( () ( ( ruleOpAdd ) ) )
        // InternalSpecParser.g:4708:7: () ( ( ruleOpAdd ) )
        {
        // InternalSpecParser.g:4708:7: ()
        // InternalSpecParser.g:4709:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:4717:2: ( ( ruleOpAdd ) )
        // InternalSpecParser.g:4718:1: ( ruleOpAdd )
        {
        // InternalSpecParser.g:4718:1: ( ruleOpAdd )
        // InternalSpecParser.g:4719:3: ruleOpAdd
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:4736:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
        // InternalSpecParser.g:4737:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
        {
        // InternalSpecParser.g:4737:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
        // InternalSpecParser.g:4738:3: lv_rightOperand_3_0= ruleXMultiplicativeExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_rightOperand_3_0=ruleXMultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred183_InternalSpecParser

    // $ANTLR start synpred186_InternalSpecParser
    public final void synpred186_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_rightOperand_3_0 = null;


        // InternalSpecParser.g:4822:2: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )
        // InternalSpecParser.g:4822:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
        {
        // InternalSpecParser.g:4822:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
        // InternalSpecParser.g:4822:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
        {
        // InternalSpecParser.g:4828:6: ( () ( ( ruleOpMulti ) ) )
        // InternalSpecParser.g:4828:7: () ( ( ruleOpMulti ) )
        {
        // InternalSpecParser.g:4828:7: ()
        // InternalSpecParser.g:4829:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:4837:2: ( ( ruleOpMulti ) )
        // InternalSpecParser.g:4838:1: ( ruleOpMulti )
        {
        // InternalSpecParser.g:4838:1: ( ruleOpMulti )
        // InternalSpecParser.g:4839:3: ruleOpMulti
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }

        // InternalSpecParser.g:4856:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
        // InternalSpecParser.g:4857:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
        {
        // InternalSpecParser.g:4857:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
        // InternalSpecParser.g:4858:3: lv_rightOperand_3_0= ruleXUnaryOperation
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_rightOperand_3_0=ruleXUnaryOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred186_InternalSpecParser

    // $ANTLR start synpred194_InternalSpecParser
    public final void synpred194_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_type_3_0 = null;


        // InternalSpecParser.g:5078:2: ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
        // InternalSpecParser.g:5078:2: ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
        {
        // InternalSpecParser.g:5078:2: ( ( ( () As ) )=> ( () otherlv_2= As ) )
        // InternalSpecParser.g:5078:3: ( ( () As ) )=> ( () otherlv_2= As )
        {
        // InternalSpecParser.g:5081:5: ( () otherlv_2= As )
        // InternalSpecParser.g:5081:6: () otherlv_2= As
        {
        // InternalSpecParser.g:5081:6: ()
        // InternalSpecParser.g:5082:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_2=(Token)match(input,As,FollowSets000.FOLLOW_37); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:5095:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
        // InternalSpecParser.g:5096:1: (lv_type_3_0= ruleJvmTypeReference )
        {
        // InternalSpecParser.g:5096:1: (lv_type_3_0= ruleJvmTypeReference )
        // InternalSpecParser.g:5097:3: lv_type_3_0= ruleJvmTypeReference
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_type_3_0=ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred194_InternalSpecParser

    // $ANTLR start synpred195_InternalSpecParser
    public final void synpred195_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:5146:2: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalSpecParser.g:5146:3: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalSpecParser.g:5146:3: ( () ( ( ruleOpPostfix ) ) )
        // InternalSpecParser.g:5146:4: () ( ( ruleOpPostfix ) )
        {
        // InternalSpecParser.g:5146:4: ()
        // InternalSpecParser.g:5147:1: 
        {
        }

        // InternalSpecParser.g:5147:2: ( ( ruleOpPostfix ) )
        // InternalSpecParser.g:5148:1: ( ruleOpPostfix )
        {
        // InternalSpecParser.g:5148:1: ( ruleOpPostfix )
        // InternalSpecParser.g:5149:3: ruleOpPostfix
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred195_InternalSpecParser

    // $ANTLR start synpred200_InternalSpecParser
    public final void synpred200_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        EObject lv_value_6_0 = null;


        // InternalSpecParser.g:5248:2: ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) )
        // InternalSpecParser.g:5248:2: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
        {
        // InternalSpecParser.g:5248:2: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
        // InternalSpecParser.g:5248:3: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
        {
        // InternalSpecParser.g:5248:3: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalSpecParser.g:5248:4: ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalSpecParser.g:5264:24: ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalSpecParser.g:5264:25: () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalSpecParser.g:5264:25: ()
        // InternalSpecParser.g:5265:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:5273:2: (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) )
        int alt260=2;
        int LA260_0 = input.LA(1);

        if ( (LA260_0==FullStop) ) {
            alt260=1;
        }
        else if ( (LA260_0==ColonColon) ) {
            alt260=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 260, 0, input);

            throw nvae;
        }
        switch (alt260) {
            case 1 :
                // InternalSpecParser.g:5274:2: otherlv_2= FullStop
                {
                otherlv_2=(Token)match(input,FullStop,FollowSets000.FOLLOW_76); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSpecParser.g:5279:6: ( (lv_explicitStatic_3_0= ColonColon ) )
                {
                // InternalSpecParser.g:5279:6: ( (lv_explicitStatic_3_0= ColonColon ) )
                // InternalSpecParser.g:5280:1: (lv_explicitStatic_3_0= ColonColon )
                {
                // InternalSpecParser.g:5280:1: (lv_explicitStatic_3_0= ColonColon )
                // InternalSpecParser.g:5281:3: lv_explicitStatic_3_0= ColonColon
                {
                lv_explicitStatic_3_0=(Token)match(input,ColonColon,FollowSets000.FOLLOW_76); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSpecParser.g:5295:3: ( ( ruleFeatureCallID ) )
        // InternalSpecParser.g:5296:1: ( ruleFeatureCallID )
        {
        // InternalSpecParser.g:5296:1: ( ruleFeatureCallID )
        // InternalSpecParser.g:5297:3: ruleFeatureCallID
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_54);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FollowSets000.FOLLOW_22);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:5325:3: ( (lv_value_6_0= ruleXAssignment ) )
        // InternalSpecParser.g:5326:1: (lv_value_6_0= ruleXAssignment )
        {
        // InternalSpecParser.g:5326:1: (lv_value_6_0= ruleXAssignment )
        // InternalSpecParser.g:5327:3: lv_value_6_0= ruleXAssignment
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_value_6_0=ruleXAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred200_InternalSpecParser

    // $ANTLR start synpred212_InternalSpecParser
    public final void synpred212_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_memberCallArguments_18_0 = null;


        // InternalSpecParser.g:5504:3: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) )
        // InternalSpecParser.g:5504:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
        {
        // InternalSpecParser.g:5504:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
        // InternalSpecParser.g:5504:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
        {
        // InternalSpecParser.g:5523:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
        // InternalSpecParser.g:5524:3: lv_memberCallArguments_18_0= ruleXShortClosure
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_memberCallArguments_18_0=ruleXShortClosure();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred212_InternalSpecParser

    // $ANTLR start synpred214_InternalSpecParser
    public final void synpred214_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;


        // InternalSpecParser.g:5541:6: ( ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )
        // InternalSpecParser.g:5541:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
        {
        // InternalSpecParser.g:5541:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
        // InternalSpecParser.g:5541:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
        {
        // InternalSpecParser.g:5541:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
        // InternalSpecParser.g:5542:1: (lv_memberCallArguments_19_0= ruleXExpression )
        {
        // InternalSpecParser.g:5542:1: (lv_memberCallArguments_19_0= ruleXExpression )
        // InternalSpecParser.g:5543:3: lv_memberCallArguments_19_0= ruleXExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_59);
        lv_memberCallArguments_19_0=ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:5559:2: (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
        loop266:
        do {
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==Comma) ) {
                alt266=1;
            }


            switch (alt266) {
        	case 1 :
        	    // InternalSpecParser.g:5560:2: otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) )
        	    {
        	    otherlv_20=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return ;
        	    // InternalSpecParser.g:5564:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
        	    // InternalSpecParser.g:5565:1: (lv_memberCallArguments_21_0= ruleXExpression )
        	    {
        	    // InternalSpecParser.g:5565:1: (lv_memberCallArguments_21_0= ruleXExpression )
        	    // InternalSpecParser.g:5566:3: lv_memberCallArguments_21_0= ruleXExpression
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_59);
        	    lv_memberCallArguments_21_0=ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop266;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred214_InternalSpecParser

    // $ANTLR start synpred215_InternalSpecParser
    public final void synpred215_InternalSpecParser_fragment() throws RecognitionException {   
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;


        // InternalSpecParser.g:5481:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )
        // InternalSpecParser.g:5481:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis
        {
        // InternalSpecParser.g:5481:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) )
        // InternalSpecParser.g:5481:4: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis )
        {
        // InternalSpecParser.g:5489:1: (lv_explicitOperationCall_17_0= LeftParenthesis )
        // InternalSpecParser.g:5490:3: lv_explicitOperationCall_17_0= LeftParenthesis
        {
        lv_explicitOperationCall_17_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_80); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:5504:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
        int alt268=3;
        alt268 = dfa268.predict(input);
        switch (alt268) {
            case 1 :
                // InternalSpecParser.g:5504:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
                {
                // InternalSpecParser.g:5504:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
                // InternalSpecParser.g:5504:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
                {
                // InternalSpecParser.g:5523:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
                // InternalSpecParser.g:5524:3: lv_memberCallArguments_18_0= ruleXShortClosure
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_53);
                lv_memberCallArguments_18_0=ruleXShortClosure();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSpecParser.g:5541:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
                {
                // InternalSpecParser.g:5541:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
                // InternalSpecParser.g:5541:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
                {
                // InternalSpecParser.g:5541:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
                // InternalSpecParser.g:5542:1: (lv_memberCallArguments_19_0= ruleXExpression )
                {
                // InternalSpecParser.g:5542:1: (lv_memberCallArguments_19_0= ruleXExpression )
                // InternalSpecParser.g:5543:3: lv_memberCallArguments_19_0= ruleXExpression
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_13);
                lv_memberCallArguments_19_0=ruleXExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:5559:2: (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
                loop267:
                do {
                    int alt267=2;
                    int LA267_0 = input.LA(1);

                    if ( (LA267_0==Comma) ) {
                        alt267=1;
                    }


                    switch (alt267) {
                	case 1 :
                	    // InternalSpecParser.g:5560:2: otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) )
                	    {
                	    otherlv_20=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return ;
                	    // InternalSpecParser.g:5564:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
                	    // InternalSpecParser.g:5565:1: (lv_memberCallArguments_21_0= ruleXExpression )
                	    {
                	    // InternalSpecParser.g:5565:1: (lv_memberCallArguments_21_0= ruleXExpression )
                	    // InternalSpecParser.g:5566:3: lv_memberCallArguments_21_0= ruleXExpression
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_13);
                	    lv_memberCallArguments_21_0=ruleXExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop267;
                    }
                } while (true);


                }


                }
                break;

        }

        otherlv_22=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred215_InternalSpecParser

    // $ANTLR start synpred216_InternalSpecParser
    public final void synpred216_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:5587:4: ( ( () LeftSquareBracket ) )
        // InternalSpecParser.g:5587:5: ( () LeftSquareBracket )
        {
        // InternalSpecParser.g:5587:5: ( () LeftSquareBracket )
        // InternalSpecParser.g:5587:6: () LeftSquareBracket
        {
        // InternalSpecParser.g:5587:6: ()
        // InternalSpecParser.g:5588:1: 
        {
        }

        match(input,LeftSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred216_InternalSpecParser

    // $ANTLR start synpred217_InternalSpecParser
    public final void synpred217_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;


        // InternalSpecParser.g:5344:6: ( ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )
        // InternalSpecParser.g:5344:6: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
        {
        // InternalSpecParser.g:5344:6: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
        // InternalSpecParser.g:5344:7: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
        {
        // InternalSpecParser.g:5344:7: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) )
        // InternalSpecParser.g:5344:8: ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
        {
        // InternalSpecParser.g:5363:7: ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
        // InternalSpecParser.g:5363:8: () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
        {
        // InternalSpecParser.g:5363:8: ()
        // InternalSpecParser.g:5364:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpecParser.g:5372:2: (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
        int alt269=3;
        switch ( input.LA(1) ) {
        case FullStop:
            {
            alt269=1;
            }
            break;
        case QuestionMarkFullStop:
            {
            alt269=2;
            }
            break;
        case ColonColon:
            {
            alt269=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 269, 0, input);

            throw nvae;
        }

        switch (alt269) {
            case 1 :
                // InternalSpecParser.g:5373:2: otherlv_8= FullStop
                {
                otherlv_8=(Token)match(input,FullStop,FollowSets000.FOLLOW_77); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSpecParser.g:5378:6: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
                {
                // InternalSpecParser.g:5378:6: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
                // InternalSpecParser.g:5379:1: (lv_nullSafe_9_0= QuestionMarkFullStop )
                {
                // InternalSpecParser.g:5379:1: (lv_nullSafe_9_0= QuestionMarkFullStop )
                // InternalSpecParser.g:5380:3: lv_nullSafe_9_0= QuestionMarkFullStop
                {
                lv_nullSafe_9_0=(Token)match(input,QuestionMarkFullStop,FollowSets000.FOLLOW_77); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalSpecParser.g:5395:6: ( (lv_explicitStatic_10_0= ColonColon ) )
                {
                // InternalSpecParser.g:5395:6: ( (lv_explicitStatic_10_0= ColonColon ) )
                // InternalSpecParser.g:5396:1: (lv_explicitStatic_10_0= ColonColon )
                {
                // InternalSpecParser.g:5396:1: (lv_explicitStatic_10_0= ColonColon )
                // InternalSpecParser.g:5397:3: lv_explicitStatic_10_0= ColonColon
                {
                lv_explicitStatic_10_0=(Token)match(input,ColonColon,FollowSets000.FOLLOW_77); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }

        // InternalSpecParser.g:5411:5: (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )?
        int alt271=2;
        int LA271_0 = input.LA(1);

        if ( (LA271_0==LessThanSign) ) {
            alt271=1;
        }
        switch (alt271) {
            case 1 :
                // InternalSpecParser.g:5412:2: otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign
                {
                otherlv_11=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return ;
                // InternalSpecParser.g:5416:1: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
                // InternalSpecParser.g:5417:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
                {
                // InternalSpecParser.g:5417:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
                // InternalSpecParser.g:5418:3: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_16);
                lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:5434:2: (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
                loop270:
                do {
                    int alt270=2;
                    int LA270_0 = input.LA(1);

                    if ( (LA270_0==Comma) ) {
                        alt270=1;
                    }


                    switch (alt270) {
                	case 1 :
                	    // InternalSpecParser.g:5435:2: otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
                	    {
                	    otherlv_13=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return ;
                	    // InternalSpecParser.g:5439:1: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
                	    // InternalSpecParser.g:5440:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
                	    {
                	    // InternalSpecParser.g:5440:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
                	    // InternalSpecParser.g:5441:3: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_16);
                	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop270;
                    }
                } while (true);

                otherlv_15=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_77); if (state.failed) return ;

                }
                break;

        }

        // InternalSpecParser.g:5462:3: ( ( ruleIdOrSuper ) )
        // InternalSpecParser.g:5463:1: ( ruleIdOrSuper )
        {
        // InternalSpecParser.g:5463:1: ( ruleIdOrSuper )
        // InternalSpecParser.g:5464:3: ruleIdOrSuper
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_107);
        ruleIdOrSuper();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:5481:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?
        int alt274=2;
        int LA274_0 = input.LA(1);

        if ( (LA274_0==LeftParenthesis) ) {
            alt274=1;
        }
        switch (alt274) {
            case 1 :
                // InternalSpecParser.g:5481:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis
                {
                // InternalSpecParser.g:5481:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) )
                // InternalSpecParser.g:5481:4: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis )
                {
                // InternalSpecParser.g:5489:1: (lv_explicitOperationCall_17_0= LeftParenthesis )
                // InternalSpecParser.g:5490:3: lv_explicitOperationCall_17_0= LeftParenthesis
                {
                lv_explicitOperationCall_17_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_80); if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:5504:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
                int alt273=3;
                alt273 = dfa273.predict(input);
                switch (alt273) {
                    case 1 :
                        // InternalSpecParser.g:5504:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
                        {
                        // InternalSpecParser.g:5504:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
                        // InternalSpecParser.g:5504:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
                        {
                        // InternalSpecParser.g:5523:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
                        // InternalSpecParser.g:5524:3: lv_memberCallArguments_18_0= ruleXShortClosure
                        {
                        if ( state.backtracking==0 ) {
                           
                          	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
                          	    
                        }
                        pushFollow(FollowSets000.FOLLOW_53);
                        lv_memberCallArguments_18_0=ruleXShortClosure();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalSpecParser.g:5541:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
                        {
                        // InternalSpecParser.g:5541:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
                        // InternalSpecParser.g:5541:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
                        {
                        // InternalSpecParser.g:5541:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
                        // InternalSpecParser.g:5542:1: (lv_memberCallArguments_19_0= ruleXExpression )
                        {
                        // InternalSpecParser.g:5542:1: (lv_memberCallArguments_19_0= ruleXExpression )
                        // InternalSpecParser.g:5543:3: lv_memberCallArguments_19_0= ruleXExpression
                        {
                        if ( state.backtracking==0 ) {
                           
                          	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
                          	    
                        }
                        pushFollow(FollowSets000.FOLLOW_13);
                        lv_memberCallArguments_19_0=ruleXExpression();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }

                        // InternalSpecParser.g:5559:2: (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
                        loop272:
                        do {
                            int alt272=2;
                            int LA272_0 = input.LA(1);

                            if ( (LA272_0==Comma) ) {
                                alt272=1;
                            }


                            switch (alt272) {
                        	case 1 :
                        	    // InternalSpecParser.g:5560:2: otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) )
                        	    {
                        	    otherlv_20=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return ;
                        	    // InternalSpecParser.g:5564:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
                        	    // InternalSpecParser.g:5565:1: (lv_memberCallArguments_21_0= ruleXExpression )
                        	    {
                        	    // InternalSpecParser.g:5565:1: (lv_memberCallArguments_21_0= ruleXExpression )
                        	    // InternalSpecParser.g:5566:3: lv_memberCallArguments_21_0= ruleXExpression
                        	    {
                        	    if ( state.backtracking==0 ) {
                        	       
                        	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
                        	      	    
                        	    }
                        	    pushFollow(FollowSets000.FOLLOW_13);
                        	    lv_memberCallArguments_21_0=ruleXExpression();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop272;
                            }
                        } while (true);


                        }


                        }
                        break;

                }

                otherlv_22=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_17); if (state.failed) return ;

                }
                break;

        }

        // InternalSpecParser.g:5587:3: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
        int alt275=2;
        int LA275_0 = input.LA(1);

        if ( (LA275_0==LeftSquareBracket) && (synpred216_InternalSpecParser())) {
            alt275=1;
        }
        switch (alt275) {
            case 1 :
                // InternalSpecParser.g:5587:4: ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
                {
                // InternalSpecParser.g:5591:1: (lv_memberCallArguments_23_0= ruleXClosure )
                // InternalSpecParser.g:5592:3: lv_memberCallArguments_23_0= ruleXClosure
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_memberCallArguments_23_0=ruleXClosure();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred217_InternalSpecParser

    // $ANTLR start synpred233_InternalSpecParser
    public final void synpred233_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:5978:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalSpecParser.g:5978:5: ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalSpecParser.g:5978:5: ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalSpecParser.g:5978:6: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalSpecParser.g:5978:6: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt280=2;
        int LA280_0 = input.LA(1);

        if ( (LA280_0==EqualsSignGreaterThanSign||LA280_0==LeftParenthesis||LA280_0==RULE_ID) ) {
            alt280=1;
        }
        switch (alt280) {
            case 1 :
                // InternalSpecParser.g:5978:7: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalSpecParser.g:5978:7: ( ( ruleJvmFormalParameter ) )
                // InternalSpecParser.g:5979:1: ( ruleJvmFormalParameter )
                {
                // InternalSpecParser.g:5979:1: ( ruleJvmFormalParameter )
                // InternalSpecParser.g:5980:1: ruleJvmFormalParameter
                {
                pushFollow(FollowSets000.FOLLOW_86);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:5982:2: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop279:
                do {
                    int alt279=2;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==Comma) ) {
                        alt279=1;
                    }


                    switch (alt279) {
                	case 1 :
                	    // InternalSpecParser.g:5983:1: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FollowSets000.FOLLOW_37); if (state.failed) return ;
                	    // InternalSpecParser.g:5984:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalSpecParser.g:5985:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalSpecParser.g:5985:1: ( ruleJvmFormalParameter )
                	    // InternalSpecParser.g:5986:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FollowSets000.FOLLOW_86);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop279;
                    }
                } while (true);


                }
                break;

        }

        // InternalSpecParser.g:5988:6: ( ( VerticalLine ) )
        // InternalSpecParser.g:5989:1: ( VerticalLine )
        {
        // InternalSpecParser.g:5989:1: ( VerticalLine )
        // InternalSpecParser.g:5991:1: VerticalLine
        {
        match(input,VerticalLine,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred233_InternalSpecParser

    // $ANTLR start synpred244_InternalSpecParser
    public final void synpred244_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_else_7_0 = null;


        // InternalSpecParser.g:6375:3: ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )
        // InternalSpecParser.g:6375:3: ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) )
        {
        // InternalSpecParser.g:6375:3: ( ( Else )=>otherlv_6= Else )
        // InternalSpecParser.g:6375:4: ( Else )=>otherlv_6= Else
        {
        otherlv_6=(Token)match(input,Else,FollowSets000.FOLLOW_22); if (state.failed) return ;

        }

        // InternalSpecParser.g:6382:2: ( (lv_else_7_0= ruleXExpression ) )
        // InternalSpecParser.g:6383:1: (lv_else_7_0= ruleXExpression )
        {
        // InternalSpecParser.g:6383:1: (lv_else_7_0= ruleXExpression )
        // InternalSpecParser.g:6384:3: lv_else_7_0= ruleXExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_else_7_0=ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred244_InternalSpecParser

    // $ANTLR start synpred246_InternalSpecParser
    public final void synpred246_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;


        // InternalSpecParser.g:6435:2: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) )
        // InternalSpecParser.g:6435:2: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
        {
        // InternalSpecParser.g:6435:2: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
        // InternalSpecParser.g:6435:3: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
        {
        // InternalSpecParser.g:6435:3: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
        // InternalSpecParser.g:6435:4: ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
        {
        // InternalSpecParser.g:6443:5: (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
        // InternalSpecParser.g:6444:2: otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
        {
        otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_37); if (state.failed) return ;
        // InternalSpecParser.g:6448:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
        // InternalSpecParser.g:6449:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
        {
        // InternalSpecParser.g:6449:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
        // InternalSpecParser.g:6450:3: lv_declaredParam_3_0= ruleJvmFormalParameter
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_92);
        lv_declaredParam_3_0=ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,Colon,FollowSets000.FOLLOW_22); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:6471:3: ( (lv_switch_5_0= ruleXExpression ) )
        // InternalSpecParser.g:6472:1: (lv_switch_5_0= ruleXExpression )
        {
        // InternalSpecParser.g:6472:1: (lv_switch_5_0= ruleXExpression )
        // InternalSpecParser.g:6473:3: lv_switch_5_0= ruleXExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_53);
        lv_switch_5_0=ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_6=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred246_InternalSpecParser

    // $ANTLR start synpred247_InternalSpecParser
    public final void synpred247_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:6495:8: ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )
        // InternalSpecParser.g:6495:9: ( ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // InternalSpecParser.g:6495:9: ( ( ( ruleJvmFormalParameter ) ) Colon )
        // InternalSpecParser.g:6495:10: ( ( ruleJvmFormalParameter ) ) Colon
        {
        // InternalSpecParser.g:6495:10: ( ( ruleJvmFormalParameter ) )
        // InternalSpecParser.g:6496:1: ( ruleJvmFormalParameter )
        {
        // InternalSpecParser.g:6496:1: ( ruleJvmFormalParameter )
        // InternalSpecParser.g:6497:1: ruleJvmFormalParameter
        {
        pushFollow(FollowSets000.FOLLOW_92);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred247_InternalSpecParser

    // $ANTLR start synpred264_InternalSpecParser
    public final void synpred264_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;


        // InternalSpecParser.g:7325:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) )
        // InternalSpecParser.g:7325:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
        {
        // InternalSpecParser.g:7325:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
        // InternalSpecParser.g:7325:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
        {
        // InternalSpecParser.g:7333:6: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
        // InternalSpecParser.g:7333:7: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
        {
        // InternalSpecParser.g:7333:7: ( (lv_type_3_0= ruleJvmTypeReference ) )
        // InternalSpecParser.g:7334:1: (lv_type_3_0= ruleJvmTypeReference )
        {
        // InternalSpecParser.g:7334:1: (lv_type_3_0= ruleJvmTypeReference )
        // InternalSpecParser.g:7335:3: lv_type_3_0= ruleJvmTypeReference
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_3);
        lv_type_3_0=ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:7351:2: ( (lv_name_4_0= ruleValidID ) )
        // InternalSpecParser.g:7352:1: (lv_name_4_0= ruleValidID )
        {
        // InternalSpecParser.g:7352:1: (lv_name_4_0= ruleValidID )
        // InternalSpecParser.g:7353:3: lv_name_4_0= ruleValidID
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_name_4_0=ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred264_InternalSpecParser

    // $ANTLR start synpred273_InternalSpecParser
    public final void synpred273_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_featureCallArguments_8_0 = null;


        // InternalSpecParser.g:7648:3: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) )
        // InternalSpecParser.g:7648:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
        {
        // InternalSpecParser.g:7648:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
        // InternalSpecParser.g:7648:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
        {
        // InternalSpecParser.g:7667:1: (lv_featureCallArguments_8_0= ruleXShortClosure )
        // InternalSpecParser.g:7668:3: lv_featureCallArguments_8_0= ruleXShortClosure
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_featureCallArguments_8_0=ruleXShortClosure();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred273_InternalSpecParser

    // $ANTLR start synpred275_InternalSpecParser
    public final void synpred275_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;


        // InternalSpecParser.g:7685:6: ( ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )
        // InternalSpecParser.g:7685:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
        {
        // InternalSpecParser.g:7685:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
        // InternalSpecParser.g:7685:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
        {
        // InternalSpecParser.g:7685:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
        // InternalSpecParser.g:7686:1: (lv_featureCallArguments_9_0= ruleXExpression )
        {
        // InternalSpecParser.g:7686:1: (lv_featureCallArguments_9_0= ruleXExpression )
        // InternalSpecParser.g:7687:3: lv_featureCallArguments_9_0= ruleXExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_59);
        lv_featureCallArguments_9_0=ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:7703:2: (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
        loop294:
        do {
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==Comma) ) {
                alt294=1;
            }


            switch (alt294) {
        	case 1 :
        	    // InternalSpecParser.g:7704:2: otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) )
        	    {
        	    otherlv_10=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return ;
        	    // InternalSpecParser.g:7708:1: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
        	    // InternalSpecParser.g:7709:1: (lv_featureCallArguments_11_0= ruleXExpression )
        	    {
        	    // InternalSpecParser.g:7709:1: (lv_featureCallArguments_11_0= ruleXExpression )
        	    // InternalSpecParser.g:7710:3: lv_featureCallArguments_11_0= ruleXExpression
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_59);
        	    lv_featureCallArguments_11_0=ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop294;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred275_InternalSpecParser

    // $ANTLR start synpred276_InternalSpecParser
    public final void synpred276_InternalSpecParser_fragment() throws RecognitionException {   
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;


        // InternalSpecParser.g:7625:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )
        // InternalSpecParser.g:7625:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis
        {
        // InternalSpecParser.g:7625:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) )
        // InternalSpecParser.g:7625:4: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis )
        {
        // InternalSpecParser.g:7633:1: (lv_explicitOperationCall_7_0= LeftParenthesis )
        // InternalSpecParser.g:7634:3: lv_explicitOperationCall_7_0= LeftParenthesis
        {
        lv_explicitOperationCall_7_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_80); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:7648:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
        int alt296=3;
        alt296 = dfa296.predict(input);
        switch (alt296) {
            case 1 :
                // InternalSpecParser.g:7648:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                {
                // InternalSpecParser.g:7648:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                // InternalSpecParser.g:7648:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                {
                // InternalSpecParser.g:7667:1: (lv_featureCallArguments_8_0= ruleXShortClosure )
                // InternalSpecParser.g:7668:3: lv_featureCallArguments_8_0= ruleXShortClosure
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_53);
                lv_featureCallArguments_8_0=ruleXShortClosure();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSpecParser.g:7685:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                {
                // InternalSpecParser.g:7685:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                // InternalSpecParser.g:7685:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                {
                // InternalSpecParser.g:7685:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                // InternalSpecParser.g:7686:1: (lv_featureCallArguments_9_0= ruleXExpression )
                {
                // InternalSpecParser.g:7686:1: (lv_featureCallArguments_9_0= ruleXExpression )
                // InternalSpecParser.g:7687:3: lv_featureCallArguments_9_0= ruleXExpression
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_13);
                lv_featureCallArguments_9_0=ruleXExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:7703:2: (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                loop295:
                do {
                    int alt295=2;
                    int LA295_0 = input.LA(1);

                    if ( (LA295_0==Comma) ) {
                        alt295=1;
                    }


                    switch (alt295) {
                	case 1 :
                	    // InternalSpecParser.g:7704:2: otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                	    {
                	    otherlv_10=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return ;
                	    // InternalSpecParser.g:7708:1: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                	    // InternalSpecParser.g:7709:1: (lv_featureCallArguments_11_0= ruleXExpression )
                	    {
                	    // InternalSpecParser.g:7709:1: (lv_featureCallArguments_11_0= ruleXExpression )
                	    // InternalSpecParser.g:7710:3: lv_featureCallArguments_11_0= ruleXExpression
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_13);
                	    lv_featureCallArguments_11_0=ruleXExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop295;
                    }
                } while (true);


                }


                }
                break;

        }

        otherlv_12=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred276_InternalSpecParser

    // $ANTLR start synpred277_InternalSpecParser
    public final void synpred277_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:7731:4: ( ( () LeftSquareBracket ) )
        // InternalSpecParser.g:7731:5: ( () LeftSquareBracket )
        {
        // InternalSpecParser.g:7731:5: ( () LeftSquareBracket )
        // InternalSpecParser.g:7731:6: () LeftSquareBracket
        {
        // InternalSpecParser.g:7731:6: ()
        // InternalSpecParser.g:7732:1: 
        {
        }

        match(input,LeftSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred277_InternalSpecParser

    // $ANTLR start synpred285_InternalSpecParser
    public final void synpred285_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;


        // InternalSpecParser.g:7907:3: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )
        // InternalSpecParser.g:7907:3: ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign
        {
        // InternalSpecParser.g:7907:3: ( ( LessThanSign )=>otherlv_3= LessThanSign )
        // InternalSpecParser.g:7907:4: ( LessThanSign )=>otherlv_3= LessThanSign
        {
        otherlv_3=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return ;

        }

        // InternalSpecParser.g:7914:2: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
        // InternalSpecParser.g:7915:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
        {
        // InternalSpecParser.g:7915:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
        // InternalSpecParser.g:7916:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_16);
        lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:7932:2: (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
        loop297:
        do {
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==Comma) ) {
                alt297=1;
            }


            switch (alt297) {
        	case 1 :
        	    // InternalSpecParser.g:7933:2: otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
        	    {
        	    otherlv_5=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return ;
        	    // InternalSpecParser.g:7937:1: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
        	    // InternalSpecParser.g:7938:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
        	    {
        	    // InternalSpecParser.g:7938:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
        	    // InternalSpecParser.g:7939:3: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_16);
        	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop297;
            }
        } while (true);

        otherlv_7=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred285_InternalSpecParser

    // $ANTLR start synpred290_InternalSpecParser
    public final void synpred290_InternalSpecParser_fragment() throws RecognitionException {   
        EObject lv_arguments_9_0 = null;


        // InternalSpecParser.g:7983:3: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) )
        // InternalSpecParser.g:7983:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
        {
        // InternalSpecParser.g:7983:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
        // InternalSpecParser.g:7983:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
        {
        // InternalSpecParser.g:8002:1: (lv_arguments_9_0= ruleXShortClosure )
        // InternalSpecParser.g:8003:3: lv_arguments_9_0= ruleXShortClosure
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_arguments_9_0=ruleXShortClosure();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred290_InternalSpecParser

    // $ANTLR start synpred292_InternalSpecParser
    public final void synpred292_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


        // InternalSpecParser.g:8020:6: ( ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )
        // InternalSpecParser.g:8020:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
        {
        // InternalSpecParser.g:8020:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
        // InternalSpecParser.g:8020:7: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
        {
        // InternalSpecParser.g:8020:7: ( (lv_arguments_10_0= ruleXExpression ) )
        // InternalSpecParser.g:8021:1: (lv_arguments_10_0= ruleXExpression )
        {
        // InternalSpecParser.g:8021:1: (lv_arguments_10_0= ruleXExpression )
        // InternalSpecParser.g:8022:3: lv_arguments_10_0= ruleXExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_59);
        lv_arguments_10_0=ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:8038:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
        loop301:
        do {
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==Comma) ) {
                alt301=1;
            }


            switch (alt301) {
        	case 1 :
        	    // InternalSpecParser.g:8039:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) )
        	    {
        	    otherlv_11=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return ;
        	    // InternalSpecParser.g:8043:1: ( (lv_arguments_12_0= ruleXExpression ) )
        	    // InternalSpecParser.g:8044:1: (lv_arguments_12_0= ruleXExpression )
        	    {
        	    // InternalSpecParser.g:8044:1: (lv_arguments_12_0= ruleXExpression )
        	    // InternalSpecParser.g:8045:3: lv_arguments_12_0= ruleXExpression
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_59);
        	    lv_arguments_12_0=ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop301;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred292_InternalSpecParser

    // $ANTLR start synpred293_InternalSpecParser
    public final void synpred293_InternalSpecParser_fragment() throws RecognitionException {   
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


        // InternalSpecParser.g:7960:4: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )
        // InternalSpecParser.g:7960:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis
        {
        // InternalSpecParser.g:7960:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) )
        // InternalSpecParser.g:7960:5: ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis )
        {
        // InternalSpecParser.g:7968:1: (lv_explicitConstructorCall_8_0= LeftParenthesis )
        // InternalSpecParser.g:7969:3: lv_explicitConstructorCall_8_0= LeftParenthesis
        {
        lv_explicitConstructorCall_8_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_80); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:7983:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
        int alt303=3;
        alt303 = dfa303.predict(input);
        switch (alt303) {
            case 1 :
                // InternalSpecParser.g:7983:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                {
                // InternalSpecParser.g:7983:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                // InternalSpecParser.g:7983:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                {
                // InternalSpecParser.g:8002:1: (lv_arguments_9_0= ruleXShortClosure )
                // InternalSpecParser.g:8003:3: lv_arguments_9_0= ruleXShortClosure
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_53);
                lv_arguments_9_0=ruleXShortClosure();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSpecParser.g:8020:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                {
                // InternalSpecParser.g:8020:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                // InternalSpecParser.g:8020:7: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                {
                // InternalSpecParser.g:8020:7: ( (lv_arguments_10_0= ruleXExpression ) )
                // InternalSpecParser.g:8021:1: (lv_arguments_10_0= ruleXExpression )
                {
                // InternalSpecParser.g:8021:1: (lv_arguments_10_0= ruleXExpression )
                // InternalSpecParser.g:8022:3: lv_arguments_10_0= ruleXExpression
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_13);
                lv_arguments_10_0=ruleXExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:8038:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                loop302:
                do {
                    int alt302=2;
                    int LA302_0 = input.LA(1);

                    if ( (LA302_0==Comma) ) {
                        alt302=1;
                    }


                    switch (alt302) {
                	case 1 :
                	    // InternalSpecParser.g:8039:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) )
                	    {
                	    otherlv_11=(Token)match(input,Comma,FollowSets000.FOLLOW_22); if (state.failed) return ;
                	    // InternalSpecParser.g:8043:1: ( (lv_arguments_12_0= ruleXExpression ) )
                	    // InternalSpecParser.g:8044:1: (lv_arguments_12_0= ruleXExpression )
                	    {
                	    // InternalSpecParser.g:8044:1: (lv_arguments_12_0= ruleXExpression )
                	    // InternalSpecParser.g:8045:3: lv_arguments_12_0= ruleXExpression
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_13);
                	    lv_arguments_12_0=ruleXExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop302;
                    }
                } while (true);


                }


                }
                break;

        }

        otherlv_13=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred293_InternalSpecParser

    // $ANTLR start synpred294_InternalSpecParser
    public final void synpred294_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:8066:4: ( ( () LeftSquareBracket ) )
        // InternalSpecParser.g:8066:5: ( () LeftSquareBracket )
        {
        // InternalSpecParser.g:8066:5: ( () LeftSquareBracket )
        // InternalSpecParser.g:8066:6: () LeftSquareBracket
        {
        // InternalSpecParser.g:8066:6: ()
        // InternalSpecParser.g:8067:1: 
        {
        }

        match(input,LeftSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred294_InternalSpecParser

    // $ANTLR start synpred331_InternalSpecParser
    public final void synpred331_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:8392:2: ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )
        // InternalSpecParser.g:
        {
        if ( input.LA(1)==Synchronized||input.LA(1)==Extension||input.LA(1)==Extends||input.LA(1)==Assert||input.LA(1)==Import||input.LA(1)==Return||(input.LA(1)>=Static && input.LA(1)<=Switch)||input.LA(1)==Typeof||input.LA(1)==False||(input.LA(1)>=Super && input.LA(1)<=While)||(input.LA(1)>=Null && input.LA(1)<=True)||(input.LA(1)>=For && input.LA(1)<=New)||input.LA(1)==Try||(input.LA(1)>=Do && input.LA(1)<=If)||(input.LA(1)>=ExclamationMark && input.LA(1)<=NumberSign)||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==LessThanSign||input.LA(1)==LeftSquareBracket||input.LA(1)==LeftCurlyBracket||input.LA(1)==RULE_ID||(input.LA(1)>=RULE_RICH_TEXT && input.LA(1)<=RULE_RICH_TEXT_START)||(input.LA(1)>=RULE_HEX && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred331_InternalSpecParser

    // $ANTLR start synpred332_InternalSpecParser
    public final void synpred332_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:8519:5: ( Catch )
        // InternalSpecParser.g:8520:1: Catch
        {
        match(input,Catch,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred332_InternalSpecParser

    // $ANTLR start synpred334_InternalSpecParser
    public final void synpred334_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_finallyExpression_5_0 = null;


        // InternalSpecParser.g:8539:4: ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )
        // InternalSpecParser.g:8539:4: ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
        {
        // InternalSpecParser.g:8539:4: ( ( Finally )=>otherlv_4= Finally )
        // InternalSpecParser.g:8539:5: ( Finally )=>otherlv_4= Finally
        {
        otherlv_4=(Token)match(input,Finally,FollowSets000.FOLLOW_22); if (state.failed) return ;

        }

        // InternalSpecParser.g:8546:2: ( (lv_finallyExpression_5_0= ruleXExpression ) )
        // InternalSpecParser.g:8547:1: (lv_finallyExpression_5_0= ruleXExpression )
        {
        // InternalSpecParser.g:8547:1: (lv_finallyExpression_5_0= ruleXExpression )
        // InternalSpecParser.g:8548:3: lv_finallyExpression_5_0= ruleXExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_finallyExpression_5_0=ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred334_InternalSpecParser

    // $ANTLR start synpred339_InternalSpecParser
    public final void synpred339_InternalSpecParser_fragment() throws RecognitionException {   
        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_2 = null;


        // InternalSpecParser.g:8781:2: ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )
        // InternalSpecParser.g:8781:2: ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID
        {
        // InternalSpecParser.g:8781:2: ( ( FullStop )=>kw= FullStop )
        // InternalSpecParser.g:8781:3: ( FullStop )=>kw= FullStop
        {
        kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_3); if (state.failed) return ;

        }

        pushFollow(FollowSets000.FOLLOW_2);
        this_ValidID_2=ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred339_InternalSpecParser

    // $ANTLR start synpred344_InternalSpecParser
    public final void synpred344_InternalSpecParser_fragment() throws RecognitionException {   
        // InternalSpecParser.g:8911:2: ( ( () ruleArrayBrackets ) )
        // InternalSpecParser.g:8911:3: ( () ruleArrayBrackets )
        {
        // InternalSpecParser.g:8911:3: ( () ruleArrayBrackets )
        // InternalSpecParser.g:8911:4: () ruleArrayBrackets
        {
        // InternalSpecParser.g:8911:4: ()
        // InternalSpecParser.g:8912:1: 
        {
        }

        pushFollow(FollowSets000.FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred344_InternalSpecParser

    // $ANTLR start synpred354_InternalSpecParser
    public final void synpred354_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


        // InternalSpecParser.g:9203:3: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )
        // InternalSpecParser.g:9203:3: ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign
        {
        // InternalSpecParser.g:9203:3: ( ( LessThanSign )=>otherlv_9= LessThanSign )
        // InternalSpecParser.g:9203:4: ( LessThanSign )=>otherlv_9= LessThanSign
        {
        otherlv_9=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return ;

        }

        // InternalSpecParser.g:9210:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
        // InternalSpecParser.g:9211:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
        {
        // InternalSpecParser.g:9211:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
        // InternalSpecParser.g:9212:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_16);
        lv_arguments_10_0=ruleJvmArgumentTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:9228:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
        loop311:
        do {
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==Comma) ) {
                alt311=1;
            }


            switch (alt311) {
        	case 1 :
        	    // InternalSpecParser.g:9229:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
        	    {
        	    otherlv_11=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return ;
        	    // InternalSpecParser.g:9233:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
        	    // InternalSpecParser.g:9234:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
        	    {
        	    // InternalSpecParser.g:9234:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
        	    // InternalSpecParser.g:9235:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_16);
        	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop311;
            }
        } while (true);

        otherlv_13=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred354_InternalSpecParser

    // $ANTLR start synpred355_InternalSpecParser
    public final void synpred355_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


        // InternalSpecParser.g:9167:2: ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )
        // InternalSpecParser.g:9167:2: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
        {
        // InternalSpecParser.g:9167:2: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) )
        // InternalSpecParser.g:9167:3: ( ( () FullStop ) )=> ( () otherlv_7= FullStop )
        {
        // InternalSpecParser.g:9170:5: ( () otherlv_7= FullStop )
        // InternalSpecParser.g:9170:6: () otherlv_7= FullStop
        {
        // InternalSpecParser.g:9170:6: ()
        // InternalSpecParser.g:9171:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_7=(Token)match(input,FullStop,FollowSets000.FOLLOW_3); if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:9184:3: ( ( ruleValidID ) )
        // InternalSpecParser.g:9185:1: ( ruleValidID )
        {
        // InternalSpecParser.g:9185:1: ( ruleValidID )
        // InternalSpecParser.g:9186:3: ruleValidID
        {
        if ( state.backtracking==0 ) {
           
          		  /* */ 
          		
        }
        pushFollow(FollowSets000.FOLLOW_116);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:9203:2: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
        int alt313=2;
        int LA313_0 = input.LA(1);

        if ( (LA313_0==LessThanSign) ) {
            alt313=1;
        }
        switch (alt313) {
            case 1 :
                // InternalSpecParser.g:9203:3: ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign
                {
                // InternalSpecParser.g:9203:3: ( ( LessThanSign )=>otherlv_9= LessThanSign )
                // InternalSpecParser.g:9203:4: ( LessThanSign )=>otherlv_9= LessThanSign
                {
                otherlv_9=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return ;

                }

                // InternalSpecParser.g:9210:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                // InternalSpecParser.g:9211:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                {
                // InternalSpecParser.g:9211:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                // InternalSpecParser.g:9212:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_16);
                lv_arguments_10_0=ruleJvmArgumentTypeReference();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpecParser.g:9228:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                loop312:
                do {
                    int alt312=2;
                    int LA312_0 = input.LA(1);

                    if ( (LA312_0==Comma) ) {
                        alt312=1;
                    }


                    switch (alt312) {
                	case 1 :
                	    // InternalSpecParser.g:9229:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                	    {
                	    otherlv_11=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return ;
                	    // InternalSpecParser.g:9233:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                	    // InternalSpecParser.g:9234:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                	    {
                	    // InternalSpecParser.g:9234:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                	    // InternalSpecParser.g:9235:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_16);
                	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop312;
                    }
                } while (true);

                otherlv_13=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred355_InternalSpecParser

    // $ANTLR start synpred356_InternalSpecParser
    public final void synpred356_InternalSpecParser_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


        // InternalSpecParser.g:9114:3: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )
        // InternalSpecParser.g:9114:3: ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
        {
        // InternalSpecParser.g:9114:3: ( ( LessThanSign )=>otherlv_1= LessThanSign )
        // InternalSpecParser.g:9114:4: ( LessThanSign )=>otherlv_1= LessThanSign
        {
        otherlv_1=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return ;

        }

        // InternalSpecParser.g:9121:2: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
        // InternalSpecParser.g:9122:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
        {
        // InternalSpecParser.g:9122:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
        // InternalSpecParser.g:9123:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_16);
        lv_arguments_2_0=ruleJvmArgumentTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpecParser.g:9139:2: (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
        loop314:
        do {
            int alt314=2;
            int LA314_0 = input.LA(1);

            if ( (LA314_0==Comma) ) {
                alt314=1;
            }


            switch (alt314) {
        	case 1 :
        	    // InternalSpecParser.g:9140:2: otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
        	    {
        	    otherlv_3=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return ;
        	    // InternalSpecParser.g:9144:1: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
        	    // InternalSpecParser.g:9145:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
        	    {
        	    // InternalSpecParser.g:9145:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
        	    // InternalSpecParser.g:9146:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_16);
        	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop314;
            }
        } while (true);

        otherlv_5=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_112); if (state.failed) return ;
        // InternalSpecParser.g:9167:1: ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
        loop317:
        do {
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==FullStop) ) {
                alt317=1;
            }


            switch (alt317) {
        	case 1 :
        	    // InternalSpecParser.g:9167:2: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
        	    {
        	    // InternalSpecParser.g:9167:2: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) )
        	    // InternalSpecParser.g:9167:3: ( ( () FullStop ) )=> ( () otherlv_7= FullStop )
        	    {
        	    // InternalSpecParser.g:9170:5: ( () otherlv_7= FullStop )
        	    // InternalSpecParser.g:9170:6: () otherlv_7= FullStop
        	    {
        	    // InternalSpecParser.g:9170:6: ()
        	    // InternalSpecParser.g:9171:2: 
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	  /* */ 
        	      	
        	    }

        	    }

        	    otherlv_7=(Token)match(input,FullStop,FollowSets000.FOLLOW_3); if (state.failed) return ;

        	    }


        	    }

        	    // InternalSpecParser.g:9184:3: ( ( ruleValidID ) )
        	    // InternalSpecParser.g:9185:1: ( ruleValidID )
        	    {
        	    // InternalSpecParser.g:9185:1: ( ruleValidID )
        	    // InternalSpecParser.g:9186:3: ruleValidID
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      		  /* */ 
        	      		
        	    }
        	    pushFollow(FollowSets000.FOLLOW_117);
        	    ruleValidID();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalSpecParser.g:9203:2: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
        	    int alt316=2;
        	    int LA316_0 = input.LA(1);

        	    if ( (LA316_0==LessThanSign) ) {
        	        alt316=1;
        	    }
        	    switch (alt316) {
        	        case 1 :
        	            // InternalSpecParser.g:9203:3: ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign
        	            {
        	            // InternalSpecParser.g:9203:3: ( ( LessThanSign )=>otherlv_9= LessThanSign )
        	            // InternalSpecParser.g:9203:4: ( LessThanSign )=>otherlv_9= LessThanSign
        	            {
        	            otherlv_9=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_78); if (state.failed) return ;

        	            }

        	            // InternalSpecParser.g:9210:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
        	            // InternalSpecParser.g:9211:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
        	            {
        	            // InternalSpecParser.g:9211:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
        	            // InternalSpecParser.g:9212:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
        	            {
        	            if ( state.backtracking==0 ) {
        	               
        	              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
        	              	    
        	            }
        	            pushFollow(FollowSets000.FOLLOW_16);
        	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

        	            state._fsp--;
        	            if (state.failed) return ;

        	            }


        	            }

        	            // InternalSpecParser.g:9228:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
        	            loop315:
        	            do {
        	                int alt315=2;
        	                int LA315_0 = input.LA(1);

        	                if ( (LA315_0==Comma) ) {
        	                    alt315=1;
        	                }


        	                switch (alt315) {
        	            	case 1 :
        	            	    // InternalSpecParser.g:9229:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
        	            	    {
        	            	    otherlv_11=(Token)match(input,Comma,FollowSets000.FOLLOW_78); if (state.failed) return ;
        	            	    // InternalSpecParser.g:9233:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
        	            	    // InternalSpecParser.g:9234:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
        	            	    {
        	            	    // InternalSpecParser.g:9234:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
        	            	    // InternalSpecParser.g:9235:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
        	            	    {
        	            	    if ( state.backtracking==0 ) {
        	            	       
        	            	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
        	            	      	    
        	            	    }
        	            	    pushFollow(FollowSets000.FOLLOW_16);
        	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop315;
        	                }
        	            } while (true);

        	            otherlv_13=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_112); if (state.failed) return ;

        	            }
        	            break;

        	    }


        	    }
        	    break;

        	default :
        	    break loop317;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred356_InternalSpecParser

    // Delegated rules

    public final boolean synpred339_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred339_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred200_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred200_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred354_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred354_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred355_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred355_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred264_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred264_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred275_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred356_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred356_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred344_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred344_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred332_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred332_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred334_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred334_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred246_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred246_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred331_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred331_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred293_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred293_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred292_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred292_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_InternalSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_InternalSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA55 dfa55 = new DFA55(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA133 dfa133 = new DFA133(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA160 dfa160 = new DFA160(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA183 dfa183 = new DFA183(this);
    protected DFA195 dfa195 = new DFA195(this);
    protected DFA242 dfa242 = new DFA242(this);
    protected DFA249 dfa249 = new DFA249(this);
    protected DFA268 dfa268 = new DFA268(this);
    protected DFA273 dfa273 = new DFA273(this);
    protected DFA296 dfa296 = new DFA296(this);
    protected DFA303 dfa303 = new DFA303(this);
    static final String dfa_1s = "\30\uffff";
    static final String dfa_2s = "\1\4\5\uffff\16\4\2\uffff\1\126\1\uffff";
    static final String dfa_3s = "\1\156\5\uffff\16\156\2\uffff\1\156\1\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\16\uffff\1\7\1\10\1\uffff\1\6";
    static final String dfa_5s = "\30\uffff}>";
    static final String[] dfa_6s = {
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\2\1\15\1\25\1\17\1\21\1\5\3\uffff\1\12\1\1\1\10\1\uffff\1\3\1\uffff\1\20\1\7\2\uffff\1\14\3\uffff\1\4\1\uffff\1\1\1\uffff\1\16\6\uffff\1\1\7\uffff\1\6\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "",
            "",
            "",
            "",
            "",
            "\1\25\2\uffff\3\25\1\uffff\4\25\4\uffff\1\25\1\uffff\1\25\3\uffff\2\25\2\uffff\1\25\7\uffff\1\25\16\uffff\1\25\25\uffff\1\25\13\uffff\1\25\11\uffff\1\25\6\uffff\1\27\6\uffff\1\26",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "\1\22\1\uffff\1\24\1\11\1\23\1\13\1\uffff\1\15\1\25\1\17\1\21\4\uffff\1\12\1\uffff\1\10\3\uffff\1\20\1\7\2\uffff\1\14\7\uffff\1\16\16\uffff\1\25\4\uffff\2\24\17\uffff\1\24\13\uffff\1\24\27\uffff\1\24",
            "",
            "",
            "\1\25\5\uffff\1\25\3\uffff\1\25\4\uffff\1\25\1\uffff\1\27\6\uffff\1\25",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "539:3: ( ( () ( ( (lv_pending_3_0= Pending ) )? (otherlv_4= Fact | otherlv_5= Facts ) ( (lv_expr_6_0= ruleXExpression ) ) ( (lv_expression_7_0= ruleXBlockExpression ) )? ) ) | ( () ( ( (lv_preamble_9_0= Describe ) ) ( (lv_targetType_10_0= ruleJvmTypeReference ) )? ( (lv_name_11_0= RULE_STRING ) )? otherlv_12= LeftCurlyBracket ( (lv_members_13_0= ruleMember ) )* otherlv_14= RightCurlyBracket ) ) | ( () (otherlv_16= Before ( ( (lv_modifiers_17_0= All ) ) | otherlv_18= Each )? ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )? ( (lv_expression_20_0= ruleXExpression ) ) ) ) | ( () (otherlv_22= After ( ( (lv_modifiers_23_0= All ) ) | otherlv_24= Each )? ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )? ( (lv_expression_26_0= ruleXExpression ) ) ) ) | ( () ( ( (lv_preamble_28_0= Context ) ) ( ( ruleMethod ) )? ( (lv_name_30_0= RULE_STRING ) )? otherlv_31= LeftCurlyBracket ( (lv_members_32_0= ruleMember ) )* otherlv_33= RightCurlyBracket ) ) | ( () (otherlv_35= Def ( (lv_name_36_0= RULE_ID ) )? otherlv_37= LeftCurlyBracket (otherlv_38= VerticalLine ( (lv_columns_39_0= ruleExampleColumn ) )* ( (lv_rows_40_0= ruleExampleRow ) )* )? otherlv_41= RightCurlyBracket ) ) | ( () ( (lv_modifiers_43_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) ) (otherlv_61= EqualsSign ( (lv_initialValue_62_0= ruleXExpression ) ) )? (otherlv_63= Semicolon )? ) | ( () ( (lv_modifiers_65_0= ruleCommonModifier ) )* ( (lv_modifiers_66_0= ruleMethodModifier ) ) ( ( (lv_modifiers_67_0= ruleCommonModifier ) ) | ( (lv_modifiers_68_0= ruleMethodModifier ) ) )* (otherlv_69= LessThanSign ( (lv_typeParameters_70_0= ruleJvmTypeParameter ) ) (otherlv_71= Comma ( (lv_typeParameters_72_0= ruleJvmTypeParameter ) ) )* otherlv_73= GreaterThanSign )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) LeftParenthesis ) )=> ( ( (lv_returnType_74_0= ruleJvmTypeReference ) ) ( (lv_name_75_0= ruleValidID ) ) otherlv_76= LeftParenthesis ) ) | ( ( (lv_name_77_0= ruleValidID ) ) otherlv_78= LeftParenthesis ) ) ( ( (lv_parameters_79_0= ruleParameter ) ) (otherlv_80= Comma ( (lv_parameters_81_0= ruleParameter ) ) )* )? otherlv_82= RightParenthesis (otherlv_83= Throws ( (lv_exceptions_84_0= ruleJvmTypeReference ) ) (otherlv_85= Comma ( (lv_exceptions_86_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_87_0= ruleXBlockExpression ) ) | ( (lv_expression_88_0= ruleRichString ) ) | otherlv_89= Semicolon )? ) )";
        }
    }
    static final String dfa_7s = "\45\uffff";
    static final String dfa_8s = "\1\4\1\0\43\uffff";
    static final String dfa_9s = "\1\171\1\0\43\uffff";
    static final String dfa_10s = "\2\uffff\1\2\41\uffff\1\1";
    static final String dfa_11s = "\1\uffff\1\0\43\uffff}>";
    static final String[] dfa_12s = {
            "\1\2\1\uffff\1\2\12\uffff\1\2\4\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\1\2\1\uffff\3\2\4\uffff\2\2\6\uffff\2\2\1\uffff\1\2\26\uffff\2\2\1\uffff\2\2\2\uffff\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\4\uffff\1\2\1\uffff\1\2\6\uffff\1\2\3\uffff\2\2\2\uffff\3\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "738:3: ( ( ( RULE_STRING ) )=> (lv_name_19_0= RULE_STRING ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA24_1 = input.LA(1);

                         
                        int index24_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSpecParser()) ) {s = 36;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index24_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 24, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "816:3: ( ( ( RULE_STRING ) )=> (lv_name_25_0= RULE_STRING ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalSpecParser()) ) {s = 36;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\24\uffff";
    static final String dfa_14s = "\1\6\2\4\2\uffff\15\4\2\uffff";
    static final String dfa_15s = "\3\156\2\uffff\15\156\2\uffff";
    static final String dfa_16s = "\3\uffff\1\2\1\4\15\uffff\1\3\1\1";
    static final String dfa_17s = "\24\uffff}>";
    static final String[] dfa_18s = {
            "\1\3\62\uffff\1\1\1\2\17\uffff\1\4\13\uffff\1\4\27\uffff\1\4",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "",
            "",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "\1\20\1\uffff\1\22\1\7\1\21\1\11\1\uffff\1\13\1\uffff\1\15\1\17\4\uffff\1\10\1\uffff\1\6\3\uffff\1\16\1\5\2\uffff\1\12\7\uffff\1\14\44\uffff\1\23\13\uffff\1\23\27\uffff\1\23",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1060:3: ( ( ( (lv_modifiers_44_0= ruleFieldModifier ) ) ( (lv_modifiers_45_0= ruleCommonModifier ) )* ( (lv_type_46_0= ruleJvmTypeReference ) )? ( (lv_name_47_0= ruleValidID ) ) ) | ( ( (lv_modifiers_48_0= Extension ) ) ( ( (lv_modifiers_49_0= ruleFieldModifier ) ) | ( (lv_modifiers_50_0= ruleCommonModifier ) ) )* ( (lv_type_51_0= ruleJvmTypeReference ) ) ( (lv_name_52_0= ruleValidID ) )? ) | ( ( (lv_modifiers_53_0= ruleFieldModifier ) ) ( (lv_modifiers_54_0= ruleCommonModifier ) )* ( (lv_modifiers_55_0= Extension ) ) ( (lv_modifiers_56_0= ruleCommonModifier ) )* ( (lv_type_57_0= ruleJvmTypeReference ) ) ( (lv_name_58_0= ruleValidID ) )? ) | ( ( (lv_type_59_0= ruleJvmTypeReference ) ) ( (lv_name_60_0= ruleValidID ) ) ) )";
        }
    }
    static final String dfa_19s = "\7\uffff";
    static final String dfa_20s = "\1\uffff\1\4\1\uffff\1\2\3\uffff";
    static final String dfa_21s = "\1\112\1\4\1\uffff\1\4\1\uffff\2\4";
    static final String dfa_22s = "\2\156\1\uffff\1\156\1\uffff\2\156";
    static final String dfa_23s = "\2\uffff\1\1\1\uffff\1\2\2\uffff";
    static final String dfa_24s = "\7\uffff}>";
    static final String[] dfa_25s = {
            "\1\2\13\uffff\1\2\27\uffff\1\1",
            "\1\4\1\uffff\12\4\3\uffff\3\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\6\uffff\1\4\7\uffff\1\4\4\uffff\2\4\17\uffff\1\4\13\uffff\1\4\5\uffff\1\2\2\uffff\1\4\1\2\1\4\2\uffff\1\4\1\2\3\uffff\1\4\4\uffff\1\3",
            "",
            "\1\2\1\uffff\12\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff\1\2\4\uffff\2\2\17\uffff\1\2\13\uffff\1\2\5\uffff\1\4\2\uffff\1\2\1\4\1\2\2\uffff\1\2\1\4\3\uffff\1\2\4\uffff\1\5",
            "",
            "\1\4\1\uffff\12\4\3\uffff\3\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\6\uffff\1\4\7\uffff\1\4\4\uffff\2\4\17\uffff\1\4\13\uffff\1\4\5\uffff\1\2\2\uffff\1\4\1\2\1\4\2\uffff\1\4\1\2\3\uffff\1\4\4\uffff\1\6",
            "\1\2\1\uffff\12\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff\1\2\4\uffff\2\2\17\uffff\1\2\13\uffff\1\2\5\uffff\1\4\2\uffff\1\2\1\4\1\2\2\uffff\1\2\1\4\3\uffff\1\2\4\uffff\1\5"
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "1096:3: ( (lv_type_46_0= ruleJvmTypeReference ) )?";
        }
    }
    static final String dfa_26s = "\6\uffff";
    static final String dfa_27s = "\1\2\1\3\4\uffff";
    static final String dfa_28s = "\2\4\2\uffff\2\4";
    static final String dfa_29s = "\2\156\2\uffff\2\156";
    static final String dfa_30s = "\2\uffff\1\2\1\1\2\uffff";
    static final String dfa_31s = "\6\uffff}>";
    static final String[] dfa_32s = {
            "\1\2\1\uffff\12\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff\1\2\4\uffff\2\2\17\uffff\1\2\13\uffff\1\2\10\uffff\1\2\1\uffff\1\2\2\uffff\1\2\4\uffff\1\2\4\uffff\1\1",
            "\1\3\1\uffff\12\3\3\uffff\3\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\6\uffff\1\3\7\uffff\1\3\4\uffff\2\3\17\uffff\1\3\13\uffff\1\3\5\uffff\1\2\2\uffff\1\3\1\2\1\3\2\uffff\1\3\1\2\3\uffff\1\3\4\uffff\1\4",
            "",
            "",
            "\1\2\1\uffff\12\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff\1\2\4\uffff\2\2\17\uffff\1\2\13\uffff\1\2\5\uffff\1\3\2\uffff\1\2\1\3\1\2\2\uffff\1\2\1\3\3\uffff\1\2\4\uffff\1\5",
            "\1\3\1\uffff\12\3\3\uffff\3\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\6\uffff\1\3\7\uffff\1\3\4\uffff\2\3\17\uffff\1\3\13\uffff\1\3\5\uffff\1\2\2\uffff\1\3\1\2\1\3\2\uffff\1\3\1\2\3\uffff\1\3\4\uffff\1\4"
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "1204:2: ( (lv_name_52_0= ruleValidID ) )?";
        }
    }
    static final String dfa_33s = "\1\2\1\4\4\uffff";
    static final String dfa_34s = "\2\4\1\uffff\1\4\1\uffff\1\4";
    static final String dfa_35s = "\2\156\1\uffff\1\156\1\uffff\1\156";
    static final String dfa_36s = "\2\uffff\1\2\1\uffff\1\1\1\uffff";
    static final String[] dfa_37s = {
            "\1\2\1\uffff\12\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff\1\2\4\uffff\2\2\17\uffff\1\2\13\uffff\1\2\10\uffff\1\2\1\uffff\1\2\2\uffff\1\2\4\uffff\1\2\4\uffff\1\1",
            "\1\4\1\uffff\12\4\3\uffff\3\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\6\uffff\1\4\7\uffff\1\4\4\uffff\2\4\17\uffff\1\4\13\uffff\1\4\5\uffff\1\2\2\uffff\1\4\1\2\1\4\2\uffff\1\4\1\2\3\uffff\1\4\4\uffff\1\3",
            "",
            "\1\2\1\uffff\12\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff\1\2\4\uffff\2\2\17\uffff\1\2\13\uffff\1\2\5\uffff\1\4\2\uffff\1\2\1\4\1\2\2\uffff\1\2\1\4\3\uffff\1\2\4\uffff\1\5",
            "",
            "\1\4\1\uffff\12\4\3\uffff\3\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\6\uffff\1\4\7\uffff\1\4\4\uffff\2\4\17\uffff\1\4\13\uffff\1\4\5\uffff\1\2\2\uffff\1\4\1\2\1\4\2\uffff\1\4\1\2\3\uffff\1\4\4\uffff\1\3"
    };
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[][] dfa_37 = unpackEncodedStringArray(dfa_37s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_26;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_31;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "1311:2: ( (lv_name_58_0= ruleValidID ) )?";
        }
    }
    static final String dfa_38s = "\43\uffff";
    static final String dfa_39s = "\1\4\30\uffff\1\0\11\uffff";
    static final String dfa_40s = "\1\171\30\uffff\1\0\11\uffff";
    static final String dfa_41s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\13\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\10\1\11";
    static final String dfa_42s = "\31\uffff\1\0\11\uffff}>";
    static final String[] dfa_43s = {
            "\1\4\1\uffff\1\5\12\uffff\1\5\4\uffff\1\40\1\uffff\1\5\2\uffff\1\35\1\uffff\1\5\1\3\1\uffff\1\14\3\uffff\1\14\1\uffff\1\5\1\34\1\32\4\uffff\2\14\6\uffff\1\31\1\1\1\uffff\1\36\26\uffff\1\33\1\30\2\uffff\1\14\2\uffff\1\37\11\uffff\1\5\4\uffff\1\14\1\uffff\1\2\6\uffff\1\5\3\uffff\2\14\2\uffff\4\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_38;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "1759:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression | this_Assertion_15= ruleAssertion )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_25 = input.LA(1);

                         
                        int index56_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalSpecParser()) ) {s = 33;}

                        else if ( (synpred82_InternalSpecParser()) ) {s = 34;}

                         
                        input.seek(index56_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\14\uffff";
    static final String dfa_45s = "\1\1\13\uffff";
    static final String dfa_46s = "\1\4\1\uffff\6\0\4\uffff";
    static final String dfa_47s = "\1\171\1\uffff\6\0\4\uffff";
    static final String dfa_48s = "\1\uffff\1\5\6\uffff\1\4\1\1\1\2\1\3";
    static final String dfa_49s = "\2\uffff\1\4\1\5\1\2\1\3\1\0\1\1\4\uffff}>";
    static final String[] dfa_50s = {
            "\1\1\1\6\26\1\1\4\2\1\1\5\12\1\1\uffff\5\1\1\uffff\2\1\1\uffff\3\1\1\uffff\23\1\1\7\11\1\1\uffff\12\1\1\2\1\uffff\1\3\1\uffff\6\1\4\uffff\1\1\3\uffff\10\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_44;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "()* loopback of 2015:1: ( ( ( ( ( () ( ( ruleShould ) ) ) )=> ( () ( ( ruleShould ) ) ) ) ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )? ) | ( ( ( ( () ( ( Should Throw ) | Throws ) ) )=> ( () ( (otherlv_5= Should otherlv_6= Throw ) | otherlv_7= Throws ) ) ) ( (lv_type_8_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () Instanceof ) )=> ( () otherlv_10= Instanceof ) ) ( (lv_type_11_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_14_0= ruleXOtherOperatorExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_6 = input.LA(1);

                         
                        int index59_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSpecParser()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index59_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA59_7 = input.LA(1);

                         
                        int index59_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSpecParser()) ) {s = 8;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index59_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA59_4 = input.LA(1);

                         
                        int index59_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalSpecParser()) ) {s = 9;}

                        else if ( (synpred95_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index59_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA59_5 = input.LA(1);

                         
                        int index59_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index59_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA59_2 = input.LA(1);

                         
                        int index59_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSpecParser()) ) {s = 8;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index59_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA59_3 = input.LA(1);

                         
                        int index59_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSpecParser()) ) {s = 8;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index59_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\153\uffff";
    static final String dfa_52s = "\1\44\152\uffff";
    static final String dfa_53s = "\1\4\43\0\107\uffff";
    static final String dfa_54s = "\1\171\43\0\107\uffff";
    static final String dfa_55s = "\44\uffff\1\2\105\uffff\1\1";
    static final String dfa_56s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\107\uffff}>";
    static final String[] dfa_57s = {
            "\1\7\1\44\1\15\12\44\1\12\4\44\1\43\1\44\1\14\2\44\1\40\1\44\1\13\1\6\1\44\1\32\3\44\1\21\1\44\1\16\1\37\1\35\1\44\1\uffff\2\44\1\26\1\22\1\44\1\uffff\2\44\1\uffff\1\44\1\34\1\4\1\uffff\1\41\26\44\1\36\1\33\1\44\1\1\1\17\1\44\1\uffff\1\42\2\44\1\3\1\44\1\2\4\44\1\10\1\uffff\1\44\1\uffff\1\44\1\20\1\44\1\5\2\44\4\uffff\1\11\3\uffff\1\30\1\31\2\44\1\23\1\24\1\25\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "2049:4: ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_1 = input.LA(1);

                         
                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_2 = input.LA(1);

                         
                        int index57_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA57_3 = input.LA(1);

                         
                        int index57_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA57_4 = input.LA(1);

                         
                        int index57_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA57_5 = input.LA(1);

                         
                        int index57_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA57_6 = input.LA(1);

                         
                        int index57_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA57_7 = input.LA(1);

                         
                        int index57_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA57_8 = input.LA(1);

                         
                        int index57_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA57_9 = input.LA(1);

                         
                        int index57_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA57_10 = input.LA(1);

                         
                        int index57_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA57_11 = input.LA(1);

                         
                        int index57_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA57_12 = input.LA(1);

                         
                        int index57_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA57_13 = input.LA(1);

                         
                        int index57_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA57_14 = input.LA(1);

                         
                        int index57_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA57_15 = input.LA(1);

                         
                        int index57_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA57_16 = input.LA(1);

                         
                        int index57_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA57_17 = input.LA(1);

                         
                        int index57_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA57_18 = input.LA(1);

                         
                        int index57_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA57_19 = input.LA(1);

                         
                        int index57_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA57_20 = input.LA(1);

                         
                        int index57_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA57_21 = input.LA(1);

                         
                        int index57_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA57_22 = input.LA(1);

                         
                        int index57_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA57_23 = input.LA(1);

                         
                        int index57_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA57_24 = input.LA(1);

                         
                        int index57_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA57_25 = input.LA(1);

                         
                        int index57_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA57_26 = input.LA(1);

                         
                        int index57_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA57_27 = input.LA(1);

                         
                        int index57_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA57_28 = input.LA(1);

                         
                        int index57_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA57_29 = input.LA(1);

                         
                        int index57_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA57_30 = input.LA(1);

                         
                        int index57_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA57_31 = input.LA(1);

                         
                        int index57_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA57_32 = input.LA(1);

                         
                        int index57_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA57_33 = input.LA(1);

                         
                        int index57_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA57_34 = input.LA(1);

                         
                        int index57_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA57_35 = input.LA(1);

                         
                        int index57_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index57_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\1\2\42\uffff";
    static final String dfa_59s = "\1\4\1\0\41\uffff";
    static final String dfa_60s = "\1\156\1\0\41\uffff";
    static final String dfa_61s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_62s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_63s = {
            "\1\2\1\uffff\12\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff\1\2\4\uffff\2\2\17\uffff\1\2\13\uffff\1\1\1\2\2\uffff\1\2\11\uffff\1\2\1\uffff\1\2\7\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_38;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "3286:2: ( ( ( LeftParenthesis )=>otherlv_3= LeftParenthesis ) ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_1 = input.LA(1);

                         
                        int index77_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSpecParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index77_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\47\uffff";
    static final String dfa_65s = "\1\4\1\0\45\uffff";
    static final String dfa_66s = "\1\171\1\0\45\uffff";
    static final String dfa_67s = "\2\uffff\1\2\42\uffff\1\3\1\1";
    static final String dfa_68s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_69s = {
            "\1\2\1\uffff\1\2\12\uffff\1\2\4\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\1\2\1\uffff\3\2\4\uffff\2\2\6\uffff\2\2\1\uffff\1\2\26\uffff\2\2\1\uffff\2\2\2\uffff\1\2\1\45\1\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\2\2\1\uffff\1\2\6\uffff\1\1\3\uffff\2\2\2\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "3293:2: ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalSpecParser()) ) {s = 38;}

                        else if ( (synpred131_InternalSpecParser()) ) {s = 2;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\46\uffff";
    static final String dfa_71s = "\1\4\1\0\44\uffff";
    static final String dfa_72s = "\1\171\1\0\44\uffff";
    static final String dfa_73s = "\2\uffff\1\2\42\uffff\1\1";
    static final String dfa_74s = "\1\uffff\1\0\44\uffff}>";
    static final String[] dfa_75s = {
            "\1\2\1\uffff\1\2\12\uffff\1\2\4\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\1\2\1\uffff\3\2\4\uffff\2\2\6\uffff\2\2\1\uffff\1\2\26\uffff\2\2\1\uffff\1\2\1\1\2\uffff\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\2\2\1\uffff\1\2\6\uffff\1\2\3\uffff\2\2\2\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "3463:1: ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= Comma ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_1 = input.LA(1);

                         
                        int index82_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalSpecParser()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index82_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "3599:1: ( ( ( ( ( () NumberSign LeftSquareBracket ) )=> ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= RightSquareBracket ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_1 = input.LA(1);

                         
                        int index85_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalSpecParser()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index85_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_76s = "\12\uffff";
    static final String dfa_77s = "\1\10\11\uffff";
    static final String dfa_78s = "\1\4\7\0\2\uffff";
    static final String dfa_79s = "\1\171\7\0\2\uffff";
    static final String dfa_80s = "\10\uffff\1\2\1\1";
    static final String dfa_81s = "\1\uffff\1\1\1\5\1\2\1\6\1\3\1\0\1\4\2\uffff}>";
    static final String[] dfa_82s = {
            "\46\10\1\uffff\5\10\1\uffff\2\10\1\uffff\3\10\1\uffff\4\10\1\5\2\10\1\3\1\10\1\1\1\10\1\2\2\10\1\4\16\10\1\uffff\12\10\1\6\1\uffff\1\7\1\uffff\6\10\4\uffff\1\10\3\uffff\10\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "3852:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_6 = input.LA(1);

                         
                        int index87_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpecParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index87_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_1 = input.LA(1);

                         
                        int index87_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpecParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index87_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_3 = input.LA(1);

                         
                        int index87_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpecParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index87_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_5 = input.LA(1);

                         
                        int index87_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpecParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index87_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA87_7 = input.LA(1);

                         
                        int index87_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpecParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index87_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA87_2 = input.LA(1);

                         
                        int index87_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpecParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index87_2);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA87_4 = input.LA(1);

                         
                        int index87_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpecParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index87_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_83s = "\13\uffff";
    static final String dfa_84s = "\1\1\12\uffff";
    static final String dfa_85s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_86s = "\1\171\1\uffff\10\0\1\uffff";
    static final String dfa_87s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_88s = "\2\uffff\1\4\1\0\1\6\1\7\1\1\1\5\1\2\1\3\1\uffff}>";
    static final String[] dfa_89s = {
            "\46\1\1\uffff\5\1\1\uffff\1\6\1\1\1\uffff\3\1\1\uffff\14\1\1\5\1\7\2\1\1\10\1\1\1\4\2\1\1\11\7\1\1\uffff\12\1\1\2\1\uffff\1\3\1\uffff\6\1\4\uffff\1\1\3\uffff\10\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_83;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "()* loopback of 4474:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_3 = input.LA(1);

                         
                        int index96_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA96_6 = input.LA(1);

                         
                        int index96_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA96_8 = input.LA(1);

                         
                        int index96_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA96_9 = input.LA(1);

                         
                        int index96_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA96_2 = input.LA(1);

                         
                        int index96_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA96_7 = input.LA(1);

                         
                        int index96_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA96_4 = input.LA(1);

                         
                        int index96_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA96_5 = input.LA(1);

                         
                        int index96_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpecParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_90s = "\1\61\2\uffff\1\105\7\uffff";
    static final String dfa_91s = "\1\142\2\uffff\1\142\7\uffff";
    static final String dfa_92s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_93s = "\13\uffff}>";
    static final String[] dfa_94s = {
            "\1\2\22\uffff\1\1\1\4\2\uffff\1\7\1\uffff\1\5\2\uffff\1\10\22\uffff\1\6\1\uffff\1\3",
            "",
            "",
            "\1\11\34\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[][] dfa_94 = unpackEncodedStringArray(dfa_94s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_83;
            this.eof = dfa_83;
            this.min = dfa_90;
            this.max = dfa_91;
            this.accept = dfa_92;
            this.special = dfa_93;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "4548:1: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )";
        }
    }
    static final String dfa_95s = "\1\2\152\uffff";
    static final String dfa_96s = "\1\4\1\0\151\uffff";
    static final String dfa_97s = "\1\171\1\0\151\uffff";
    static final String dfa_98s = "\2\uffff\1\2\147\uffff\1\1";
    static final String dfa_99s = "\1\uffff\1\0\151\uffff}>";
    static final String[] dfa_100s = {
            "\46\2\1\uffff\5\2\1\uffff\2\2\1\uffff\3\2\1\uffff\35\2\1\uffff\1\1\12\2\1\uffff\1\2\1\uffff\6\2\4\uffff\1\2\3\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_51;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "5481:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_1 = input.LA(1);

                         
                        int index115_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index115_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_101s = "\1\4\2\0\44\uffff";
    static final String dfa_102s = "\1\171\2\0\44\uffff";
    static final String dfa_103s = "\3\uffff\1\1\1\uffff\1\2\40\uffff\1\3";
    static final String dfa_104s = "\1\uffff\1\0\1\1\44\uffff}>";
    static final String[] dfa_105s = {
            "\1\5\1\uffff\1\5\12\uffff\1\5\4\uffff\1\5\1\uffff\1\5\2\uffff\1\5\1\uffff\2\5\1\uffff\1\5\3\uffff\1\5\1\uffff\3\5\4\uffff\2\5\6\uffff\2\5\1\uffff\1\5\21\uffff\1\3\4\uffff\2\5\1\uffff\2\5\2\uffff\1\2\1\46\1\uffff\1\5\1\uffff\1\5\4\uffff\1\5\4\uffff\1\5\1\uffff\1\5\1\3\5\uffff\1\1\3\uffff\2\5\2\uffff\4\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[][] dfa_105 = unpackEncodedStringArray(dfa_105s);

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "5504:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA114_1 = input.LA(1);

                         
                        int index114_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred214_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index114_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA114_2 = input.LA(1);

                         
                        int index114_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred214_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index114_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 114, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_106s = {
            "\46\2\1\uffff\5\2\1\uffff\2\2\1\uffff\3\2\1\uffff\35\2\1\uffff\13\2\1\uffff\1\2\1\uffff\1\2\1\1\4\2\4\uffff\1\2\3\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_106 = unpackEncodedStringArray(dfa_106s);

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = dfa_51;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "5587:3: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_1 = input.LA(1);

                         
                        int index116_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index116_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_107s = "\51\uffff";
    static final String dfa_108s = "\1\4\2\0\46\uffff";
    static final String dfa_109s = "\1\171\2\0\46\uffff";
    static final String dfa_110s = "\3\uffff\2\1\1\2\43\uffff";
    static final String dfa_111s = "\1\0\1\1\1\2\46\uffff}>";
    static final String[] dfa_112s = {
            "\1\5\1\uffff\1\5\12\uffff\1\5\4\uffff\1\5\1\uffff\1\5\2\uffff\1\5\1\uffff\2\5\1\uffff\1\5\3\uffff\1\5\1\uffff\3\5\4\uffff\2\5\6\uffff\2\5\1\uffff\3\5\17\uffff\1\3\4\uffff\2\5\1\uffff\2\5\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\4\uffff\1\5\4\uffff\3\5\1\4\5\uffff\1\1\3\uffff\2\5\2\uffff\4\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = dfa_107;
            this.eof = dfa_107;
            this.min = dfa_108;
            this.max = dfa_109;
            this.accept = dfa_110;
            this.special = dfa_111;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "5978:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_0 = input.LA(1);

                         
                        int index126_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA126_0==RULE_ID) ) {s = 1;}

                        else if ( (LA126_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA126_0==EqualsSignGreaterThanSign) && (synpred233_InternalSpecParser())) {s = 3;}

                        else if ( (LA126_0==VerticalLine) && (synpred233_InternalSpecParser())) {s = 4;}

                        else if ( (LA126_0==Synchronized||LA126_0==Extension||LA126_0==Extends||LA126_0==Assert||LA126_0==Import||LA126_0==Return||(LA126_0>=Static && LA126_0<=Switch)||LA126_0==Typeof||LA126_0==False||(LA126_0>=Super && LA126_0<=While)||(LA126_0>=Null && LA126_0<=True)||(LA126_0>=For && LA126_0<=New)||(LA126_0>=Try && LA126_0<=Var)||(LA126_0>=Do && LA126_0<=If)||(LA126_0>=ExclamationMark && LA126_0<=NumberSign)||LA126_0==PlusSign||LA126_0==HyphenMinus||LA126_0==LessThanSign||(LA126_0>=LeftSquareBracket && LA126_0<=LeftCurlyBracket)||(LA126_0>=RULE_RICH_TEXT && LA126_0<=RULE_RICH_TEXT_START)||(LA126_0>=RULE_HEX && LA126_0<=RULE_STRING)) ) {s = 5;}

                         
                        input.seek(index126_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA126_1 = input.LA(1);

                         
                        int index126_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalSpecParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index126_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA126_2 = input.LA(1);

                         
                        int index126_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalSpecParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index126_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_113s = {
            "\1\2\1\uffff\1\2\12\uffff\1\2\4\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\1\2\1\uffff\3\2\4\uffff\2\2\6\uffff\2\2\1\uffff\1\2\21\uffff\1\2\4\uffff\2\2\1\uffff\2\2\2\uffff\1\1\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\4\uffff\1\2\1\uffff\1\2\6\uffff\1\2\3\uffff\2\2\2\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA133 extends DFA {

        public DFA133(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 133;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "6435:1: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA133_1 = input.LA(1);

                         
                        int index133_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred246_InternalSpecParser()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index133_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 133, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\1\4\2\0\42\uffff";
    static final String dfa_115s = "\1\171\2\0\42\uffff";
    static final String dfa_116s = "\3\uffff\1\1\1\2\40\uffff";
    static final String dfa_117s = "\1\0\1\1\1\2\42\uffff}>";
    static final String[] dfa_118s = {
            "\1\4\1\uffff\1\4\12\uffff\1\4\4\uffff\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\1\4\1\uffff\3\4\4\uffff\2\4\6\uffff\2\4\1\uffff\1\4\21\uffff\1\3\4\uffff\2\4\1\uffff\2\4\2\uffff\1\2\2\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\1\4\1\uffff\1\4\6\uffff\1\1\3\uffff\2\4\2\uffff\4\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "6495:7: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA132_0 = input.LA(1);

                         
                        int index132_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA132_0==RULE_ID) ) {s = 1;}

                        else if ( (LA132_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA132_0==EqualsSignGreaterThanSign) && (synpred247_InternalSpecParser())) {s = 3;}

                        else if ( (LA132_0==Synchronized||LA132_0==Extension||LA132_0==Extends||LA132_0==Assert||LA132_0==Import||LA132_0==Return||(LA132_0>=Static && LA132_0<=Switch)||LA132_0==Typeof||LA132_0==False||(LA132_0>=Super && LA132_0<=While)||(LA132_0>=Null && LA132_0<=True)||(LA132_0>=For && LA132_0<=New)||LA132_0==Try||(LA132_0>=Do && LA132_0<=If)||(LA132_0>=ExclamationMark && LA132_0<=NumberSign)||LA132_0==PlusSign||LA132_0==HyphenMinus||LA132_0==LessThanSign||LA132_0==LeftSquareBracket||LA132_0==LeftCurlyBracket||(LA132_0>=RULE_RICH_TEXT && LA132_0<=RULE_RICH_TEXT_START)||(LA132_0>=RULE_HEX && LA132_0<=RULE_STRING)) ) {s = 4;}

                         
                        input.seek(index132_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA132_1 = input.LA(1);

                         
                        int index132_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalSpecParser()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index132_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA132_2 = input.LA(1);

                         
                        int index132_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalSpecParser()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index132_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 132, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_51;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "7625:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA155_1 = input.LA(1);

                         
                        int index155_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index155_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 155, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "7648:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_1 = input.LA(1);

                         
                        int index154_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred275_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index154_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA154_2 = input.LA(1);

                         
                        int index154_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred275_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index154_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_51;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "7731:3: ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_1 = input.LA(1);

                         
                        int index156_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred277_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index156_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_119s = {
            "\46\2\1\uffff\5\2\1\uffff\2\2\1\uffff\3\2\1\uffff\35\2\1\uffff\12\2\1\1\1\uffff\1\2\1\uffff\6\2\4\uffff\1\2\3\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_119 = unpackEncodedStringArray(dfa_119s);

    class DFA160 extends DFA {

        public DFA160(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 160;
            this.eot = dfa_51;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "7907:2: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA160_1 = input.LA(1);

                         
                        int index160_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index160_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 160, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_51;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "7960:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA163_1 = input.LA(1);

                         
                        int index163_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred293_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index163_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 163, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "7983:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_1 = input.LA(1);

                         
                        int index162_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred292_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index162_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA162_2 = input.LA(1);

                         
                        int index162_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred292_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index162_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_51;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "8066:3: ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_1 = input.LA(1);

                         
                        int index164_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index164_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_120s = {
            "\1\14\1\44\1\5\12\44\1\2\4\44\1\43\1\44\1\4\2\44\1\40\1\44\1\3\1\13\1\44\1\32\3\44\1\21\1\44\1\16\1\37\1\35\1\44\1\uffff\2\44\1\26\1\22\1\44\1\uffff\2\44\1\uffff\1\44\1\34\1\11\1\uffff\1\41\26\44\1\36\1\33\1\44\1\6\1\17\1\44\1\uffff\1\42\2\44\1\10\1\44\1\7\4\44\1\15\1\uffff\1\44\1\uffff\1\44\1\20\1\44\1\12\2\44\4\uffff\1\1\3\uffff\1\30\1\31\2\44\1\23\1\24\1\25\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "8392:1: ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | LeftCurlyBracket | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | Assert | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA167_1 = input.LA(1);

                         
                        int index167_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA167_2 = input.LA(1);

                         
                        int index167_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA167_3 = input.LA(1);

                         
                        int index167_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA167_4 = input.LA(1);

                         
                        int index167_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA167_5 = input.LA(1);

                         
                        int index167_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA167_6 = input.LA(1);

                         
                        int index167_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA167_7 = input.LA(1);

                         
                        int index167_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA167_8 = input.LA(1);

                         
                        int index167_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA167_9 = input.LA(1);

                         
                        int index167_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA167_10 = input.LA(1);

                         
                        int index167_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA167_11 = input.LA(1);

                         
                        int index167_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA167_12 = input.LA(1);

                         
                        int index167_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA167_13 = input.LA(1);

                         
                        int index167_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA167_14 = input.LA(1);

                         
                        int index167_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA167_15 = input.LA(1);

                         
                        int index167_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA167_16 = input.LA(1);

                         
                        int index167_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA167_17 = input.LA(1);

                         
                        int index167_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA167_18 = input.LA(1);

                         
                        int index167_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA167_19 = input.LA(1);

                         
                        int index167_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA167_20 = input.LA(1);

                         
                        int index167_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA167_21 = input.LA(1);

                         
                        int index167_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA167_22 = input.LA(1);

                         
                        int index167_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA167_23 = input.LA(1);

                         
                        int index167_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA167_24 = input.LA(1);

                         
                        int index167_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA167_25 = input.LA(1);

                         
                        int index167_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA167_26 = input.LA(1);

                         
                        int index167_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA167_27 = input.LA(1);

                         
                        int index167_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA167_28 = input.LA(1);

                         
                        int index167_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA167_29 = input.LA(1);

                         
                        int index167_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA167_30 = input.LA(1);

                         
                        int index167_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA167_31 = input.LA(1);

                         
                        int index167_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA167_32 = input.LA(1);

                         
                        int index167_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA167_33 = input.LA(1);

                         
                        int index167_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA167_34 = input.LA(1);

                         
                        int index167_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA167_35 = input.LA(1);

                         
                        int index167_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSpecParser()) ) {s = 106;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index167_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 167, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_121s = "\156\uffff";
    static final String dfa_122s = "\1\2\155\uffff";
    static final String dfa_123s = "\1\4\1\0\154\uffff";
    static final String dfa_124s = "\1\171\1\0\154\uffff";
    static final String dfa_125s = "\2\uffff\1\2\152\uffff\1\1";
    static final String dfa_126s = "\1\uffff\1\0\154\uffff}>";
    static final String[] dfa_127s = {
            "\46\2\1\uffff\10\2\1\uffff\3\2\1\uffff\50\2\1\1\2\2\1\uffff\6\2\4\uffff\1\2\3\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[][] dfa_127 = unpackEncodedStringArray(dfa_127s);

    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = dfa_121;
            this.eof = dfa_122;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "9114:2: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA185_1 = input.LA(1);

                         
                        int index185_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalSpecParser()) ) {s = 109;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index185_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 185, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = dfa_121;
            this.eof = dfa_122;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "9203:2: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA183_1 = input.LA(1);

                         
                        int index183_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred354_InternalSpecParser()) ) {s = 109;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index183_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 183, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_128s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_129s = "\1\35\1\uffff\1\12\1\130\1\uffff\1\12\1\uffff";
    static final String dfa_130s = "\1\156\1\uffff\1\144\1\156\1\uffff\1\144\1\uffff";
    static final String dfa_131s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String[] dfa_132s = {
            "\1\1\120\uffff\1\2",
            "",
            "\1\4\15\uffff\1\4\103\uffff\1\3\2\uffff\1\4\4\uffff\1\4",
            "\1\6\25\uffff\1\5",
            "",
            "\1\4\15\uffff\1\4\103\uffff\1\3\2\uffff\1\4\4\uffff\1\4",
            ""
    };
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA195 extends DFA {

        public DFA195(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 195;
            this.eot = dfa_19;
            this.eof = dfa_128;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_131;
            this.special = dfa_24;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "9800:1: ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
    static final String dfa_133s = "\1\44\44\uffff";
    static final String dfa_134s = "\1\4\44\uffff";
    static final String dfa_135s = "\1\171\44\uffff";
    static final String dfa_136s = "\1\uffff\43\1\1\2";
    static final String dfa_137s = "\1\0\44\uffff}>";
    static final String[] dfa_138s = {
            "\1\7\1\uffff\1\15\12\uffff\1\12\4\uffff\1\43\1\uffff\1\14\2\uffff\1\40\1\uffff\1\13\1\6\1\uffff\1\32\3\uffff\1\21\1\uffff\1\16\1\37\1\35\4\uffff\1\26\1\22\6\uffff\1\34\1\4\1\uffff\1\41\26\uffff\1\36\1\33\1\uffff\1\1\1\17\2\uffff\1\42\2\uffff\1\3\1\uffff\1\2\4\uffff\1\10\4\uffff\1\20\1\uffff\1\5\6\uffff\1\11\3\uffff\1\30\1\31\2\uffff\1\23\1\24\1\25\1\27",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[][] dfa_138 = unpackEncodedStringArray(dfa_138s);

    class DFA242 extends DFA {

        public DFA242(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 242;
            this.eot = dfa_7;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "2049:4: ( ( ( ruleXOtherOperatorExpression ) )=> (lv_rightOperand_3_0= ruleXOtherOperatorExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA242_0 = input.LA(1);

                         
                        int index242_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA242_0==ExclamationMark) && (synpred90_InternalSpecParser())) {s = 1;}

                        else if ( (LA242_0==HyphenMinus) && (synpred90_InternalSpecParser())) {s = 2;}

                        else if ( (LA242_0==PlusSign) && (synpred90_InternalSpecParser())) {s = 3;}

                        else if ( (LA242_0==New) && (synpred90_InternalSpecParser())) {s = 4;}

                        else if ( (LA242_0==LeftCurlyBracket) && (synpred90_InternalSpecParser())) {s = 5;}

                        else if ( (LA242_0==Switch) && (synpred90_InternalSpecParser())) {s = 6;}

                        else if ( (LA242_0==Synchronized) && (synpred90_InternalSpecParser())) {s = 7;}

                        else if ( (LA242_0==LessThanSign) && (synpred90_InternalSpecParser())) {s = 8;}

                        else if ( (LA242_0==RULE_ID) && (synpred90_InternalSpecParser())) {s = 9;}

                        else if ( (LA242_0==Extends) && (synpred90_InternalSpecParser())) {s = 10;}

                        else if ( (LA242_0==Static) && (synpred90_InternalSpecParser())) {s = 11;}

                        else if ( (LA242_0==Import) && (synpred90_InternalSpecParser())) {s = 12;}

                        else if ( (LA242_0==Extension) && (synpred90_InternalSpecParser())) {s = 13;}

                        else if ( (LA242_0==Super) && (synpred90_InternalSpecParser())) {s = 14;}

                        else if ( (LA242_0==NumberSign) && (synpred90_InternalSpecParser())) {s = 15;}

                        else if ( (LA242_0==LeftSquareBracket) && (synpred90_InternalSpecParser())) {s = 16;}

                        else if ( (LA242_0==False) && (synpred90_InternalSpecParser())) {s = 17;}

                        else if ( (LA242_0==True) && (synpred90_InternalSpecParser())) {s = 18;}

                        else if ( (LA242_0==RULE_HEX) && (synpred90_InternalSpecParser())) {s = 19;}

                        else if ( (LA242_0==RULE_INT) && (synpred90_InternalSpecParser())) {s = 20;}

                        else if ( (LA242_0==RULE_DECIMAL) && (synpred90_InternalSpecParser())) {s = 21;}

                        else if ( (LA242_0==Null) && (synpred90_InternalSpecParser())) {s = 22;}

                        else if ( (LA242_0==RULE_STRING) && (synpred90_InternalSpecParser())) {s = 23;}

                        else if ( (LA242_0==RULE_RICH_TEXT) && (synpred90_InternalSpecParser())) {s = 24;}

                        else if ( (LA242_0==RULE_RICH_TEXT_START) && (synpred90_InternalSpecParser())) {s = 25;}

                        else if ( (LA242_0==Typeof) && (synpred90_InternalSpecParser())) {s = 26;}

                        else if ( (LA242_0==If) && (synpred90_InternalSpecParser())) {s = 27;}

                        else if ( (LA242_0==For) && (synpred90_InternalSpecParser())) {s = 28;}

                        else if ( (LA242_0==While) && (synpred90_InternalSpecParser())) {s = 29;}

                        else if ( (LA242_0==Do) && (synpred90_InternalSpecParser())) {s = 30;}

                        else if ( (LA242_0==Throw) && (synpred90_InternalSpecParser())) {s = 31;}

                        else if ( (LA242_0==Return) && (synpred90_InternalSpecParser())) {s = 32;}

                        else if ( (LA242_0==Try) && (synpred90_InternalSpecParser())) {s = 33;}

                        else if ( (LA242_0==LeftParenthesis) && (synpred90_InternalSpecParser())) {s = 34;}

                        else if ( (LA242_0==Assert) && (synpred90_InternalSpecParser())) {s = 35;}

                        else if ( (LA242_0==EOF) ) {s = 36;}

                         
                        input.seek(index242_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 242, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA249 extends DFA {

        public DFA249(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 249;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "3293:2: ( ( ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= Comma ( ( ( ( ( ruleValidID ) ) EqualsSign ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA249_1 = input.LA(1);

                         
                        int index249_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalSpecParser()) ) {s = 38;}

                        else if ( (synpred131_InternalSpecParser()) ) {s = 2;}

                         
                        input.seek(index249_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 249, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA268 extends DFA {

        public DFA268(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 268;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "5504:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA268_1 = input.LA(1);

                         
                        int index268_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred214_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index268_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA268_2 = input.LA(1);

                         
                        int index268_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred214_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index268_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 268, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA273 extends DFA {

        public DFA273(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 273;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "5504:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA273_1 = input.LA(1);

                         
                        int index273_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred214_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index273_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA273_2 = input.LA(1);

                         
                        int index273_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred214_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index273_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 273, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA296 extends DFA {

        public DFA296(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 296;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "7648:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA296_1 = input.LA(1);

                         
                        int index296_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred275_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index296_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA296_2 = input.LA(1);

                         
                        int index296_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred275_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index296_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 296, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA303 extends DFA {

        public DFA303(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 303;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "7983:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA303_1 = input.LA(1);

                         
                        int index303_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred292_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index303_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA303_2 = input.LA(1);

                         
                        int index303_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalSpecParser()) ) {s = 3;}

                        else if ( (synpred292_InternalSpecParser()) ) {s = 5;}

                         
                        input.seek(index303_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 303, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000001000402L,0x0000001000000000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000402L,0x0000001000000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000400L,0x0000001000000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0200408000400400L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0200008000000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0610102A26B8FFD0L,0x0000421000400400L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000400000800000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000004800000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000002L,0x0000002100000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000004000020000L,0x0000400800000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000404000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000004000020000L,0x0000400000000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0610102A26B8FFD0L,0x0000401000400400L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000100800000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x016061D169420050L,0x03CC40A10A4D8000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x016865D169420050L,0x03CC40A10A4D8000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0200408000000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000408000000000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000030000000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000430000400400L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0600002026286BD0L,0x0000400000400400L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000002026286B90L,0x0000400000400400L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0600002026286B90L,0x0000400000400400L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000002L,0x0000400280000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000002026286BD0L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0610102A26B8FFD0L,0x0000401100400400L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000400000400400L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000040L,0x0000401000C00400L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000040L,0x0000401000400400L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000080000002L,0x020C008080000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000002L,0x020C008084000000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000090000022L,0x0000000500000800L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x016061D1F9420072L,0x03CC40A50A4D8800L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000008000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0080000000000000L,0x0000400000000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x016061D169420052L,0x03CC40A10A4D8000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000401000400400L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0001000000000000L,0x0000400000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x076061D169420050L,0x03FC40A10A4D8000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x016061D169420050L,0x03CC40B10ACD8000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x016061D169420050L,0x03CC40B10A4D8000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x016061D169420050L,0x03CC40F10A4D8000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000004004000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x9000000000000002L,0x000000050000004AL});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000800L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0804800000000002L,0x0000000000000200L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0002000000000002L,0x0000000500002530L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000400L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000002L,0x000000000A000000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x4000000000000002L,0x0000000021100000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000005L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000002L,0x0000000010001080L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000021020040L,0x0000400000000000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000004021020040L,0x0000400100000000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000400800400400L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x0000002010401080L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x016061D169420050L,0x03CC41A10ACD8400L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000002L,0x0000002010001080L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x016061D169420050L,0x03CC42A10A4D8000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000020004000000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x016061D169420050L,0x03CC40E10A4D8000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x076061D169420050L,0x03CC41E10A4D8400L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000010004000000L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x076061D169420050L,0x03CC40E10A4D8000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x076061D169420052L,0x03CC40A18A4D8000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x076061D169420052L,0x03CC40A10A4D8000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000080000000002L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x016061D169420050L,0x03CC40A10A4D8400L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000020000010000L,0x0000420044400400L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000020000000000L,0x0000000044000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0000000044000000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x076061D169420050L,0x03CC40A18A4D8000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000000084000000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x076061D169420050L,0x03CC40A10A4D8000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x016061D169420050L,0x03CC40A18A4D8000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x016061D169420050L,0x03CC40A10ACD8000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x076061D169420050L,0x03CC42A10A4D8000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x076061D169420050L,0x03CC42A18A4D8000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000002L,0x0000002000400000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000002100400000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000002000800000L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000400040000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000400040002L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0180000000000000L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000400000C00400L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000000110000000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000004000020002L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000020002L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000001000002L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000020000000L,0x0000400000000000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000040L,0x0000400000000000L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000000L,0x0000400001000000L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    }


}